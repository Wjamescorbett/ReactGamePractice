{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\Game_Project\\\\Game_Project_Frontend\\\\GameFrontEnd\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState } from 'react';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Home from './Home/Home';\nimport Navbar from './Navbar/Navbar';\nimport Layout from './Layout/Layout';\nimport GameBoard from './GameBoard/GameBoard';\nimport RoomTwo from './RoomTwo/RoomTwo';\nimport RoomThree from './RoomThree/RoomThree';\nimport RoomFour from './RoomFour/RoomFour';\nimport RoomFive from './RoomFive/RoomFive';\nimport RoomSix from './RoomSix/RoomSix';\nimport RoomSeven from './RoomSeven/RoomSeven';\nimport RoomEight from './RoomEight/RoomEight';\nimport RoomNine from './RoomNine/RoomNine';\nimport RoomTen from './RoomTen/RoomTen';\nimport RoomEleven from './RoomEleven/RoomEleven';\nimport RoomTwelve from './RoomTwelve/RoomTwelve';\nimport DamageEffects from './DamageEffects/DamageEffects';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // class App extends Component {\n  //     constructor(props) {\n  //         super(props);\n  //         this.state = {\n  //             roomTime: 0,\n  //             roomBreakLoop: 0,\n  //             breakLoop: 0,\n  //             gameTick: -1,\n  //             playerHealth: 0,\n  //             maxPlayerHealth: 0,\n  //             playerAttackLow: 0,\n  //             playerAttackHigh: 0,\n  //             playerSpeed: -1,\n  //             maxPlayerSpeed: 0,\n  //             playerArmor: 0,\n  //             playerCoins: 0,\n  //             playerHealthPotion: 0,\n  //             playerStaminaPotion: 0,\n  //             healthPotionEffect: 25,\n  //             playerDamageDone: 0,\n  //             playerAttackTimerState: 5,\n  //             playerAttackTimerStateMax: 5,\n  //             enemyDamageDone: 0,\n  //             enemyAlive: 0,\n  //             enemyMaxHealth: 0,\n  //             enemyHealth: 0,\n  //             enemyAttackLow: 0,\n  //             enemyAttackHigh: 0,\n  //             enemySpeed: 0,\n  //             enemyMaxSpeed: 0,\n  //             enemyArmor: 0,\n  //             enemyReward: 0,\n  //             enemyRewardCheck: 0,\n  //             enemy2MaxHealth: 0,\n  //             enemy2Health: 0,\n  //             enemy2AttackLow: 0,\n  //             enemy2AttackHigh: 0,\n  //             enemy2Speed: 0,\n  //             enemy2Armor: 0,\n  //             enemy2Reward: 0,\n  //             enemy2RewardCheck: 0,\n  //             enemy3MaxHealth: 0,\n  //             enemy3Health: 0,\n  //             enemy3AttackLow: 0,\n  //             enemy3AttackHigh: 0,\n  //             enemy3Speed: 0,\n  //             enemy3Armor: 0,\n  //             enemy3Reward: 0,\n  //             enemy3RewardCheck: 0,\n  //             numberOfEnemiesInRoom: 0,\n  //             roomTwoStatus: 0,\n  //             roomThreeStatus: 0,\n  //             roomFourStatus: 0,\n  //             roomFiveStatus: 0,\n  //             roomSixStatus: 0,\n  //             roomSevenStatus: 0,\n  //             roomEightStatus: 0,\n  //             roomNineStatus: 0,\n  //             roomTenStatus: 0,\n  //             roomElevenStatus: 0,\n  //             roomTwelveStatus:0,\n  //             currentRoom: 0,\n  //             currentRoomStatus: 0,\n  //             startCombatCheck: false,\n  //             playerAttacked: 1,\n  //         }\n  //     }\n  devButton = () => {\n    this.setState({\n      playerHealth: this.state.maxPlayerHealth,\n      playerAttack: this.state.playerAttack + 5,\n      playerCoins: this.state.playerCoins + 100\n    });\n  };\n\n  useHealthPotion = () => {\n    if (this.state.playerHealthPotion <= 0) {\n      return alert(\"You are out of health potions!\");\n    }\n\n    if (this.state.playerHealth + this.state.healthPotionEffect > this.state.maxPlayerHealth) {\n      this.setState({\n        playerHealthPotion: this.state.playerHealthPotion - 1,\n        playerHealth: this.state.maxPlayerHealth\n      });\n    } else {\n      this.setState({\n        playerHealthPotion: this.state.playerHealthPotion - 1,\n        playerHealth: this.state.playerHealth + this.state.healthPotionEffect\n      });\n    }\n  };\n\n  useStaminaPotion = () => {\n    if (this.state.playerStaminaPotion <= 0) {\n      return alert(\"You are out of stamina potions!\");\n    }\n\n    if (this.state.playerSpeed === this.state.maxPlayerSpeed) {\n      return alert(\"You're already at max speed!\");\n    } else {\n      this.setState({\n        playerStaminaPotion: this.state.playerStaminaPotion - 1,\n        playerSpeed: this.state.maxPlayerSpeed\n      });\n    }\n  };\n\n  buyFromStore = item => {\n    if (item === \"health\") {\n      if (this.state.playerCoins >= 5) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 5,\n          maxPlayerHealth: this.state.maxPlayerHealth + 10\n        });\n      } else {\n        alert(\"You can't afford a health upgrade.\");\n      }\n    }\n\n    if (item === \"attackLow\") {\n      if (this.state.playerCoins >= 6 & this.state.playerAttackLow < this.state.playerAttackHigh) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 6,\n          playerAttackLow: this.state.playerAttackLow + 1\n        });\n      }\n\n      if (this.state.playerAttackLow >= this.state.playerAttackHigh) {\n        alert(\"Your minimum attack can not exceed you maximum attack.\");\n      }\n\n      if (this.state.playerCoins < 6) {\n        alert(\"You can't afford a minimum attack upgrade.\");\n      }\n    }\n\n    if (item === \"attackHigh\") {\n      if (this.state.playerCoins >= 3) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 3,\n          playerAttackHigh: this.state.playerAttackHigh + 1\n        });\n      } else {\n        alert(\"You can't afford a maximum attack upgrade.\");\n      }\n    }\n\n    if (item === \"speed\") {\n      if (this.state.playerCoins >= 2) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 2,\n          maxPlayerSpeed: this.state.maxPlayerSpeed + 1,\n          playerSpeed: this.state.playerSpeed + 1\n        });\n      } else {\n        alert(\"You can't afford a speed upgrade.\");\n      }\n    }\n\n    if (item === \"armor\") {\n      if (this.state.playerCoins >= 3) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 3,\n          playerArmor: this.state.playerArmor + 1\n        });\n      } else {\n        alert(\"You can't afford an armor upgrade.\");\n      }\n    }\n\n    if (item === \"healthPotion\") {\n      if (this.state.playerHealthPotion >= 10) {\n        return alert(\"You can only have up to ten health potions.\");\n      }\n\n      if (this.state.playerCoins >= 2) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 2,\n          playerHealthPotion: this.state.playerHealthPotion + 1\n        });\n      } else {\n        alert(\"You can't afford a health potion.\");\n      }\n    }\n\n    if (item === \"staminaPotion\") {\n      if (this.state.playerStaminaPotion >= 8) {\n        return alert(\"You can only have up to eight stamina potions.\");\n      }\n\n      if (this.state.playerCoins >= 1) {\n        this.setState({\n          playerCoins: this.state.playerCoins - 1,\n          playerStaminaPotion: this.state.playerStaminaPotion + 1\n        });\n      } else {\n        alert(\"You can't afford a stamina potion.\");\n      }\n    }\n  };\n\n  resetRoomStatus = () => {\n    this.setState({\n      roomTwoStatus: 0,\n      roomThreeStatus: 0,\n      roomFiveStatus: 0,\n      roomSixStatus: 0,\n      roomSevenStatus: 0,\n      roomNineStatus: 0,\n      roomTenStatus: 0,\n      roomElevenStatus: 0,\n      enemyRewardCheck: 0,\n      enemy2RewardCheck: 0,\n      enemy3RewardCheck: 0,\n      startCombatCheck: false,\n      playerAttacked: 1,\n      playerSpeed: this.state.maxPlayerSpeed\n    });\n  };\n\n  pickClass = (health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion) => {\n    console.log(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion);\n    this.setState({\n      playerHealth: health,\n      maxPlayerHealth: maxHealth,\n      playerAttackLow: attackLow,\n      playerAttackHigh: attackHigh,\n      playerSpeed: speed,\n      maxPlayerSpeed: maxSpeed,\n      playerArmor: armor,\n      playerCoins: coins,\n      playerHealthPotion: healthPotion,\n      playerStaminaPotion: staminaPotion\n    });\n    this.gameTime();\n  };\n\n  createEnemy = (maxHealth, health, attackLow, attackHigh, speed, armor, reward, maxHealth2, health2, attack2Low, attack2High, speed2, armor2, reward2, maxHealth3, health3, attack3Low, attack3High, speed3, armor3, reward3, numberOfEnemiesInRoom) => {\n    this.setState({\n      enemyMaxHealth: maxHealth,\n      enemyHealth: health,\n      enemyAttackLow: attackLow,\n      enemyAttackHigh: attackHigh,\n      enemySpeed: speed,\n      enemyMaxSpeed: speed,\n      enemyArmor: armor,\n      enemyReward: reward,\n      enemy2MaxHealth: maxHealth2,\n      enemy2Health: health2,\n      enemy2AttackLow: attack2Low,\n      enemy2AttackHigh: attack2High,\n      enemy2Speed: speed2,\n      enemy2Armor: armor2,\n      enemy2Reward: reward2,\n      enemy3MaxHealth: maxHealth3,\n      enemy3Health: health3,\n      enemy3AttackLow: attack3Low,\n      enemy3AttackHigh: attack3High,\n      enemy3Speed: speed3,\n      enemy3Armor: armor3,\n      enemy3Reward: reward3,\n      numberOfEnemiesInRoom: numberOfEnemiesInRoom\n    });\n  }; // *ROOM MOVEMENT, CREATES ENEMIES FOR NEXT ROOM, ACCOUNTS FOR AND CHANGES PLAYER SPEED, STARTS ROOM TIMER\n\n\n  roomMovement = currentRoom => {\n    this.roomTime();\n\n    if (this.state.playerSpeed > 0) {\n      this.setState({\n        currentRoom: currentRoom,\n        playerSpeed: this.state.playerSpeed - 1,\n        enemyRewardCheck: 0,\n        enemy2RewardCheck: 0,\n        enemy3RewardCheck: 0,\n        playerDamageDone: 0,\n        enemyDamageDone: 0,\n        playerAttacked: 1\n      });\n    }\n\n    if (this.state.playerSpeed <= 0) {\n      this.playerHasNoSpeed();\n    } // ?enemyMaxHealth, EnemyHealth, enemyAttackLow, enemyAttackHigh, enemySpeed, enemyArmor, enemyReward\n\n\n    if (currentRoom === 2 & this.state.roomTwoStatus === 0) {\n      this.createEnemy(20, 20, 2, 3, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); //One Circle 20, 2, 3, 1, 1, 1\n    }\n\n    if (currentRoom === 3 & this.state.roomThreeStatus === 0) {\n      this.createEnemy(15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); //One Square 15, 4, 5, 2, 2, 2\n    }\n\n    if (currentRoom === 4 & this.state.roomFourStatus === 0) {\n      this.createEnemy(50, 50, 5, 7, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); //One Boss Triangle\n    }\n\n    if (currentRoom === 5 & this.state.roomFiveStatus === 0) {\n      this.createEnemy(15, 15, 10, 12, 2, 5, 25, 10, 10, 3, 5, 9, 4, 10, 0, 0, 0, 0, 0, 0, 0, 2); //Parallelogram 15, 10, 12, 2, 5, 25 - Trapezium 10, 3, 5, 9, 4, 10\n    }\n\n    if (currentRoom === 6 & this.state.roomSixStatus === 0) {\n      this.createEnemy(20, 20, 2, 3, 1, 1, 1, 20, 20, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2); //Two Circles\n    }\n\n    if (currentRoom === 7 & this.state.roomSevenStatus === 0) {\n      this.createEnemy(15, 15, 4, 5, 2, 2, 2, 15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2); // Two Squares\n    }\n\n    if (currentRoom === 8 & this.state.roomEightStatus === 0) {\n      this.createEnemy(80, 80, 6, 8, 3, 4, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1); //One BOSS pentagon\n    }\n\n    if (currentRoom === 9 & this.state.roomNineStatus === 0) {\n      this.createEnemy(30, 30, 4, 5, 2, 2, 10, 15, 15, 10, 14, 2, 5, 25, 4, 4, 1, 5, 10, 10, 5, 3); //Semi-Circle - Parallelogram - Trapezium\n    }\n\n    if (currentRoom === 10 & this.state.roomTenStatus === 0) {\n      this.createEnemy(100, 100, 4, 7, 2, 2, 20, 100, 100, 4, 7, 2, 2, 20, 0, 0, 0, 0, 0, 0, 0, 2); //Two Hexagons\n    }\n\n    if (currentRoom === 11 & this.state.roomElevenStatus === 0) {\n      this.createEnemy(50, 50, 5, 8, 4, 3, 15, 50, 50, 5, 8, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 2);\n    }\n\n    if (currentRoom === 12 & this.state.roomTwelveStatus === 0) {\n      this.createEnemy(500, 500, 15, 20, 8, 8, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1);\n    }\n  }; // *TIMED COMBAT\n\n\n  startCombat = () => {\n    this.setState({\n      startCombatCheck: true\n    });\n    this.enemyTimedCombatSequenceTest();\n    this.playerAttackTimer(1);\n  };\n\n  playerAttackTimer = charged => {\n    if (this.state.breakLoop < 300 & this.state.playerAttackTimerState > 0 & charged === 1) {\n      this.setState({\n        playerAttackTimerState: this.state.playerAttackTimerState - 1\n      });\n      console.log(\"PLAYER ATTACK TIMER RUNNING\");\n      setTimeout(() => {\n        this.playerAttackTimer(1);\n      }, 1000);\n    } else {\n      this.setState({\n        playerAttackTimerState: this.state.playerAttackTimerStateMax,\n        playerAttacked: 2\n      });\n      return;\n    }\n  };\n\n  rechargeAttackMove = () => {\n    this.setState({\n      playerAttacked: 1\n    });\n    this.playerAttackTimer(1);\n  };\n\n  enemyTimedCombatSequenceTest = () => {\n    if (this.state.breakLoop < 60 & this.state.enemySpeed > -1 & this.state.enemyHealth >= 0) {\n      this.setState({\n        enemySpeed: this.state.enemySpeed - 1\n      });\n\n      if (this.state.enemySpeed === 0) {\n        var currentPlayerAttack = this.playerAttackRandomizer(this.state.playerAttackLow, this.state.playerAttackHigh);\n        this.enemyCounterAttack(currentPlayerAttack);\n        this.setState({\n          enemySpeed: this.state.enemyMaxSpeed\n        });\n      }\n\n      setTimeout(() => {\n        this.enemyTimedCombatSequenceTest();\n      }, 1000);\n      console.log(`timedCombatSequenceTest() is running. EnemySpeed 2 ${this.state.enemySpeed}`);\n    }\n  }; // !END TIMED COMBAT\n\n\n  playerHasNoSpeed = () => {\n    alert(\"You have no more speed! You took 10 damage. Return to Room One or use a stamina potion to regain your speed.\");\n    this.setState({\n      playerHealth: this.state.playerHealth - 10,\n      enemyRewardCheck: 0,\n      enemy2RewardCheck: 0,\n      enemy3RewardCheck: 0\n    });\n  }; // !END ROOM MOVEMENT AND PLAYER SPEED\n  // *BEGINNING OF COMBAT ATTACK SEQUENCE\n\n\n  playerAttackMove = attackEnemy => {\n    var currentPlayerAttack = this.playerAttackRandomizer(this.state.playerAttackLow, this.state.playerAttackHigh);\n\n    if (attackEnemy === 1 & this.state.enemyHealth <= 0) {\n      this.deadCheck(currentPlayerAttack, attackEnemy);\n      alert(\"You killed this enemy!\");\n    }\n\n    if (attackEnemy === 1 & this.state.enemyHealth > 0) {\n      currentPlayerAttack = currentPlayerAttack - this.state.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      this.playerAttackMoveSetState(1, currentPlayerAttack);\n      this.deadCheck(currentPlayerAttack, attackEnemy);\n    }\n\n    if (attackEnemy === 2 & this.state.enemy2Health <= 0) {\n      this.deadCheck(currentPlayerAttack, attackEnemy);\n      alert(\"You killed this enemy!\");\n    }\n\n    if (attackEnemy === 2 & this.state.enemy2Health > 0) {\n      currentPlayerAttack = currentPlayerAttack - this.state.enemy2Armor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      this.playerAttackMoveSetState(2, currentPlayerAttack);\n      this.deadCheck(currentPlayerAttack, attackEnemy);\n    }\n\n    if (attackEnemy === 3 & this.state.enemy3Health <= 0) {\n      this.deadCheck(currentPlayerAttack, attackEnemy);\n      alert(\"You killed this enemy!\");\n    }\n\n    if (attackEnemy === 3 & this.state.enemy3Health > 0) {\n      currentPlayerAttack = currentPlayerAttack - this.state.enemy3Armor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      this.playerAttackMoveSetState(3, currentPlayerAttack);\n      this.deadCheck(currentPlayerAttack, attackEnemy);\n    }\n  };\n\n  playerAttackRandomizer = (playerAttackLow, playerAttackHigh) => {\n    return Math.floor(Math.random() * (playerAttackHigh - playerAttackLow + 1) + playerAttackLow);\n  };\n\n  playerAttackMoveSetState = (attackEnemyNumber, currentPlayerAttack) => {\n    if (attackEnemyNumber === 1) {\n      this.setState({\n        enemyHealth: this.state.enemyHealth - currentPlayerAttack,\n        playerDamageDone: currentPlayerAttack,\n        playerAttacked: 3,\n        playerAttackTimerState: this.state.playerAttackTimerStateMax\n      });\n      this.showToastMessage(currentPlayerAttack, attackEnemyNumber);\n    }\n\n    if (attackEnemyNumber === 2) {\n      this.setState({\n        enemy2Health: this.state.enemy2Health - currentPlayerAttack,\n        playerDamageDone: currentPlayerAttack\n      });\n      this.showToastMessage(currentPlayerAttack, attackEnemyNumber);\n    }\n\n    if (attackEnemyNumber === 3) {\n      this.setState({\n        enemy3Health: this.state.enemy3Health - currentPlayerAttack,\n        playerDamageDone: currentPlayerAttack\n      });\n      this.showToastMessage(currentPlayerAttack, attackEnemyNumber);\n    }\n  };\n\n  deadCheck = (currentPlayerAttack, attackEnemy) => {\n    if (this.state.enemyHealth - currentPlayerAttack <= 0) {\n      if (this.state.enemyRewardCheck === 0 & attackEnemy === 1) {\n        this.deadCheckSetState(1);\n      }\n    }\n\n    if (this.state.enemy2Health - currentPlayerAttack <= 0) {\n      if (this.state.enemy2RewardCheck === 0 & attackEnemy === 2) {\n        this.deadCheckSetState(2);\n      }\n    }\n\n    if (this.state.enemy3Health - currentPlayerAttack <= 0 & attackEnemy === 3) {\n      if (this.state.enemy3RewardCheck === 0) {\n        this.deadCheckSetState(3);\n      }\n    }\n\n    if (this.state.enemyHealth <= 0 & this.state.enemy2Health <= 0 & this.state.enemy3Health <= 0) {\n      this.setCurrentRoomStatusClearEnemy();\n    } // if(this.state.enemyHealth + this.state.enemy2Health + this.state.enemy3Health > 0){\n    //     this.enemyCounterAttack(currentPlayerAttack)\n    // }\n\n  };\n\n  deadCheckSetState = enemyNumber => {\n    if (enemyNumber === 1) {\n      this.setState({\n        playerCoins: this.state.playerCoins + this.state.enemyReward,\n        enemyRewardCheck: 1,\n        enemyHealth: 0\n      });\n    }\n\n    if (enemyNumber === 2) {\n      this.setState({\n        playerCoins: this.state.playerCoins + this.state.enemy2Reward,\n        enemy2RewardCheck: 1,\n        enemy2Health: 0\n      });\n    }\n\n    if (enemyNumber === 3) {\n      this.setState({\n        playerCoins: this.state.playerCoins + this.state.enemy3Reward,\n        enemy3RewardCheck: 1,\n        enemy3Health: 0\n      });\n    }\n  };\n\n  enemyCounterAttack = currentPlayerAttack => {\n    var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh) - this.state.playerArmor;\n    var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh) - this.state.playerArmor;\n    var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh) - this.state.playerArmor;\n    var playerDamageTaken = 0;\n\n    if (currentEnemyAttack <= 0) {\n      currentEnemyAttack = 1;\n    }\n\n    if (currentEnemy2Attack <= 0) {\n      currentEnemy2Attack = 1;\n    }\n\n    if (currentEnemy3Attack <= 0) {\n      currentEnemy3Attack = 1;\n    }\n\n    if (this.state.enemyHealth - currentPlayerAttack > 0) {\n      playerDamageTaken = playerDamageTaken + currentEnemyAttack;\n    }\n\n    if (this.state.enemy2Health - currentPlayerAttack > 0) {\n      playerDamageTaken = playerDamageTaken + currentEnemy2Attack;\n    }\n\n    if (this.state.enemy3Health - currentPlayerAttack > 0) {\n      playerDamageTaken = playerDamageTaken + currentEnemy3Attack;\n    }\n\n    this.playerTakeDamage(playerDamageTaken);\n  };\n\n  currentEnemyAttackRandomizer = (enemyAttackLow, enemyAttackHigh) => {\n    return Math.floor(Math.random() * (enemyAttackHigh - enemyAttackLow + 1) + enemyAttackLow);\n  };\n\n  playerTakeDamage = damageTaken => {\n    this.setState({\n      playerHealth: this.state.playerHealth - damageTaken,\n      enemyDamageDone: damageTaken\n    });\n    this.showToastMessageRed(damageTaken);\n  };\n\n  setCurrentRoomStatusClearEnemy = () => {\n    if (this.state.currentRoom === 2) {\n      this.setState({\n        roomTwoStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 3) {\n      this.setState({\n        roomThreeStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 4) {\n      this.setState({\n        roomFourStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 5) {\n      this.setState({\n        roomFiveStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 6) {\n      this.setState({\n        roomSixStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 7) {\n      this.setState({\n        roomSevenStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 8) {\n      this.setState({\n        roomEightStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 9) {\n      this.setState({\n        roomNineStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 10) {\n      this.setState({\n        roomTenStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 11) {\n      this.setState({\n        roomElevenStatus: 1\n      });\n    }\n\n    if (this.state.currentRoom === 12) {\n      this.setState({\n        roomTwelveStatus: 1\n      });\n    }\n  }; // !END OF ATTACK SEQUENCE\n  // *BEGINNING OF DODGE SEQUENCE\n\n\n  playerDodgeMove = () => {\n    var playerSpeedThisDodgeAttack = Math.floor(Math.random() * (100 - this.state.playerSpeed + 1) + this.state.playerSpeed);\n    var enemySpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemySpeed + 1) + this.state.enemySpeed);\n    var enemy2SpeedThisRound = 0;\n    var enemy3SpeedThisRound = 0;\n    var playerDamageTaken = 0;\n\n    if (this.state.playerSpeed > 0) {\n      if (this.state.enemy2Speed > 0) {\n        enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy2Speed + 1) + this.state.enemy2Speed);\n      }\n\n      if (this.state.enemy3Speed > 0) {\n        enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy3Speed + 1) + this.state.enemy3Speed);\n      }\n\n      console.log(playerSpeedThisDodgeAttack);\n      console.log(enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound);\n\n      if (playerSpeedThisDodgeAttack > enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound) {\n        console.log(\"Successful Dodge\");\n        this.enemyWithMostHealth();\n      }\n\n      if (playerSpeedThisDodgeAttack <= enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound) {\n        console.log(\"Player Missed Dodge\");\n        this.playerMissedDodge();\n      }\n    }\n\n    if (this.state.playerSpeed <= 0) {\n      alert(\"You have no speed to dodge!\");\n    }\n  }; // player attacks enemy with highest health with full attack power if the ransomizer is greater than the enemies; speed \n\n\n  enemyWithMostHealth = () => {\n    var highEnemyHealth = Math.max(this.state.enemyHealth, this.state.enemy2Health, this.state.enemy3Health);\n\n    if (highEnemyHealth === this.state.enemyHealth) {\n      this.setState({\n        enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemyArmor),\n        playerSpeed: this.state.playerSpeed - 1,\n        playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor\n      });\n      return;\n    }\n\n    if (highEnemyHealth === this.state.enemy2Health) {\n      this.setState({\n        enemy2Health: this.state.enemy2Health - (this.state.playerAttackHigh - this.state.enemy2Armor),\n        playerSpeed: this.state.playerSpeed - 1,\n        playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor\n      });\n      return;\n    }\n\n    if (highEnemyHealth === this.state.enemy3Health) {\n      this.setState({\n        enemy3Health: this.state.enemy3Health - (this.state.playerAttackHigh - this.state.enemy3Armor),\n        playerSpeed: this.state.playerSpeed - 1,\n        playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor\n      });\n      return;\n    }\n  };\n\n  playerMissedDodge = () => {\n    var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh);\n    var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh);\n    var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh);\n    var playerDamage = currentEnemyAttack + currentEnemy2Attack + currentEnemy3Attack;\n    this.setState({\n      playerHealth: this.state.playerHealth - playerDamage,\n      playerSpeed: this.state.playerSpeed - 1,\n      enemyDamageDone: playerDamage\n    });\n  }; // !END DODGE SEQUENCE\n\n\n  typeOfEnemyAttack = () => {};\n\n  openChest = () => {\n    if (this.state.currentRoom === 4) {\n      this.setState({\n        healthPotionEffect: this.state.healthPotionEffect + 15,\n        roomFourStatus: 2\n      });\n    }\n\n    if (this.state.currentRoom === 8) {\n      this.setState({\n        healthPotionEffect: this.state.healthPotionEffect + 15,\n        roomEightStatus: 2\n      });\n    }\n\n    if (this.state.currentRoom === 12) {\n      this.setState({\n        healthPotionEffect: this.state.healthPotionEffect + 15,\n        roomTwelveStatus: 2\n      });\n    }\n  }; // *ON-SCREEN PROMPTS\n\n\n  showToastMessage = (currentPlayerAttack, attackEnemyNumber) => {\n    if (attackEnemyNumber === 1) {\n      toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 1 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n\n    if (attackEnemyNumber === 2) {\n      toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 2 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n\n    if (attackEnemyNumber === 3) {\n      toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 3 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n  };\n\n  showToastMessageRed = damageTaken => {\n    toast.error(\"You took \" + damageTaken + \" damage !\", {\n      position: toast.POSITION.TOP_RIGHT\n    });\n  }; //  *GAME TIMER\n\n\n  gameTime = () => {\n    this.timeSetState();\n\n    if (this.state.breakLoop < 300) {\n      console.log(`Break loop is at ${this.state.breakLoop}`);\n      setTimeout(() => {\n        this.gameTime();\n      }, 1000);\n    }\n\n    console.log(`gameTime() is running. gameTick is at ${this.state.gameTick}`);\n  };\n\n  timeSetState = () => {\n    this.setState({\n      breakLoop: this.state.breakLoop + 1,\n      gameTick: this.state.gameTick + 1\n    });\n  }; //  !END GAME TIMER\n  //  *ROOM TIMER\n\n\n  roomTime = () => {\n    this.roomTimeSetState();\n\n    if (this.state.roomBreakLoop < 300) {\n      setTimeout(() => {\n        this.roomTime();\n      }, 1000);\n    }\n\n    console.log(`gameRoomTime() is running. roomTime is at ${this.state.roomTime}`);\n  };\n\n  roomTimeSetState = () => {\n    this.setState({\n      roomTime: this.state.roomTime + 1,\n      roomBreakLoop: this.state.roomBreakLoop + 1\n    });\n  }; // !END ROOM TIMER\n  // render() {\n\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      gameTick: this.state.gameTick,\n      maxPlayerSpeed: this.state.maxPlayerSpeed,\n      healthPotionEffect: this.state.healthPotionEffect,\n      maxHealth: this.state.maxPlayerHealth,\n      useStaminaPotion: this.useStaminaPotion,\n      devButton: this.devButton,\n      useHealthPotion: this.useHealthPotion,\n      playerHealth: this.state.playerHealth,\n      playerAttackLow: this.state.playerAttackLow,\n      playerAttackHigh: this.state.playerAttackHigh,\n      playerSpeed: this.state.playerSpeed,\n      playerArmor: this.state.playerArmor,\n      playerCoins: this.state.playerCoins,\n      playerHealthPotion: this.state.playerHealthPotion,\n      playerStaminaPotion: this.state.playerStaminaPotion,\n      resetRoomStatus: this.resetRoomStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Layout, {\n          showToastMessage: this.showToastMessage,\n          playerHealth: this.state.playerHealth,\n          playerAttackLow: this.state.playerAttackLow,\n          playerAttackHigh: this.state.playerAttackHigh,\n          playerSpeed: this.state.playerSpeed,\n          playerDefense: this.state.playerArmor,\n          playerCoins: this.state.playerCoins,\n          pickClass: this.pickClass\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/GameBoard\",\n        element: /*#__PURE__*/_jsxDEV(GameBoard, {\n          buyFromStore: this.buyFromStore,\n          roomMovement: this.roomMovement,\n          createEnemy: this.createEnemy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/RoomTwo\",\n        element: /*#__PURE__*/_jsxDEV(RoomTwo, {\n          rechargeAttackMove: this.rechargeAttackMove,\n          playerAttacked: this.state.playerAttacked,\n          playerAttackMove: this.playerAttackMove,\n          playerAttackTimerState: this.state.playerAttackTimerState,\n          playerAttackTimerStateMax: this.state.playerAttackTimerStateMax,\n          startCombat: this.startCombat,\n          startCombatCheck: this.state.startCombatCheck,\n          currentRoom: this.state.currentRoom,\n          roomMovement: this.roomMovement,\n          numberOfEnemiesInRoom: this.state.numberOfEnemiesInRoom,\n          playerAttackMove: this.playerAttackMove,\n          playerDodgeMove: this.playerDodgeMove,\n          enemyHealth: this.state.enemyHealth,\n          enemyMaxHealth: this.state.enemyMaxHealth,\n          enemyAttackLow: this.state.enemyAttackLow,\n          enemyAttackHigh: this.state.enemyAttackHigh,\n          enemySpeed: this.state.enemySpeed,\n          enemyMaxSpeed: this.state.enemyMaxSpeed,\n          enemyArmor: this.state.enemyArmor,\n          enemyReward: this.state.enemyReward,\n          roomTwoStatus: this.state.roomTwoStatus,\n          resetRoomStatus: this.resetRoomStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 782,\n    columnNumber: 13\n  }, this); // }\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","ReactDOM","useState","BrowserRouter","Routes","Route","Link","Home","Navbar","Layout","GameBoard","RoomTwo","RoomThree","RoomFour","RoomFive","RoomSix","RoomSeven","RoomEight","RoomNine","RoomTen","RoomEleven","RoomTwelve","DamageEffects","ToastContainer","toast","App","devButton","setState","playerHealth","state","maxPlayerHealth","playerAttack","playerCoins","useHealthPotion","playerHealthPotion","alert","healthPotionEffect","useStaminaPotion","playerStaminaPotion","playerSpeed","maxPlayerSpeed","buyFromStore","item","playerAttackLow","playerAttackHigh","playerArmor","resetRoomStatus","roomTwoStatus","roomThreeStatus","roomFiveStatus","roomSixStatus","roomSevenStatus","roomNineStatus","roomTenStatus","roomElevenStatus","enemyRewardCheck","enemy2RewardCheck","enemy3RewardCheck","startCombatCheck","playerAttacked","pickClass","health","maxHealth","attackLow","attackHigh","speed","maxSpeed","armor","coins","healthPotion","staminaPotion","console","log","gameTime","createEnemy","reward","maxHealth2","health2","attack2Low","attack2High","speed2","armor2","reward2","maxHealth3","health3","attack3Low","attack3High","speed3","armor3","reward3","numberOfEnemiesInRoom","enemyMaxHealth","enemyHealth","enemyAttackLow","enemyAttackHigh","enemySpeed","enemyMaxSpeed","enemyArmor","enemyReward","enemy2MaxHealth","enemy2Health","enemy2AttackLow","enemy2AttackHigh","enemy2Speed","enemy2Armor","enemy2Reward","enemy3MaxHealth","enemy3Health","enemy3AttackLow","enemy3AttackHigh","enemy3Speed","enemy3Armor","enemy3Reward","roomMovement","currentRoom","roomTime","playerDamageDone","enemyDamageDone","playerHasNoSpeed","roomFourStatus","roomEightStatus","roomTwelveStatus","startCombat","enemyTimedCombatSequenceTest","playerAttackTimer","charged","breakLoop","playerAttackTimerState","setTimeout","playerAttackTimerStateMax","rechargeAttackMove","currentPlayerAttack","playerAttackRandomizer","enemyCounterAttack","playerAttackMove","attackEnemy","deadCheck","playerAttackMoveSetState","Math","floor","random","attackEnemyNumber","showToastMessage","deadCheckSetState","setCurrentRoomStatusClearEnemy","enemyNumber","currentEnemyAttack","currentEnemyAttackRandomizer","currentEnemy2Attack","currentEnemy3Attack","playerDamageTaken","playerTakeDamage","damageTaken","showToastMessageRed","playerDodgeMove","playerSpeedThisDodgeAttack","enemySpeedThisRound","enemy2SpeedThisRound","enemy3SpeedThisRound","enemyWithMostHealth","playerMissedDodge","highEnemyHealth","max","playerDamage","typeOfEnemyAttack","openChest","success","position","POSITION","TOP_CENTER","error","TOP_RIGHT","timeSetState","gameTick","roomTimeSetState","roomBreakLoop"],"sources":["C:/Users/freeb/OneDrive/Desktop/Game_Project/Game_Project_Frontend/GameFrontEnd/src/components/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useState } from 'react'\r\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home/Home';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Layout from './Layout/Layout';\r\nimport GameBoard from './GameBoard/GameBoard';\r\nimport RoomTwo from './RoomTwo/RoomTwo';\r\nimport RoomThree from './RoomThree/RoomThree';\r\nimport RoomFour from './RoomFour/RoomFour';\r\nimport RoomFive from './RoomFive/RoomFive';\r\nimport RoomSix from './RoomSix/RoomSix';\r\nimport RoomSeven from './RoomSeven/RoomSeven';\r\nimport RoomEight from './RoomEight/RoomEight';\r\nimport RoomNine from './RoomNine/RoomNine';\r\nimport RoomTen from './RoomTen/RoomTen';\r\nimport RoomEleven from './RoomEleven/RoomEleven';\r\nimport RoomTwelve from './RoomTwelve/RoomTwelve';\r\nimport DamageEffects from './DamageEffects/DamageEffects';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction App() {\r\n\r\n    \r\n// class App extends Component {\r\n//     constructor(props) {\r\n//         super(props);\r\n//         this.state = {\r\n//             roomTime: 0,\r\n//             roomBreakLoop: 0,\r\n//             breakLoop: 0,\r\n//             gameTick: -1,\r\n//             playerHealth: 0,\r\n//             maxPlayerHealth: 0,\r\n//             playerAttackLow: 0,\r\n//             playerAttackHigh: 0,\r\n//             playerSpeed: -1,\r\n//             maxPlayerSpeed: 0,\r\n//             playerArmor: 0,\r\n//             playerCoins: 0,\r\n//             playerHealthPotion: 0,\r\n//             playerStaminaPotion: 0,\r\n//             healthPotionEffect: 25,\r\n//             playerDamageDone: 0,\r\n//             playerAttackTimerState: 5,\r\n//             playerAttackTimerStateMax: 5,\r\n//             enemyDamageDone: 0,\r\n//             enemyAlive: 0,\r\n//             enemyMaxHealth: 0,\r\n//             enemyHealth: 0,\r\n//             enemyAttackLow: 0,\r\n//             enemyAttackHigh: 0,\r\n//             enemySpeed: 0,\r\n//             enemyMaxSpeed: 0,\r\n//             enemyArmor: 0,\r\n//             enemyReward: 0,\r\n//             enemyRewardCheck: 0,\r\n//             enemy2MaxHealth: 0,\r\n//             enemy2Health: 0,\r\n//             enemy2AttackLow: 0,\r\n//             enemy2AttackHigh: 0,\r\n//             enemy2Speed: 0,\r\n//             enemy2Armor: 0,\r\n//             enemy2Reward: 0,\r\n//             enemy2RewardCheck: 0,\r\n//             enemy3MaxHealth: 0,\r\n//             enemy3Health: 0,\r\n//             enemy3AttackLow: 0,\r\n//             enemy3AttackHigh: 0,\r\n//             enemy3Speed: 0,\r\n//             enemy3Armor: 0,\r\n//             enemy3Reward: 0,\r\n//             enemy3RewardCheck: 0,\r\n//             numberOfEnemiesInRoom: 0,\r\n//             roomTwoStatus: 0,\r\n//             roomThreeStatus: 0,\r\n//             roomFourStatus: 0,\r\n//             roomFiveStatus: 0,\r\n//             roomSixStatus: 0,\r\n//             roomSevenStatus: 0,\r\n//             roomEightStatus: 0,\r\n//             roomNineStatus: 0,\r\n//             roomTenStatus: 0,\r\n//             roomElevenStatus: 0,\r\n//             roomTwelveStatus:0,\r\n//             currentRoom: 0,\r\n//             currentRoomStatus: 0,\r\n//             startCombatCheck: false,\r\n//             playerAttacked: 1,\r\n//         }\r\n//     }\r\n\r\n    devButton = () => {\r\n        this.setState({\r\n            playerHealth: this.state.maxPlayerHealth,\r\n            playerAttack: this.state.playerAttack + 5,\r\n            playerCoins: this.state.playerCoins + 100,\r\n        })\r\n    }\r\n\r\n    useHealthPotion = () => {\r\n        if(this.state.playerHealthPotion <= 0){\r\n            return(alert(\"You are out of health potions!\"))\r\n        }\r\n        if(this.state.playerHealth + this.state.healthPotionEffect > this.state.maxPlayerHealth){\r\n            this.setState({\r\n                playerHealthPotion: this.state.playerHealthPotion - 1,\r\n                playerHealth: this.state.maxPlayerHealth,\r\n            })\r\n        } else {\r\n            this.setState({\r\n                playerHealthPotion: this.state.playerHealthPotion - 1,\r\n                playerHealth: this.state.playerHealth + this.state.healthPotionEffect,\r\n            })\r\n        }\r\n    }\r\n\r\n    useStaminaPotion = () => {\r\n        if(this.state.playerStaminaPotion <= 0){\r\n            return(alert(\"You are out of stamina potions!\"))\r\n        }\r\n        if(this.state.playerSpeed === this.state.maxPlayerSpeed){\r\n            return(alert(\"You're already at max speed!\"))\r\n        } else {\r\n            this.setState({\r\n                playerStaminaPotion: this.state.playerStaminaPotion - 1,\r\n                playerSpeed: this.state.maxPlayerSpeed,\r\n            })\r\n        }\r\n    }\r\n\r\n    buyFromStore = (item) => {\r\n        if(item === \"health\"){\r\n            if(this.state.playerCoins >= 5){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 5,\r\n                    maxPlayerHealth: this.state.maxPlayerHealth + 10,\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a health upgrade.\")\r\n            }\r\n        }\r\n        if(item === \"attackLow\"){\r\n            if(this.state.playerCoins >= 6 & this.state.playerAttackLow < this.state.playerAttackHigh){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 6,\r\n                    playerAttackLow: this.state.playerAttackLow + 1,\r\n                })\r\n            } \r\n            if(this.state.playerAttackLow >= this.state.playerAttackHigh){\r\n                alert(\"Your minimum attack can not exceed you maximum attack.\")\r\n            }\r\n            if(this.state.playerCoins < 6){\r\n                alert(\"You can't afford a minimum attack upgrade.\")\r\n            }\r\n        }\r\n        if(item === \"attackHigh\"){\r\n            if(this.state.playerCoins >= 3){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 3,\r\n                    playerAttackHigh: this.state.playerAttackHigh + 1,\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a maximum attack upgrade.\")\r\n            }\r\n        }\r\n        if(item === \"speed\"){\r\n            if(this.state.playerCoins >= 2){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 2,\r\n                    maxPlayerSpeed: this.state.maxPlayerSpeed + 1,\r\n                    playerSpeed: this.state.playerSpeed + 1,\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a speed upgrade.\")\r\n            }\r\n        }\r\n        if(item === \"armor\"){\r\n            if(this.state.playerCoins >= 3){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 3,\r\n                    playerArmor: this.state.playerArmor + 1,\r\n                })\r\n            } else {\r\n                alert(\"You can't afford an armor upgrade.\")\r\n            }\r\n        }\r\n        if(item === \"healthPotion\"){\r\n            if(this.state.playerHealthPotion >= 10){\r\n                return (alert (\"You can only have up to ten health potions.\"))\r\n            }\r\n            if(this.state.playerCoins >= 2){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 2,\r\n                    playerHealthPotion: this.state.playerHealthPotion + 1,\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a health potion.\")\r\n            }\r\n        }\r\n        if(item === \"staminaPotion\"){\r\n            if(this.state.playerStaminaPotion >= 8){\r\n                return (alert(\"You can only have up to eight stamina potions.\"))\r\n            }\r\n            if(this.state.playerCoins >= 1){\r\n                this.setState({\r\n                    playerCoins: this.state.playerCoins - 1,\r\n                    playerStaminaPotion: this.state.playerStaminaPotion + 1,\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a stamina potion.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    resetRoomStatus = () => {\r\n        this.setState({\r\n            roomTwoStatus: 0,\r\n            roomThreeStatus: 0,\r\n            roomFiveStatus: 0,\r\n            roomSixStatus: 0,\r\n            roomSevenStatus: 0,\r\n            roomNineStatus: 0,\r\n            roomTenStatus: 0,\r\n            roomElevenStatus: 0,\r\n            enemyRewardCheck: 0,\r\n            enemy2RewardCheck: 0,\r\n            enemy3RewardCheck: 0,\r\n            startCombatCheck: false,\r\n            playerAttacked: 1,\r\n            playerSpeed: this.state.maxPlayerSpeed,\r\n        })\r\n    }\r\n\r\n    pickClass = (health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion) => {\r\n        console.log(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion)\r\n        this.setState({\r\n            playerHealth: health,\r\n            maxPlayerHealth: maxHealth,\r\n            playerAttackLow: attackLow,\r\n            playerAttackHigh: attackHigh,\r\n            playerSpeed: speed,\r\n            maxPlayerSpeed: maxSpeed,\r\n            playerArmor: armor,\r\n            playerCoins: coins,\r\n            playerHealthPotion: healthPotion,\r\n            playerStaminaPotion: staminaPotion,\r\n        })\r\n        this.gameTime()\r\n    }\r\n\r\n    createEnemy = (maxHealth, health, attackLow, attackHigh, speed, armor, reward, maxHealth2, health2, attack2Low, attack2High, speed2, armor2, reward2, maxHealth3, health3, attack3Low, attack3High, speed3, armor3, reward3, numberOfEnemiesInRoom) => {\r\n        this.setState({\r\n            enemyMaxHealth: maxHealth,\r\n            enemyHealth: health,\r\n            enemyAttackLow: attackLow,\r\n            enemyAttackHigh: attackHigh,\r\n            enemySpeed: speed,\r\n            enemyMaxSpeed: speed,\r\n            enemyArmor: armor,\r\n            enemyReward: reward,\r\n            enemy2MaxHealth: maxHealth2,\r\n            enemy2Health: health2,\r\n            enemy2AttackLow: attack2Low,\r\n            enemy2AttackHigh: attack2High,\r\n            enemy2Speed: speed2,\r\n            enemy2Armor: armor2,\r\n            enemy2Reward: reward2,\r\n            enemy3MaxHealth: maxHealth3,\r\n            enemy3Health: health3,\r\n            enemy3AttackLow: attack3Low,\r\n            enemy3AttackHigh: attack3High,\r\n            enemy3Speed: speed3,\r\n            enemy3Armor: armor3,\r\n            enemy3Reward: reward3,\r\n            numberOfEnemiesInRoom: numberOfEnemiesInRoom,\r\n        })\r\n    }\r\n\r\n                            // *ROOM MOVEMENT, CREATES ENEMIES FOR NEXT ROOM, ACCOUNTS FOR AND CHANGES PLAYER SPEED, STARTS ROOM TIMER\r\n\r\n    roomMovement = (currentRoom) => {\r\n        this.roomTime()\r\n        if(this.state.playerSpeed > 0){\r\n            this.setState({\r\n                currentRoom: currentRoom,\r\n                playerSpeed: this.state.playerSpeed - 1,\r\n                enemyRewardCheck: 0,\r\n                enemy2RewardCheck: 0,\r\n                enemy3RewardCheck: 0,\r\n                playerDamageDone: 0,\r\n                enemyDamageDone: 0,\r\n                playerAttacked: 1,\r\n            })\r\n        }\r\n        if(this.state.playerSpeed <= 0){\r\n            this.playerHasNoSpeed()\r\n        }\r\n        // ?enemyMaxHealth, EnemyHealth, enemyAttackLow, enemyAttackHigh, enemySpeed, enemyArmor, enemyReward\r\n        if(currentRoom === 2 & this.state.roomTwoStatus === 0){\r\n            this.createEnemy(20, 20, 2, 3, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Circle 20, 2, 3, 1, 1, 1\r\n            }\r\n        if(currentRoom === 3 & this.state.roomThreeStatus === 0){\r\n            this.createEnemy(15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Square 15, 4, 5, 2, 2, 2\r\n        }\r\n        if(currentRoom === 4 & this.state.roomFourStatus === 0){\r\n            this.createEnemy(50, 50, 5, 7, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Boss Triangle\r\n        }\r\n        if(currentRoom === 5 & this.state.roomFiveStatus === 0){\r\n            this.createEnemy(15, 15, 10, 12, 2, 5, 25, 10, 10, 3, 5, 9, 4, 10, 0, 0, 0, 0, 0, 0, 0, 2) //Parallelogram 15, 10, 12, 2, 5, 25 - Trapezium 10, 3, 5, 9, 4, 10\r\n        }\r\n        if(currentRoom === 6 & this.state.roomSixStatus === 0){\r\n            this.createEnemy(20, 20, 2, 3, 1, 1, 1, 20, 20, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2) //Two Circles\r\n        }\r\n        if(currentRoom === 7 & this.state.roomSevenStatus === 0){\r\n            this.createEnemy(15, 15, 4, 5, 2, 2, 2, 15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2) // Two Squares\r\n        }\r\n        if(currentRoom === 8 & this.state.roomEightStatus === 0){\r\n            this.createEnemy(80, 80, 6, 8, 3, 4, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One BOSS pentagon\r\n        }\r\n        if(currentRoom === 9 & this.state.roomNineStatus === 0){\r\n            this.createEnemy(30, 30, 4, 5, 2, 2, 10, 15, 15, 10, 14, 2, 5, 25, 4, 4, 1, 5, 10, 10, 5, 3) //Semi-Circle - Parallelogram - Trapezium\r\n        }\r\n        if(currentRoom === 10 & this.state.roomTenStatus === 0){\r\n            this.createEnemy(100, 100, 4, 7, 2, 2, 20, 100, 100, 4, 7, 2, 2, 20, 0, 0, 0, 0, 0, 0, 0, 2) //Two Hexagons\r\n        }\r\n        if(currentRoom === 11 & this.state.roomElevenStatus === 0){\r\n            this.createEnemy(50, 50, 5, 8, 4, 3, 15, 50, 50, 5, 8, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 2)\r\n        }\r\n        if(currentRoom === 12 & this.state.roomTwelveStatus === 0){\r\n            this.createEnemy(500, 500, 15, 20, 8, 8, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)\r\n        }\r\n    }\r\n                                            // *TIMED COMBAT\r\n    startCombat = () => {\r\n        this.setState({\r\n            startCombatCheck: true,\r\n        })\r\n        this.enemyTimedCombatSequenceTest()\r\n        this.playerAttackTimer(1)\r\n    }\r\n\r\n    playerAttackTimer = (charged) => {\r\n        if(this.state.breakLoop < 300 & this.state.playerAttackTimerState > 0 & charged === 1){\r\n            this.setState({\r\n                playerAttackTimerState: this.state.playerAttackTimerState - 1,\r\n            })\r\n            console.log(\"PLAYER ATTACK TIMER RUNNING\")\r\n            setTimeout(() => {this.playerAttackTimer(1); }, 1000);\r\n        }\r\n        else{\r\n            this.setState({\r\n                playerAttackTimerState: this.state.playerAttackTimerStateMax,\r\n                playerAttacked: 2,\r\n            })\r\n            return\r\n        }\r\n    }\r\n    rechargeAttackMove = () => {\r\n        this.setState({\r\n            playerAttacked: 1,\r\n        })\r\n        this.playerAttackTimer(1)\r\n    }\r\n\r\n    enemyTimedCombatSequenceTest = () => {\r\n        if(this.state.breakLoop < 60 & this.state.enemySpeed > -1 & this.state.enemyHealth >= 0){\r\n            this.setState({\r\n                enemySpeed: this.state.enemySpeed -1,\r\n            })\r\n            if(this.state.enemySpeed === 0){\r\n                var currentPlayerAttack = this.playerAttackRandomizer(this.state.playerAttackLow, this.state.playerAttackHigh)\r\n                this.enemyCounterAttack(currentPlayerAttack)\r\n                this.setState({\r\n                    enemySpeed: this.state.enemyMaxSpeed,\r\n                })\r\n            }\r\n            setTimeout(() => {this.enemyTimedCombatSequenceTest(); }, 1000);\r\n            console.log(`timedCombatSequenceTest() is running. EnemySpeed 2 ${this.state.enemySpeed}`)\r\n        }\r\n    }\r\n\r\n                                            // !END TIMED COMBAT\r\n\r\n    playerHasNoSpeed = () => {\r\n        alert(\"You have no more speed! You took 10 damage. Return to Room One or use a stamina potion to regain your speed.\")\r\n        this.setState({\r\n            playerHealth: this.state.playerHealth - 10,\r\n            enemyRewardCheck: 0,\r\n            enemy2RewardCheck: 0,\r\n            enemy3RewardCheck: 0,\r\n        })\r\n    }\r\n\r\n                                            // !END ROOM MOVEMENT AND PLAYER SPEED\r\n\r\n                                            // *BEGINNING OF COMBAT ATTACK SEQUENCE\r\n\r\n    playerAttackMove = (attackEnemy) => {\r\n        var currentPlayerAttack = this.playerAttackRandomizer(this.state.playerAttackLow, this.state.playerAttackHigh)\r\n        if(attackEnemy === 1 & this.state.enemyHealth <= 0){\r\n            this.deadCheck(currentPlayerAttack, attackEnemy)\r\n            alert(\"You killed this enemy!\")\r\n        }\r\n        if(attackEnemy === 1 & this.state.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - this.state.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            this.playerAttackMoveSetState(1, currentPlayerAttack)\r\n            this.deadCheck(currentPlayerAttack, attackEnemy)\r\n        }\r\n        if(attackEnemy === 2 & this.state.enemy2Health <= 0){\r\n            this.deadCheck(currentPlayerAttack, attackEnemy)\r\n            alert(\"You killed this enemy!\")\r\n        }\r\n        if(attackEnemy === 2 & this.state.enemy2Health > 0){\r\n            currentPlayerAttack = currentPlayerAttack - this.state.enemy2Armor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            this.playerAttackMoveSetState(2, currentPlayerAttack)\r\n            this.deadCheck(currentPlayerAttack, attackEnemy)\r\n        }\r\n        if(attackEnemy === 3 & this.state.enemy3Health <= 0){\r\n            this.deadCheck(currentPlayerAttack, attackEnemy)\r\n            alert(\"You killed this enemy!\")\r\n        }\r\n        if(attackEnemy === 3 & this.state.enemy3Health > 0){\r\n            currentPlayerAttack = currentPlayerAttack - this.state.enemy3Armor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            this.playerAttackMoveSetState(3, currentPlayerAttack)\r\n            this.deadCheck(currentPlayerAttack, attackEnemy)\r\n        }\r\n    }\r\n\r\n    playerAttackRandomizer = (playerAttackLow, playerAttackHigh) => {\r\n        return Math.floor(Math.random() * (playerAttackHigh - playerAttackLow + 1) + playerAttackLow)\r\n    }\r\n\r\n    playerAttackMoveSetState = (attackEnemyNumber, currentPlayerAttack) => {\r\n        if(attackEnemyNumber === 1){\r\n            this.setState({\r\n                enemyHealth: this.state.enemyHealth - currentPlayerAttack,\r\n                playerDamageDone: currentPlayerAttack,\r\n                playerAttacked: 3,\r\n                playerAttackTimerState: this.state.playerAttackTimerStateMax,\r\n                })\r\n                this.showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            this.setState({\r\n                enemy2Health: this.state.enemy2Health - currentPlayerAttack,\r\n                playerDamageDone: currentPlayerAttack,\r\n                })\r\n                this.showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            this.setState({\r\n                enemy3Health: this.state.enemy3Health - currentPlayerAttack,\r\n                playerDamageDone: currentPlayerAttack,\r\n                })\r\n                this.showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n    }\r\n\r\n    deadCheck = (currentPlayerAttack, attackEnemy) => {\r\n        if(this.state.enemyHealth - currentPlayerAttack <= 0){\r\n            if(this.state.enemyRewardCheck === 0 & attackEnemy === 1){\r\n                this.deadCheckSetState(1)\r\n            }\r\n        }\r\n        if(this.state.enemy2Health - currentPlayerAttack <= 0) {\r\n            if(this.state.enemy2RewardCheck === 0 & attackEnemy === 2){\r\n                this.deadCheckSetState(2)\r\n            }\r\n        }\r\n        if(this.state.enemy3Health - currentPlayerAttack <= 0 & attackEnemy === 3) {\r\n            if(this.state.enemy3RewardCheck === 0){\r\n                this.deadCheckSetState(3)\r\n            }\r\n        }\r\n        if(this.state.enemyHealth <= 0 & this.state.enemy2Health <= 0 & this.state.enemy3Health <= 0){\r\n            this.setCurrentRoomStatusClearEnemy()\r\n        }\r\n        // if(this.state.enemyHealth + this.state.enemy2Health + this.state.enemy3Health > 0){\r\n        //     this.enemyCounterAttack(currentPlayerAttack)\r\n        // }\r\n    }\r\n\r\n    deadCheckSetState = (enemyNumber) => {\r\n        if(enemyNumber === 1){\r\n            this.setState({\r\n                playerCoins: this.state.playerCoins + this.state.enemyReward,\r\n                enemyRewardCheck: 1,\r\n                enemyHealth: 0,\r\n            })\r\n        }\r\n        if(enemyNumber === 2){\r\n            this.setState({\r\n                playerCoins: this.state.playerCoins + this.state.enemy2Reward,\r\n                enemy2RewardCheck: 1,\r\n                enemy2Health: 0,\r\n            })\r\n        }\r\n        if(enemyNumber === 3){\r\n            this.setState({\r\n                playerCoins: this.state.playerCoins + this.state.enemy3Reward,\r\n                enemy3RewardCheck: 1,\r\n                enemy3Health: 0,\r\n            })\r\n        }\r\n    }\r\n\r\n    enemyCounterAttack = (currentPlayerAttack) => {\r\n        var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh) - this.state.playerArmor\r\n        var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh) - this.state.playerArmor\r\n        var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh) - this.state.playerArmor\r\n        var playerDamageTaken = 0\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        if(currentEnemy2Attack <= 0){\r\n            currentEnemy2Attack = 1\r\n        }\r\n        if(currentEnemy3Attack <= 0){\r\n            currentEnemy3Attack = 1\r\n        }\r\n        if(this.state.enemyHealth - currentPlayerAttack > 0){\r\n            playerDamageTaken = playerDamageTaken + currentEnemyAttack\r\n        }\r\n        if(this.state.enemy2Health - currentPlayerAttack > 0){\r\n            playerDamageTaken = playerDamageTaken + currentEnemy2Attack\r\n        }\r\n        if(this.state.enemy3Health - currentPlayerAttack > 0){\r\n            playerDamageTaken = playerDamageTaken + currentEnemy3Attack\r\n        }\r\n        this.playerTakeDamage(playerDamageTaken)\r\n    }\r\n\r\n    currentEnemyAttackRandomizer = (enemyAttackLow, enemyAttackHigh) => {\r\n        return Math.floor(Math.random() * (enemyAttackHigh - enemyAttackLow + 1) + enemyAttackLow)\r\n    }\r\n\r\n    playerTakeDamage = (damageTaken) => {\r\n        this.setState({\r\n            playerHealth: this.state.playerHealth - damageTaken,\r\n            enemyDamageDone: damageTaken,\r\n        })\r\n        this.showToastMessageRed(damageTaken)\r\n    }\r\n\r\n    setCurrentRoomStatusClearEnemy = () => {\r\n        if(this.state.currentRoom === 2){\r\n            this.setState({\r\n                roomTwoStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 3){\r\n            this.setState({\r\n                roomThreeStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 4){\r\n            this.setState({\r\n                roomFourStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 5){\r\n            this.setState({\r\n                roomFiveStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 6){\r\n            this.setState({\r\n                roomSixStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 7){\r\n            this.setState({\r\n                roomSevenStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 8){\r\n            this.setState({\r\n                roomEightStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 9){\r\n            this.setState({\r\n                roomNineStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 10){\r\n            this.setState({\r\n                roomTenStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 11){\r\n            this.setState({\r\n                roomElevenStatus: 1,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 12){\r\n            this.setState({\r\n                roomTwelveStatus: 1,\r\n            })\r\n        }\r\n    }\r\n\r\n                                            // !END OF ATTACK SEQUENCE\r\n\r\n                                            // *BEGINNING OF DODGE SEQUENCE\r\n\r\n    playerDodgeMove = () => {\r\n        var playerSpeedThisDodgeAttack = Math.floor(Math.random() * (100 - this.state.playerSpeed + 1) + this.state.playerSpeed)\r\n        var enemySpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemySpeed + 1) + this.state.enemySpeed)\r\n        var enemy2SpeedThisRound = 0\r\n        var enemy3SpeedThisRound = 0\r\n        var playerDamageTaken = 0\r\n        if(this.state.playerSpeed > 0){\r\n            if(this.state.enemy2Speed > 0){\r\n                enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy2Speed + 1) + this.state.enemy2Speed)\r\n            }\r\n            if(this.state.enemy3Speed > 0){\r\n                enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy3Speed + 1) + this.state.enemy3Speed)\r\n            }\r\n            console.log(playerSpeedThisDodgeAttack)\r\n            console.log(enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound)\r\n\r\n            if(playerSpeedThisDodgeAttack > enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\r\n                console.log(\"Successful Dodge\")\r\n                this.enemyWithMostHealth()\r\n                }\r\n            if(playerSpeedThisDodgeAttack <= enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\r\n                console.log(\"Player Missed Dodge\")\r\n                this.playerMissedDodge()\r\n                }\r\n            }\r\n        if(this.state.playerSpeed <= 0){\r\n            alert(\"You have no speed to dodge!\")\r\n        }\r\n    }\r\n\r\n        // player attacks enemy with highest health with full attack power if the ransomizer is greater than the enemies; speed \r\n\r\n    enemyWithMostHealth = () => {\r\n        var highEnemyHealth = Math.max(this.state.enemyHealth, this.state.enemy2Health, this.state.enemy3Health)\r\n        if(highEnemyHealth === this.state.enemyHealth){\r\n            this.setState({\r\n                enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemyArmor),\r\n                playerSpeed: this.state.playerSpeed - 1,\r\n                playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n                })\r\n                return\r\n        }\r\n        if(highEnemyHealth === this.state.enemy2Health){\r\n            this.setState({\r\n                enemy2Health: this.state.enemy2Health - (this.state.playerAttackHigh - this.state.enemy2Armor),\r\n                playerSpeed: this.state.playerSpeed - 1,\r\n                playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n                })\r\n                return\r\n        }\r\n        if(highEnemyHealth === this.state.enemy3Health){\r\n            this.setState({\r\n                enemy3Health: this.state.enemy3Health - (this.state.playerAttackHigh - this.state.enemy3Armor),\r\n                playerSpeed: this.state.playerSpeed - 1,\r\n                playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n                })\r\n                return\r\n        }\r\n    }\r\n\r\n    playerMissedDodge = () => {\r\n        var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh)\r\n        var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh)\r\n        var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh)\r\n        var playerDamage = currentEnemyAttack + currentEnemy2Attack + currentEnemy3Attack\r\n        this.setState({\r\n            playerHealth: this.state.playerHealth - playerDamage,\r\n            playerSpeed: this.state.playerSpeed - 1,\r\n            enemyDamageDone: playerDamage,\r\n            })\r\n    }\r\n\r\n                                            // !END DODGE SEQUENCE\r\n\r\n    typeOfEnemyAttack = () => {\r\n\r\n    }\r\n\r\n    openChest = () => {\r\n        if(this.state.currentRoom === 4){\r\n            this.setState({\r\n                healthPotionEffect: this.state.healthPotionEffect + 15,\r\n                roomFourStatus: 2,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 8){\r\n            this.setState({\r\n                healthPotionEffect: this.state.healthPotionEffect + 15,\r\n                roomEightStatus: 2,\r\n            })\r\n        }\r\n        if(this.state.currentRoom === 12){\r\n            this.setState({\r\n                healthPotionEffect: this.state.healthPotionEffect + 15,\r\n                roomTwelveStatus: 2,\r\n            })\r\n        }\r\n    }\r\n\r\n                                            // *ON-SCREEN PROMPTS\r\n\r\n    showToastMessage = (currentPlayerAttack, attackEnemyNumber) => {\r\n        if(attackEnemyNumber === 1){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 1 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 2 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 3 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    showToastMessageRed = (damageTaken) => {\r\n        toast.error(\"You took \" + damageTaken + \" damage !\", {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    }\r\n\r\n                                            //  *GAME TIMER\r\n    gameTime = () => {\r\n        this.timeSetState()\r\n        if(this.state.breakLoop < 300){\r\n            console.log(`Break loop is at ${this.state.breakLoop}`);\r\n            setTimeout(() => {this.gameTime(); }, 1000);\r\n        }\r\n        console.log(`gameTime() is running. gameTick is at ${this.state.gameTick}`)\r\n    }\r\n\r\n    timeSetState = () => {\r\n        this.setState({\r\n            breakLoop: this.state.breakLoop + 1,\r\n            gameTick: this.state.gameTick + 1,\r\n        })\r\n    }\r\n                                            //  !END GAME TIMER\r\n\r\n                                            //  *ROOM TIMER\r\n    roomTime = () => {\r\n        this.roomTimeSetState()\r\n        if(this.state.roomBreakLoop < 300){\r\n            setTimeout(() => {this.roomTime(); }, 1000);\r\n        }\r\n        console.log(`gameRoomTime() is running. roomTime is at ${this.state.roomTime}`)\r\n    }\r\n\r\n    roomTimeSetState = () => {\r\n        this.setState({\r\n            roomTime: this.state.roomTime + 1,\r\n            roomBreakLoop: this.state.roomBreakLoop + 1,\r\n        })\r\n    }\r\n\r\n                                            // !END ROOM TIMER\r\n    // render() {\r\n        return(\r\n            <BrowserRouter>\r\n            <Navbar gameTick={this.state.gameTick} maxPlayerSpeed={this.state.maxPlayerSpeed} healthPotionEffect={this.state.healthPotionEffect} maxHealth={this.state.maxPlayerHealth} useStaminaPotion={this.useStaminaPotion} devButton={this.devButton} useHealthPotion={this.useHealthPotion} playerHealth={this.state.playerHealth} playerAttackLow={this.state.playerAttackLow} playerAttackHigh={this.state.playerAttackHigh} playerSpeed={this.state.playerSpeed} playerArmor={this.state.playerArmor} playerCoins={this.state.playerCoins} playerHealthPotion={this.state.playerHealthPotion} playerStaminaPotion={this.state.playerStaminaPotion} resetRoomStatus={this.resetRoomStatus} />\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Layout showToastMessage={this.showToastMessage} playerHealth={this.state.playerHealth} playerAttackLow={this.state.playerAttackLow} playerAttackHigh={this.state.playerAttackHigh}playerSpeed={this.state.playerSpeed} playerDefense={this.state.playerArmor} playerCoins={this.state.playerCoins} pickClass={this.pickClass} />} />\r\n\r\n                    <Route path=\"/GameBoard\" element={<GameBoard buyFromStore={this.buyFromStore} roomMovement={this.roomMovement} createEnemy={this.createEnemy} />} />\r\n\r\n                    <Route path=\"/RoomTwo\" element={<RoomTwo rechargeAttackMove={this.rechargeAttackMove} playerAttacked={this.state.playerAttacked} playerAttackMove={this.playerAttackMove} playerAttackTimerState={this.state.playerAttackTimerState} playerAttackTimerStateMax={this.state.playerAttackTimerStateMax} startCombat={this.startCombat} startCombatCheck={this.state.startCombatCheck} currentRoom={this.state.currentRoom} roomMovement={this.roomMovement} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyMaxHealth={this.state.enemyMaxHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed}  enemyMaxSpeed={this.state.enemyMaxSpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} roomTwoStatus={this.state.roomTwoStatus} resetRoomStatus={this.resetRoomStatus} />} />\r\n\r\n                    {/* <Route path=\"/RoomThree\" element={<RoomThree roomMovement={this.roomMovement} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} roomThreeStatus ={this.state.roomThreeStatus} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} />\r\n\r\n                    <Route path=\"/RoomFour\" element={<RoomFour openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomFourStatus={this.state.roomFourStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} />\r\n\r\n                    <Route path=\"/RoomFive\" element={<RoomFive resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomFiveStatus={this.state.roomFiveStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemy2Health={this.state.enemy2Health} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward} />} />\r\n\r\n                    <Route path=\"/RoomSix\" element={<RoomSix currentRoom={this.state.currentRoom} resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomSixStatus={this.state.roomSixStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyMaxHealth={this.state.enemyMaxHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemy2Health={this.state.enemy2Health} enemy2MaxHealth={this.state.enemy2MaxHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} />\r\n\r\n                    <Route path=\"/RoomSeven\" element={<RoomSeven resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomSevenStatus={this.state.roomSevenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemy2Health={this.state.enemy2Health} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} />\r\n\r\n                    <Route path=\"/RoomEight\" element={<RoomEight openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomEightStatus={this.state.roomEightStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} />\r\n\r\n                    <Route path=\"/RoomNine\" element={<RoomNine resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomNineStatus={this.state.roomNineStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemy2Health={this.state.enemy2Health} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward} enemy3Health={this.state.enemy3Health} enemy3AttackLow={this.state.enemy3AttackLow} enemy3AttackHigh={this.state.enemy3AttackHigh} enemy3Speed={this.state.enemy3Speed} enemy3Armor={this.state.enemy3Armor} enemy3Reward={this.state.enemy3Reward}/>} />\r\n\r\n                    <Route path=\"/RoomTen\" element={<RoomTen resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomTenStatus={this.state.roomTenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemy2Health={this.state.enemy2Health} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} />\r\n\r\n                    <Route path=\"/RoomEleven\" element={<RoomEleven resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomElevenStatus={this.state.roomElevenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemy2Health={this.state.enemy2Health} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} />\r\n\r\n                    <Route path=\"/RoomTwelve\" element={<RoomTwelve openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomTwelveStatus={this.state.roomTwelveStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward}/>} /> */}\r\n                </Routes>\r\n            </BrowserRouter>\r\n        )\r\n    // }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}