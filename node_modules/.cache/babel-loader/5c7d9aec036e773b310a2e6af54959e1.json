{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\devCodeCamp\\\\YouTubeCloneProject\\\\YouTubeClone\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar/SearchBar';\nimport key from './key';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSearch = async search => {\n      let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&key=${key}&q=${search}`);\n      console.log(response.data);\n      this.setState({\n        videos: response.data.items,\n        videoId: response.data.items[0].id.videoId\n      });\n    };\n\n    this.state = {\n      comments: [],\n      replies: [],\n      videoId: '',\n      videos: []\n    };\n  }\n\n  componentDidMount() {\n    this.getVideo();\n  }\n\n  async getVideo() {\n    let response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=${key}&part=snippet,contentDetails,statistics,status`);\n    this.setState({\n      videoId: response.data.items[0].id\n    });\n  }\n\n  async getComments() {\n    let response = await axios.get('http://127.0.0.1:8000/comments/');\n    console.log(response.data);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        startSearch: this.getSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"YouTube Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n        id: \"existing-iframe-example\",\n        width: \"640\",\n        height: \"360\",\n        src: `https://www.youtube.com/embed/${this.state.videoId}`,\n        frameBorder: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/freeb/OneDrive/Desktop/devCodeCamp/YouTubeCloneProject/YouTubeClone/src/components/App.jsx"],"names":["React","Component","axios","SearchBar","key","App","constructor","props","getSearch","search","response","get","console","log","data","setState","videos","items","videoId","id","state","comments","replies","componentDidMount","getVideo","getComments","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AACxBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2BnBC,SA3BmB,GA2BP,MAAMC,MAAN,IAAiB;AAC7B,UAAIC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,iEAAgEP,GAAI,MAAKK,MAAO,EAA3F,CAArB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,MAAM,EAAEN,QAAQ,CAACI,IAAT,CAAcG,KADZ;AAEVC,QAAAA,OAAO,EAAER,QAAQ,CAACI,IAAT,CAAcG,KAAd,CAAoB,CAApB,EAAuBE,EAAvB,CAA0BD;AAFzB,OAAd;AAKH,KAnCsB;;AAEf,SAAKE,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,OAAO,EAAE,EAFA;AAGTJ,MAAAA,OAAO,EAAE,EAHA;AAITF,MAAAA,MAAM,EAAE;AAJC,KAAb;AAMH;;AAGLO,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL;AACH;;AAEc,QAARA,QAAQ,GAAE;AACb,QAAId,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,mEAAkEP,GAAI,gDAAjF,CAArB;AACA,SAAKW,QAAL,CAAc;AACVG,MAAAA,OAAO,EAAER,QAAQ,CAACI,IAAT,CAAcG,KAAd,CAAoB,CAApB,EAAuBE;AADtB,KAAd;AAGH;;AAEiB,QAAXM,WAAW,GAAE;AAChB,QAAIf,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAU,iCAAV,CAArB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACH;;AAWGY,EAAAA,MAAM,GAAE;AACR,wBACI;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,WAAW,EAAE,KAAKlB;AAA7B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,EAAE,EAAC,yBAAX;AACA,QAAA,KAAK,EAAC,KADN;AACY,QAAA,MAAM,EAAC,KADnB;AAEA,QAAA,GAAG,EAAG,iCAAgC,KAAKY,KAAL,CAAWF,OAAQ,EAFzD;AAGA,QAAA,WAAW,EAAC;AAHZ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUC;;AAhDuB;;AAoD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react'; \r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport key from './key'\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments: [],\r\n            replies: [],\r\n            videoId: '',\r\n            videos: []\r\n        }\r\n    }\r\n\r\n\r\ncomponentDidMount(){\r\n    this.getVideo()\r\n}    \r\n\r\nasync  getVideo(){\r\n    let response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=${key}&part=snippet,contentDetails,statistics,status`)\r\n    this.setState({\r\n        videoId: response.data.items[0].id\r\n    })\r\n}\r\n\r\nasync  getComments(){\r\n    let response = await axios.get('http://127.0.0.1:8000/comments/')\r\n    console.log(response.data)\r\n} \r\n\r\n    getSearch = async(search) => {\r\n    let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&key=${key}&q=${search}`)\r\n    console.log(response.data)\r\n    this.setState({\r\n        videos: response.data.items,\r\n        videoId: response.data.items[0].id.videoId\r\n    })\r\n\r\n}\r\n    render(){\r\n    return(\r\n        <div>\r\n            <SearchBar startSearch={this.getSearch}/>\r\n            <h1>YouTube Clone</h1>\r\n            <iframe id=\"existing-iframe-example\"\r\n            width=\"640\" height=\"360\"\r\n            src={`https://www.youtube.com/embed/${this.state.videoId}`}\r\n            frameBorder=\"0\"></iframe>\r\n        </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App; "]},"metadata":{},"sourceType":"module"}