{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\Game_Project\\\\Game_Project_Frontend\\\\GameFrontEnd\\\\src\\\\components\\\\Comments\\\\Comments.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Replies from '../Replies/Replies';\nimport CommentsDisplay from '../CommentsDisplay/CommentsDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        comment: event.target.value\n      });\n    };\n\n    this.getComments = async () => {\n      let response = await axios.get('http://127.0.0.1:8000/comments/');\n      let comments = response.data;\n      let filteredComments = [];\n      comments.forEach(comment => {\n        if (comment.videoId === this.props.videoId) {\n          filteredComments.push(comment);\n        }\n      });\n      this.setState({\n        videoId: this.props.videoId,\n        comments: filteredComments\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let comment = {\n        videoId: this.props.videoId,\n        likes: 0,\n        dislikes: 0,\n        comment: this.state.comment\n      };\n      this.setState({\n        comments: [...this.state.comments, comment]\n      });\n      await axios.post(\"http://127.0.0.1:8000/comments/\", comment);\n      this.props.addComment();\n      this.setState({\n        comment: ''\n      });\n    };\n\n    this.increment = async (id, name) => {\n      let newArr = this.state.comments;\n      let value;\n      newArr.forEach(comment => {\n        if (comment.id === id) {\n          comment[name] += 1;\n          value = comment[name];\n        }\n      });\n      this.setState({\n        comments: newArr\n      });\n      await axios.patch(`http://127.0.0.1:8000/comments/${id}/`, {\n        [name]: value\n      });\n    };\n\n    this.state = {\n      comments: [],\n      videoId: '',\n      comment: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.comment,\n          name: \"comment\",\n          onChange: this.handleChange,\n          value: this.state.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CommentsDisplay, {\n          comments: this.props.comments,\n          videoId: this.props.videoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/freeb/OneDrive/Desktop/Game_Project/Game_Project_Frontend/GameFrontEnd/src/components/Comments/Comments.jsx"],"names":["React","Component","axios","Replies","CommentsDisplay","Comments","constructor","props","handleChange","event","setState","comment","target","value","getComments","response","get","comments","data","filteredComments","forEach","videoId","push","handleSubmit","preventDefault","likes","dislikes","state","post","addComment","increment","id","name","newArr","patch","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Replies from '../Replies/Replies';\r\nimport CommentsDisplay from '../CommentsDisplay/CommentsDisplay';\r\n\r\n\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            comments: [],\r\n            videoId: '',\r\n            comment: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            comment: event.target.value\r\n        })\r\n    }\r\n\r\n    getComments = async() => {\r\n        let response = await axios.get('http://127.0.0.1:8000/comments/')\r\n        let comments = response.data\r\n        let filteredComments = []\r\n        comments.forEach(comment => {\r\n            if(comment.videoId === this.props.videoId) {\r\n                filteredComments.push(comment)\r\n            }\r\n        })\r\n        this.setState({\r\n            videoId: this.props.videoId,\r\n            comments: filteredComments\r\n        })\r\n    }\r\n\r\n    handleSubmit = async(event) => {\r\n        event.preventDefault()\r\n        let comment = {\r\n            videoId: this.props.videoId,\r\n            likes: 0,\r\n            dislikes: 0,\r\n            comment: this.state.comment\r\n        }\r\n        this.setState({\r\n            comments: [...this.state.comments, comment]\r\n        })\r\n        await axios.post(\"http://127.0.0.1:8000/comments/\", comment)\r\n        this.props.addComment()\r\n        this.setState({\r\n            comment: ''\r\n        })\r\n    }\r\n\r\n    increment = async(id, name) => {\r\n        let newArr = this.state.comments\r\n        let value;\r\n        newArr.forEach(comment => {\r\n            if(comment.id === id) {\r\n                comment[name] += 1\r\n                value = comment[name]\r\n            }\r\n        })\r\n        this.setState({\r\n            comments: newArr\r\n        })\r\n    await axios.patch(`http://127.0.0.1:8000/comments/${id}/`, { [name]: value })\r\n }\r\n\r\n render() { \r\n    return (\r\n        <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input value={this.state.comment} name=\"comment\" onChange={this.handleChange} value={this.state.comment}></input>\r\n                <button type=\"submit\">Post Comment</button>\r\n            </form>\r\n            <div>\r\n                <CommentsDisplay comments={this.props.comments} videoId={this.props.videoId}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default Comments;\r\n"]},"metadata":{},"sourceType":"module"}