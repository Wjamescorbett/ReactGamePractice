{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\devCodeCamp\\\\YouTubeCloneProject\\\\YouTubeClone\\\\src\\\\components\\\\Comments\\\\Comments.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport CommentsDisplay from '../CommentsDisplay/CommentsDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Comments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        comment: event.target.value\n      });\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      let comment = {\n        videoId: this.state.videoId,\n        likes: 0,\n        dislikes: 0,\n        comment: this.state.comment\n      };\n      this.setState({\n        comments: [...this.state.comments, comment]\n      });\n      await axios.post(\"http://127.0.0.1:8000/comments/\", comment);\n    };\n\n    this.state = {\n      comments: [],\n      videoId: '',\n      comment: ''\n    };\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  async getComments() {\n    let response = await axios.get('http://127.0.0.1:8000/comments/');\n    this.setState({\n      videoId: this.props.videoId\n    });\n    this.filterComments(response.data);\n  }\n\n  filterComments(array) {\n    let filteredComments = [];\n    array.forEach(comment => {\n      if (comment.videoId === this.state.videoId) {\n        console.log(comment);\n        filteredComments.push(comment);\n      }\n    });\n    this.setState({\n      comments: filteredComments\n    });\n    console.log(filteredComments);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"comment\",\n          onChange: this.handleChange,\n          value: this.state.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CommentsDisplay, {\n          comments: this.state.comments,\n          videoId: this.props.videoId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Comments;","map":{"version":3,"sources":["C:/Users/freeb/OneDrive/Desktop/devCodeCamp/YouTubeCloneProject/YouTubeClone/src/components/Comments/Comments.jsx"],"names":["React","Component","axios","CommentsDisplay","Comments","constructor","props","handleChange","event","setState","comment","target","value","handleSubmit","preventDefault","videoId","state","likes","dislikes","comments","post","componentDidMount","getComments","response","get","filterComments","data","array","filteredComments","forEach","console","log","push","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,oCAA5B;;;AAIA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAoCnBC,YApCmB,GAoCHC,KAAD,IAAW;AACtB,WAAKC,QAAL,CAAc;AACVC,QAAAA,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAd;AAGH,KAxCkB;;AAAA,SA0CnBC,YA1CmB,GA0CJ,MAAML,KAAN,IAAgB;AAC3BA,MAAAA,KAAK,CAACM,cAAN;AACA,UAAIJ,OAAO,GAAG;AACVK,QAAAA,OAAO,EAAE,KAAKC,KAAL,CAAWD,OADV;AAEVE,QAAAA,KAAK,EAAE,CAFG;AAGVC,QAAAA,QAAQ,EAAE,CAHA;AAIVR,QAAAA,OAAO,EAAE,KAAKM,KAAL,CAAWN;AAJV,OAAd;AAMA,WAAKD,QAAL,CAAc;AACVU,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKH,KAAL,CAAWG,QAAf,EAAyBT,OAAzB;AADA,OAAd;AAGA,YAAMR,KAAK,CAACkB,IAAN,CAAW,iCAAX,EAA8CV,OAA9C,CAAN;AACH,KAtDkB;;AAEf,SAAKM,KAAL,GAAa;AACTG,MAAAA,QAAQ,EAAE,EADD;AAETJ,MAAAA,OAAO,EAAE,EAFA;AAGTL,MAAAA,OAAO,EAAE;AAHA,KAAb;AAKH;;AAEDW,EAAAA,iBAAiB,GAAE;AACf,SAAKC,WAAL;AACH;;AAEgB,QAAXA,WAAW,GAAG;AAChB,QAAIC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAU,iCAAV,CAArB;AACA,SAAKf,QAAL,CAAc;AACVM,MAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS;AADV,KAAd;AAGA,SAAKU,cAAL,CAAoBF,QAAQ,CAACG,IAA7B;AACH;;AAEAD,EAAAA,cAAc,CAACE,KAAD,EAAO;AACjB,QAAIC,gBAAgB,GAAG,EAAvB;AACAD,IAAAA,KAAK,CAACE,OAAN,CAAcnB,OAAO,IAAI;AACrB,UAAGA,OAAO,CAACK,OAAR,KAAoB,KAAKC,KAAL,CAAWD,OAAlC,EAA2C;AACvCe,QAAAA,OAAO,CAACC,GAAR,CAAYrB,OAAZ;AACDkB,QAAAA,gBAAgB,CAACI,IAAjB,CAAsBtB,OAAtB;AACF;AACL,KALA;AAMA,SAAKD,QAAL,CAAc;AACVU,MAAAA,QAAQ,EAAES;AADA,KAAd;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACJ;;AAuBDK,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAM,QAAA,QAAQ,EAAE,KAAKpB,YAArB;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,SAAZ;AAAsB,UAAA,QAAQ,EAAE,KAAKN,YAArC;AAAmD,UAAA,KAAK,EAAE,KAAKS,KAAL,CAAWN;AAArE;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWG,QAAtC;AAAgD,UAAA,OAAO,EAAE,KAAKb,KAAL,CAAWS;AAApE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AArE4B;;AAwEjC,eAAeX,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport CommentsDisplay from '../CommentsDisplay/CommentsDisplay';\r\n\r\n\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            comments: [],\r\n            videoId: '',\r\n            comment: '',\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments()\r\n    }\r\n\r\n    async getComments() {\r\n        let response = await axios.get('http://127.0.0.1:8000/comments/')\r\n        this.setState({\r\n            videoId: this.props.videoId\r\n        })\r\n        this.filterComments(response.data)\r\n    }\r\n\r\n     filterComments(array){\r\n         let filteredComments = []\r\n         array.forEach(comment => {\r\n             if(comment.videoId === this.state.videoId) {\r\n                 console.log(comment)\r\n                filteredComments.push(comment)\r\n             }\r\n        })\r\n         this.setState({\r\n             comments: filteredComments\r\n         })\r\n         console.log(filteredComments)\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            comment: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = async(event) => {\r\n        event.preventDefault()\r\n        let comment = {\r\n            videoId: this.state.videoId,\r\n            likes: 0,\r\n            dislikes: 0,\r\n            comment: this.state.comment\r\n        }\r\n        this.setState({\r\n            comments: [...this.state.comments, comment]\r\n        })\r\n        await axios.post(\"http://127.0.0.1:8000/comments/\", comment)\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input name=\"comment\" onChange={this.handleChange} value={this.state.comment}></input>\r\n                    <button type=\"submit\">Post Comment</button>\r\n                </form>\r\n                <div>\r\n                    <CommentsDisplay comments={this.state.comments} videoId={this.props.videoId}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;"]},"metadata":{},"sourceType":"module"}