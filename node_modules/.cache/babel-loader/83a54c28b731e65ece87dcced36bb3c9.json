{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\Game_Project\\\\Game_Project_Frontend\\\\GameFrontEnd\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Home from './Home/Home';\nimport Navbar from './Navbar/Navbar';\nimport GameMap from './GameMap/GameMap';\nimport Layout from './Layout/Layout';\nimport GameBoard from './GameBoard/GameBoard';\nimport RoomTwo from './RoomTwo/RoomTwo';\nimport RoomThree from './RoomThree/RoomThree';\nimport RoomFour from './RoomFour/RoomFour';\nimport RoomFive from './RoomFive/RoomFive';\nimport RoomSix from './RoomSix/RoomSix';\nimport RoomSeven from './RoomSeven/RoomSeven';\nimport RoomEight from './RoomEight/RoomEight';\nimport RoomNine from './RoomNine/RoomNine';\nimport RoomTen from './RoomTen/RoomTen';\nimport RoomEleven from './RoomEleven/RoomEleven';\nimport RoomTwelve from './RoomTwelve/RoomTwelve';\nimport DamageEffects from './DamageEffects/DamageEffects';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [gameTick, setGameTick] = useState(0);\n  const [breakLoop, setBreakLoop] = useState(0);\n  const [player, setPlayer] = useState({\n    playerHealth: 0,\n    playerMaxHealth: 0,\n    playerAttackLow: 0,\n    playerAttackHigh: 0,\n    playerSpeed: 0,\n    playerMaxSpeed: 0,\n    playerArmor: 0,\n    playerCoins: 0,\n    playerHealthPotion: 0,\n    playerHealthPotionEffect: 15,\n    playerStaminaPotion: 0,\n    playerDamageDone: 0\n  });\n  const [playerAttackTimerState, setPlayerAttackTimerState] = useState(0);\n  const [playerAttackTimerStateMax, setPlayerAttackTimerStateMax] = useState(0);\n  const [runPlayerAttackTimer, setRunPlayerAttackTimer] = useState(false);\n  const [playerAttacked, setPlayerAttacked] = useState(1);\n  const [playerAttackCloseEnemyTimerState, setPlayerAttackCloseEnemyTimerState] = useState(0);\n  const [playerAttackCloseEnemyTimerStateMax, setPlayerAttackCloseEnemyTimerStateMax] = useState(0);\n  const [runPlayerAttackCloseEnemyTimer, setRunPlayerAttackCloseEnemyTimer] = useState(false);\n  const [playerAttackedCloseEnemy, setPlayerAttackedCloseEnemy] = useState(1);\n  const [startCombatCheck, setStartCombatCheck] = useState(false);\n  const [enemyOne, setEnemyOne] = useState({\n    enemyName: \"\",\n    enemyMaxHealth: 0,\n    enemyHealth: 0,\n    enemyAttackLow: 0,\n    enemyAttackHigh: 0,\n    enemySpeed: 0,\n    enemyMaxSpeed: 0,\n    enemyArmor: 0,\n    enemyReward: 0,\n    enemyRewardCheck: 0,\n    enemyColor: \"primary\"\n  });\n  const [enemyTwo, setEnemyTwo] = useState({\n    enemyName: \"\",\n    enemyMaxHealth: 1,\n    enemyHealth: 1,\n    enemyAttackLow: 0,\n    enemyAttackHigh: 0,\n    enemySpeed: 0,\n    enemyMaxSpeed: 0,\n    enemyArmor: 0,\n    enemyReward: 0,\n    enemyRewardCheck: 0,\n    enemyColor: \"info\"\n  });\n  const [enemyThree, setEnemyThree] = useState({\n    enemyName: \"\",\n    enemyMaxHealth: 1,\n    enemyHealth: 1,\n    enemyAttackLow: 0,\n    enemyAttackHigh: 0,\n    enemySpeed: 0,\n    enemyMaxSpeed: 0,\n    enemyArmor: 0,\n    enemyReward: 0,\n    enemyRewardCheck: 0,\n    enemyColor: \"secondary\"\n  });\n  const [enemiesInRoomCheck, setEnemiesInRoomCheck] = useState(false);\n  const [numberOfEnemiesInRoom, setNumberOfEnemiesInRoom] = useState(0); // const [enemyDamageDone, setEnemyDamageDone] = useState(0)\n\n  const [currentRoom, setCurrentRoom] = useState(0);\n  const [currentRoomStatus, setCurrentRoomStatus] = useState(0);\n  const [roomTwoStatus, setRoomTwoStatus] = useState(0);\n  const [roomThreeStatus, setRoomThreeStatus] = useState(0);\n  const [roomFourStatus, setRoomFourStatus] = useState(0);\n  const [roomFiveStatus, setRoomFiveStatus] = useState(0);\n  const [roomSixStatus, setRoomSixStatus] = useState(0);\n  const [roomSevenStatus, setRoomSevenStatus] = useState(0);\n  const [roomEightStatus, setRoomEightStatus] = useState(0);\n  const [roomNineStatus, setRoomNineStatus] = useState(0);\n  const [roomTenStatus, setRoomTenStatus] = useState(0);\n  const [roomElevenStatus, setRoomElevenStatus] = useState(0);\n  const [roomTwelveStatus, setRoomTwelveStatus] = useState(0);\n  const [runEnemyOneAttackTimer, setRunEnemyOneAttackTimer] = useState(false);\n  const [runEnemyTwoAttackTimer, setRunEnemyTwoAttackTimer] = useState(false);\n  const [runEnemyThreeAttackTimer, setRunEnemyThreeAttackTimer] = useState(false);\n  useEffect(() => {\n    if (playerAttackTimerState < 0 & runPlayerAttackTimer === false) {\n      setPlayerAttackTimerState(playerAttackTimerStateMax);\n      setPlayerAttacked(2);\n    }\n\n    if (playerAttackTimerState >= 0 & runPlayerAttackTimer === true) {\n      setRunPlayerAttackTimer(false);\n\n      if (enemyOne.enemyHealth > 0 || enemyTwo.enemyHealth > 0 || enemyThree.enemyHealth > 0) {\n        playerAttackTimer(playerAttackTimerState);\n      }\n    }\n\n    if (playerAttackCloseEnemyTimerState < 0 & runPlayerAttackCloseEnemyTimer === false) {\n      setPlayerAttackCloseEnemyTimerState(playerAttackCloseEnemyTimerStateMax);\n      setPlayerAttackedCloseEnemy(2);\n    }\n\n    if (playerAttackCloseEnemyTimerState >= 0 & runPlayerAttackCloseEnemyTimer === true) {\n      setRunPlayerAttackCloseEnemyTimer(false);\n\n      if (enemyOne.enemyHealth > 0 || enemyTwo.enemyHealth > 0 || enemyThree.enemyHealth > 0) {\n        playerAttackCloseEnemyTimer(playerAttackCloseEnemyTimerState);\n      }\n    }\n\n    if (enemyOne.enemyHealth > 0 & startCombatCheck === true & runEnemyOneAttackTimer === true) {\n      setRunEnemyOneAttackTimer(false);\n      enemyOneAttackTimer();\n    }\n\n    if (enemyTwo.enemyHealth > 0 & startCombatCheck === true & runEnemyTwoAttackTimer === true) {\n      setRunEnemyTwoAttackTimer(false);\n      enemyTwoAttackTimer();\n    }\n\n    if (enemyThree.enemyHealth > 0 & startCombatCheck === true & runEnemyThreeAttackTimer === true) {\n      setRunEnemyThreeAttackTimer(false);\n      enemyThreeAttackTimer();\n    }\n\n    if (enemyOne.enemyHealth <= 0 & enemyTwo.enemyHealth <= 0 & enemyThree.enemyHealth <= 0) {\n      setCurrentRoomStatusClearEnemy();\n      setStartCombatCheck(false);\n    }\n\n    if (enemiesInRoomCheck === true) {\n      setEnemiesInRoomCheck(false);\n    }\n  });\n\n  function devButtonUpgrade() {\n    setPlayer(prevPlayer => {\n      return { ...prevPlayer,\n        playerHealth: player.playerMaxHealth,\n        playerAttackHigh: player.playerAttackHigh + 5,\n        playerCoins: player.playerCoins + 100\n      };\n    });\n  }\n\n  function devButtonDowngrade() {\n    setPlayer(prevPlayer => {\n      return { ...prevPlayer,\n        playerAttackHigh: player.playerAttackHigh - 5\n      };\n    });\n  }\n\n  function useHealthPotion() {\n    if (player.playerHealthPotion <= 0) {\n      return alert(\"You are out of health potions!\");\n    }\n\n    if (player.playerHealth + player.playerHealthPotionEffect > player.playerMaxHealth) {\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerHealthPotion: player.playerHealthPotion - 1,\n          playerHealth: player.playerMaxHealth\n        };\n      });\n    }\n\n    if (player.playerHealth >= player.playerMaxHealth) {\n      return alert(\"You are at max health!\");\n    }\n\n    if (player.playerHealth + player.playerHealthPotionEffect < player.playerMaxHealth) {\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerHealthPotion: player.playerHealthPotion - 1,\n          playerHealth: player.playerHealth + player.playerHealthPotionEffect\n        };\n      });\n    }\n\n    setPlayerAttacked(1);\n    setRunPlayerAttackTimer(true);\n  } // useStaminaPotion = () => {\n  //     if(this.state.playerStaminaPotion <= 0){\n  //         return(alert(\"You are out of stamina potions!\"))\n  //     }\n  //     if(this.state.playerSpeed === this.state.maxPlayerSpeed){\n  //         return(alert(\"You're already at max speed!\"))\n  //     } else {\n  //         this.setState({\n  //             playerStaminaPotion: this.state.playerStaminaPotion - 1,\n  //             playerSpeed: this.state.maxPlayerSpeed,\n  //         })\n  //     }\n  // }\n\n\n  function buyFromStore(item) {\n    if (item === \"health\") {\n      if (player.playerCoins >= 5) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 5,\n            playerMaxHealth: player.playerMaxHealth + 10\n          };\n        });\n      } else {\n        alert(\"You can't afford a health upgrade.\");\n      }\n    }\n\n    if (item === \"attackLow\") {\n      if (player.playerCoins >= 6 & player.playerAttackLow < player.playerAttackHigh) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 6,\n            playerAttackLow: player.playerAttackLow + 1\n          };\n        });\n      }\n\n      if (player.playerAttackLow >= player.playerAttackHigh) {\n        alert(\"Your minimum attack can not exceed you maximum attack.\");\n      }\n\n      if (player.playerCoins < 6) {\n        alert(\"You can't afford a minimum attack upgrade.\");\n      }\n    }\n\n    if (item === \"attackHigh\") {\n      if (player.playerCoins >= 3) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 3,\n            playerAttackHigh: player.playerAttackHigh + 1\n          };\n        });\n      } else {\n        alert(\"You can't afford a maximum attack upgrade.\");\n      }\n    }\n\n    if (item === \"speed\") {\n      if (player.playerCoins >= 2) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 2,\n            playerMaxSpeed: player.playerMaxSpeed + 1,\n            playerSpeed: player.playerSpeed + 1\n          };\n        });\n      } else {\n        alert(\"You can't afford a speed upgrade.\");\n      }\n    }\n\n    if (item === \"armor\") {\n      if (player.playerCoins >= 3) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 3,\n            playerArmor: player.playerArmor + 1\n          };\n        });\n      } else {\n        alert(\"You can't afford an armor upgrade.\");\n      }\n    }\n\n    if (item === \"healthPotion\") {\n      if (player.playerHealthPotion >= 10) {\n        return alert(\"You can only have up to ten health potions.\");\n      }\n\n      if (player.playerCoins >= 2) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 2,\n            playerHealthPotion: player.playerHealthPotion + 1\n          };\n        });\n      } else {\n        alert(\"You can't afford a health potion.\");\n      }\n    }\n\n    if (item === \"staminaPotion\") {\n      if (player.playerStaminaPotion >= 8) {\n        return alert(\"You can only have up to eight stamina potions.\");\n      }\n\n      if (player.playerCoins >= 1) {\n        setPlayer(prevPlayer => {\n          return { ...prevPlayer,\n            playerCoins: player.playerCoins - 1,\n            playerStaminaPotion: player.playerStaminaPotion + 1\n          };\n        });\n      } else {\n        alert(\"You can't afford a stamina potion.\");\n      }\n    }\n  }\n\n  function resetRoomStatus() {\n    setRoomTwoStatus(0);\n    setRoomThreeStatus(0);\n    setRoomFiveStatus(0);\n    setRoomSixStatus(0);\n    setRoomSevenStatus(0);\n    setRoomNineStatus(0);\n    setRoomTenStatus(0);\n    setRoomElevenStatus(0);\n    setEnemyOne(prevEnemyOne => {\n      return { ...prevEnemyOne,\n        enemyRewardCheck: 0\n      };\n    });\n    setEnemyTwo(prevEnemyTwo => {\n      return { ...prevEnemyTwo,\n        enemyRewardCheck: 0\n      };\n    });\n    setEnemyThree(prevEnemyThree => {\n      return { ...prevEnemyThree,\n        enemyRewardCheck: 0\n      };\n    });\n    setPlayerAttacked(1);\n    setStartCombatCheck(false);\n    setPlayer(prevPlayer => {\n      return { ...prevPlayer,\n        playerSpeed: player.playerMaxSpeed\n      };\n    });\n  }\n\n  function pickClass(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer, attackCloseEnemyTimer) {\n    console.log(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer, attackCloseEnemyTimer);\n    setPlayer(prevPlayer => {\n      return { ...prevPlayer,\n        playerHealth: health,\n        playerMaxHealth: maxHealth,\n        playerAttackLow: attackLow,\n        playerAttackHigh: attackHigh,\n        playerSpeed: speed,\n        playerMaxSpeed: maxSpeed,\n        playerArmor: armor,\n        playerCoins: coins,\n        playerHealthPotion: healthPotion,\n        playerStaminaPotion: staminaPotion\n      };\n    });\n    setPlayerAttackTimerState(attackTimer);\n    setPlayerAttackTimerStateMax(attackTimer);\n    setPlayerAttackCloseEnemyTimerState(attackCloseEnemyTimer);\n    setPlayerAttackCloseEnemyTimerStateMax(attackCloseEnemyTimer);\n\n    if (gameTick === 0) {\n      gameTime();\n    }\n  }\n\n  function createEnemy(enemyName, maxHealth, health, attackLow, attackHigh, speed, armor, reward, enemy2Name, maxHealth2, health2, attack2Low, attack2High, speed2, armor2, reward2, enemy3Name, maxHealth3, health3, attack3Low, attack3High, speed3, armor3, reward3, numberOfEnemiesInRoom) {\n    setEnemyOne(prevEnemyOne => {\n      return { ...prevEnemyOne,\n        enemyName: enemyName,\n        enemyMaxHealth: maxHealth,\n        enemyHealth: health,\n        enemyAttackLow: attackLow,\n        enemyAttackHigh: attackHigh,\n        enemySpeed: speed,\n        enemyMaxSpeed: speed,\n        enemyArmor: armor,\n        enemyReward: reward\n      };\n    });\n    setEnemyTwo(prevEnemyTwo => {\n      return { ...prevEnemyTwo,\n        enemyName: enemy2Name,\n        enemyMaxHealth: maxHealth2,\n        enemyHealth: health2,\n        enemyAttackLow: attack2Low,\n        enemyAttackHigh: attack2High,\n        enemySpeed: speed2,\n        enemyMaxSpeed: speed2,\n        enemyArmor: armor2,\n        enemyReward: reward2\n      };\n    });\n    setEnemyThree(prevEnemyThree => {\n      return { ...prevEnemyThree,\n        enemyName: enemy3Name,\n        enemyMaxHealth: maxHealth3,\n        enemyHealth: health3,\n        enemyAttackLow: attack3Low,\n        enemyAttackHigh: attack3High,\n        enemySpeed: speed3,\n        enemyMaxSpeed: speed3,\n        enemyArmor: armor3,\n        enemyReward: reward3\n      };\n    });\n    setNumberOfEnemiesInRoom(numberOfEnemiesInRoom);\n  } // *ROOM MOVEMENT, CREATES ENEMIES FOR NEXT ROOM, ACCOUNTS FOR AND CHANGES PLAYER SPEED\n\n\n  function roomMovement(nowCurrentRoom) {\n    setCurrentRoom(nowCurrentRoom);\n    setPlayerAttackTimerState(playerAttackTimerStateMax);\n    setPlayerAttackCloseEnemyTimerState(playerAttackCloseEnemyTimerStateMax);\n    setPlayerAttacked(1);\n    setPlayerAttackedCloseEnemy(1);\n    setEnemyOne(prevEnemyOne => {\n      return { ...prevEnemyOne,\n        enemyRewardCheck: 0\n      };\n    });\n    setEnemyTwo(prevEnemyTwo => {\n      return { ...prevEnemyTwo,\n        enemyRewardCheck: 0\n      };\n    });\n    setEnemyThree(prevEnemyThree => {\n      return { ...prevEnemyThree,\n        enemyRewardCheck: 0\n      };\n    });\n\n    if (player.playerSpeed > 0) {\n      setCurrentRoom(nowCurrentRoom);\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerSpeed: player.playerSpeed - 1\n        };\n      });\n    } // ?enemyName, enemyMaxHealth, EnemyHealth, enemyAttackLow, enemyAttackHigh, enemySpeed, enemyArmor, enemyReward\n\n\n    if (nowCurrentRoom === 2 & roomTwoStatus === 0) {\n      createEnemy(\"Enemy One\", 20, 20, 2, 3, 5, 1, 1, \"Enemy Two\", 0, 0, 0, 0, 1000, 0, 0, \"Enemy Three\", 0, 0, 0, 0, 1000, 0, 0, 1);\n    }\n\n    if (nowCurrentRoom === 3 & roomThreeStatus === 0) {\n      createEnemy(\"Enemy One\", 15, 15, 4, 5, 3, 2, 2, \"Enemy Two\", 0, 0, 0, 0, 1000, 0, 0, \"Enemy Three\", 0, 0, 0, 0, 1000, 0, 0, 1); //One Square 15, 4, 5, 2, 2, 2\n    }\n\n    if (nowCurrentRoom === 6 & roomSixStatus === 0) {\n      createEnemy(\"enemyOneRoomSix\", 20, 20, 2, 3, 7, 1, 1, \"enemyTwoRoomSix\", 20, 20, 2, 3, 4, 1, 1, \"enemyThreeRoomSix\", 0, 0, 0, 0, 1000, 0, 0, 2); //Two Circles\n    }\n\n    if (nowCurrentRoom === 9 & roomNineStatus === 0) {\n      createEnemy(\"enemyOneRoomNine\", 30, 30, 4, 5, 4, 2, 10, \"enemyTwoRoomNine\", 15, 15, 10, 14, 3, 5, 25, \"enemyThreeRoomNine\", 4, 4, 1, 5, 10, 10, 5, 3); //Semi-Circle - Parallelogram - Trapezium\n    }\n  } // function roomMovement(currentRoom) {\n  //     if(player.playerSpeed > 0){\n  //         setCurrentRoom(currentRoom)\n  //         setPlayer(prevPlayer => {\n  //             return {...prevPlayer,\n  //                 playerSpeed: player.playerSpeed - 1\n  //             }\n  //         })\n  //         this.setState({\n  //             currentRoom: currentRoom,\n  //             playerSpeed: this.state.playerSpeed - 1,\n  //             enemyRewardCheck: 0,\n  //             playerDamageDone: 0,\n  //             enemyDamageDone: 0,\n  //             playerAttacked: 1,\n  //         })\n  //     }\n  //     if(this.state.playerSpeed <= 0){\n  //         this.playerHasNoSpeed()\n  //     }\n  // if(currentRoom === 3 & this.state.roomThreeStatus === 0){\n  //     this.createEnemy(15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Square 15, 4, 5, 2, 2, 2\n  // }\n  // if(currentRoom === 4 & this.state.roomFourStatus === 0){\n  //     this.createEnemy(50, 50, 5, 7, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Boss Triangle\n  // }\n  // if(currentRoom === 5 & this.state.roomFiveStatus === 0){\n  //     this.createEnemy(15, 15, 10, 12, 2, 5, 25, 10, 10, 3, 5, 9, 4, 10, 0, 0, 0, 0, 0, 0, 0, 2) //Parallelogram 15, 10, 12, 2, 5, 25 - Trapezium 10, 3, 5, 9, 4, 10\n  // }\n  // if(currentRoom === 6 & this.state.roomSixStatus === 0){\n  //     this.createEnemy(20, 20, 2, 3, 7, 1, 1, 20, 20, 2, 3, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2) //Two Circles\n  // }\n  // if(currentRoom === 7 & this.state.roomSevenStatus === 0){\n  //     this.createEnemy(15, 15, 4, 5, 2, 2, 2, 15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2) // Two Squares\n  // }\n  // if(currentRoom === 8 & this.state.roomEightStatus === 0){\n  //     this.createEnemy(80, 80, 6, 8, 3, 4, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One BOSS pentagon\n  // }\n  // if(currentRoom === 9 & this.state.roomNineStatus === 0){\n  //     this.createEnemy(30, 30, 4, 5, 2, 2, 10, 15, 15, 10, 14, 2, 5, 25, 4, 4, 1, 5, 10, 10, 5, 3) //Semi-Circle - Parallelogram - Trapezium\n  // }\n  // if(currentRoom === 10 & this.state.roomTenStatus === 0){\n  //     this.createEnemy(100, 100, 4, 7, 2, 2, 20, 100, 100, 4, 7, 2, 2, 20, 0, 0, 0, 0, 0, 0, 0, 2) //Two Hexagons\n  // }\n  // if(currentRoom === 11 & this.state.roomElevenStatus === 0){\n  //     this.createEnemy(50, 50, 5, 8, 4, 3, 15, 50, 50, 5, 8, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 2)\n  // }\n  // if(currentRoom === 12 & this.state.roomTwelveStatus === 0){\n  //     this.createEnemy(500, 500, 15, 20, 8, 8, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)\n  // }\n  // }\n  // *TIMED COMBAT\n\n\n  function startCombat() {\n    setStartCombatCheck(true);\n    setRunPlayerAttackTimer(true);\n    setRunPlayerAttackCloseEnemyTimer(true);\n  }\n\n  function playerAttackRandomizer(playerAttackLow, playerAttackHigh) {\n    return Math.floor(Math.random() * (playerAttackHigh - playerAttackLow + 1) + playerAttackLow);\n  }\n\n  function currentEnemyAttackRandomizer(enemyAttackLow, enemyAttackHigh) {\n    return Math.floor(Math.random() * (enemyAttackHigh - enemyAttackLow + 1) + enemyAttackLow);\n  } // playerHasNoSpeed = () => {\n  //     alert(\"You have no more speed! You took 10 damage. Return to Room One or use a stamina potion to regain your speed.\")\n  //     this.setState({\n  //         playerHealth: this.state.playerHealth - 10,\n  //         enemyRewardCheck: 0,\n  //         enemyRewardCheck: 0,\n  //         enemyRewardCheck: 0,\n  //     })\n  // }\n  // *BEGINNING OF ENEMY COMBAT ATTACK SEQUENCE\n  // *START ENEMY ONE TIMED ATTACK SEQUENCE\n\n\n  function enemyOneAttackTimer() {\n    console.log(\"Enemy ONE Attack Timer\");\n\n    if (enemyOne.enemySpeed > 0) {\n      setEnemyOne(prevEnemyOne => {\n        return { ...prevEnemyOne,\n          enemySpeed: enemyOne.enemySpeed - 1\n        };\n      });\n    }\n\n    if (enemyOne.enemySpeed <= 0) {\n      enemyOneCounterAttack();\n      setEnemyOne(prevEnemyOne => {\n        return { ...prevEnemyOne,\n          enemySpeed: enemyOne.enemyMaxSpeed\n        };\n      });\n    }\n  }\n\n  function enemyOneCounterAttack() {\n    var currentEnemyAttack = currentEnemyAttackRandomizer(enemyOne.enemyAttackLow, enemyOne.enemyAttackHigh) - player.playerArmor;\n\n    if (currentEnemyAttack <= 0) {\n      currentEnemyAttack = 1;\n    }\n\n    playerTakeDamage(currentEnemyAttack);\n  } // !END ENEMY ONE TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\n  // *START ENEMY TWO TIMED ATTACK SEQUENCE\n\n\n  function enemyTwoAttackTimer() {\n    console.log(\"Enemy TWO Attack Timer\");\n\n    if (enemyTwo.enemySpeed > 0) {\n      setEnemyTwo(prevEnemyTwo => {\n        return { ...prevEnemyTwo,\n          enemySpeed: enemyTwo.enemySpeed - 1\n        };\n      });\n    }\n\n    if (enemyTwo.enemySpeed <= 0) {\n      enemyTwoCounterAttack();\n      setEnemyTwo(prevEnemyTwo => {\n        return { ...prevEnemyTwo,\n          enemySpeed: enemyTwo.enemyMaxSpeed\n        };\n      });\n    }\n  }\n\n  function enemyTwoCounterAttack() {\n    var currentEnemyAttack = currentEnemyAttackRandomizer(enemyTwo.enemyAttackLow, enemyTwo.enemyAttackHigh) - player.playerArmor;\n\n    if (currentEnemyAttack <= 0) {\n      currentEnemyAttack = 1;\n    }\n\n    playerTakeDamage(currentEnemyAttack);\n  } // !END ENEMY TWO TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\n  // *START ENEMY THREE TIMED ATTACK SEQUENCE\n\n\n  function enemyThreeAttackTimer() {\n    console.log(\"Enemy THREE Attack Timer\");\n\n    if (enemyThree.enemySpeed > 0) {\n      setEnemyThree(prevEnemyThree => {\n        return { ...prevEnemyThree,\n          enemySpeed: enemyThree.enemySpeed - 1\n        };\n      });\n    }\n\n    if (enemyThree.enemySpeed <= 0) {\n      enemyThreeCounterAttack();\n      setEnemyThree(prevEnemyThree => {\n        return { ...prevEnemyThree,\n          enemySpeed: enemyThree.enemyMaxSpeed\n        };\n      });\n    }\n  }\n\n  function enemyThreeCounterAttack() {\n    var currentEnemyAttack = currentEnemyAttackRandomizer(enemyThree.enemyAttackLow, enemyThree.enemyAttackHigh) - player.playerArmor;\n\n    if (currentEnemyAttack <= 0) {\n      currentEnemyAttack = 1;\n    }\n\n    playerTakeDamage(currentEnemyAttack);\n  } // !END ENEMY THREE TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\n\n\n  function playerTakeDamage(damageTaken) {\n    setPlayer(prevPlayer => {\n      return { ...prevPlayer,\n        playerHealth: player.playerHealth - damageTaken\n      };\n    });\n    showToastMessageRed(damageTaken);\n  } // *START PLAYER ATTACK TIMER\n\n\n  function playerAttackTimer(timer) {\n    var timeHolder = timer;\n\n    if (timeHolder >= 0) {\n      console.log(`THIS IS PLAYER ATTACK TIMER ${timeHolder}`);\n      playerAttackTimerSetState(timeHolder);\n    }\n  }\n\n  function playerAttackTimerSetState(timer) {\n    var newTimeHolder = timer - 1;\n    setTimeout(() => {\n      setPlayerAttackTimerState(prevPlayerAttackTimerState => prevPlayerAttackTimerState - 1);\n    }, 1000);\n    setTimeout(() => {\n      playerAttackTimer(newTimeHolder);\n    }, 1000);\n  } // *CLOSE ENEMY\n\n\n  function playerAttackCloseEnemyTimer(timer) {\n    var timeHolder = timer;\n\n    if (timeHolder >= 0) {\n      console.log(`THIS IS PLAYER ATTACK CLOSE ENEMY TIMER ${timeHolder}`);\n      playerAttackCloseEnemyTimerSetState(timeHolder);\n    }\n  }\n\n  function playerAttackCloseEnemyTimerSetState(timer) {\n    var newTimeHolder = timer - 1;\n    setTimeout(() => {\n      setPlayerAttackCloseEnemyTimerState(prevPlayerAttackCloseEnemyTimerState => prevPlayerAttackCloseEnemyTimerState - 1);\n    }, 1000);\n    setTimeout(() => {\n      playerAttackCloseEnemyTimer(newTimeHolder);\n    }, 1000);\n  } // !END PLAYER ATTACK TIMER\n  // *PLAYER ATTACK BUTTON STARTS HERE\n\n\n  function playerAttackMove(attackEnemy) {\n    var currentPlayerAttack = playerAttackRandomizer(player.playerAttackLow, player.playerAttackHigh);\n\n    if (attackEnemy === 1 & enemyOne.enemyHealth <= 0) {\n      deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\");\n      killedEnemyToastMessage(attackEnemy);\n    }\n\n    if (attackEnemy === 1 & enemyOne.enemyHealth > 0) {\n      currentPlayerAttack = currentPlayerAttack - enemyOne.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      playerAttackMoveSetState(1, currentPlayerAttack, \"standardAttack\");\n      deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\");\n    }\n\n    if (attackEnemy === 2 & enemyTwo.enemyHealth <= 0) {\n      deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\");\n      killedEnemyToastMessage(attackEnemy);\n    }\n\n    if (attackEnemy === 2 & enemyTwo.enemyHealth > 0) {\n      currentPlayerAttack = currentPlayerAttack - enemyTwo.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      playerAttackMoveSetState(2, currentPlayerAttack, \"standardAttack\");\n      deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\");\n    }\n\n    if (attackEnemy === 3 & enemyThree.enemyHealth <= 0) {\n      deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\");\n      killedEnemyToastMessage(attackEnemy);\n    }\n\n    if (attackEnemy === 3 & enemyThree.enemyHealth > 0) {\n      currentPlayerAttack = currentPlayerAttack - enemyThree.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      playerAttackMoveSetState(3, currentPlayerAttack, \"standardAttack\");\n      deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\");\n    }\n  }\n\n  function playerAttackCloseEnemyMove() {\n    var currentPlayerAttack = player.playerAttackHigh;\n    var runOnce = false;\n\n    if (enemyOne.enemySpeed <= enemyTwo.enemySpeed & enemyOne.enemySpeed <= enemyThree.enemySpeed & enemyOne.enemyHealth > 0 & runOnce === false) {\n      currentPlayerAttack = currentPlayerAttack - enemyOne.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      runOnce = true;\n      playerAttackMoveSetState(1, currentPlayerAttack, \"closeAttack\");\n      deadCheck(currentPlayerAttack, 1, \"closeAttack\");\n    }\n\n    if (enemyTwo.enemySpeed <= enemyOne.enemySpeed & enemyTwo.enemySpeed <= enemyThree.enemySpeed & enemyTwo.enemyHealth > 0 & runOnce === false) {\n      currentPlayerAttack = currentPlayerAttack - enemyTwo.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      runOnce = true;\n      playerAttackMoveSetState(2, currentPlayerAttack, \"closeAttack\");\n      deadCheck(currentPlayerAttack, 2, \"closeAttack\");\n    }\n\n    if (enemyThree.enemySpeed <= enemyOne.enemySpeed & enemyThree.enemySpeed <= enemyTwo.enemySpeed & enemyThree.enemyHealth > 0 & runOnce === false) {\n      currentPlayerAttack = currentPlayerAttack - enemyThree.enemyArmor;\n\n      if (currentPlayerAttack <= 0) {\n        currentPlayerAttack = 1;\n      }\n\n      runOnce = true;\n      playerAttackMoveSetState(3, currentPlayerAttack, \"closeAttack\");\n      deadCheck(currentPlayerAttack, 3, \"closeAttack\");\n    }\n  }\n\n  function playerAttackMoveSetState(attackEnemyNumber, currentPlayerAttack, typeOfAttack) {\n    if (attackEnemyNumber === 1) {\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerDamageDone: currentPlayerAttack\n        };\n      });\n      setEnemyOne(prevEnemyOne => {\n        return { ...prevEnemyOne,\n          enemyHealth: enemyOne.enemyHealth - currentPlayerAttack\n        };\n      });\n\n      if (typeOfAttack === \"standardAttack\") {\n        setPlayerAttacked(1);\n      }\n\n      if (typeOfAttack === \"closeAttack\") {\n        setPlayerAttackedCloseEnemy(1);\n      }\n\n      showToastMessage(currentPlayerAttack, attackEnemyNumber);\n    }\n\n    if (attackEnemyNumber === 2) {\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerDamageDone: currentPlayerAttack\n        };\n      });\n      setEnemyTwo(prevEnemyTwo => {\n        return { ...prevEnemyTwo,\n          enemyHealth: enemyTwo.enemyHealth - currentPlayerAttack\n        };\n      });\n\n      if (typeOfAttack === \"standardAttack\") {\n        setPlayerAttacked(1);\n      }\n\n      if (typeOfAttack === \"closeAttack\") {\n        setPlayerAttackedCloseEnemy(1);\n      }\n\n      showToastMessage(currentPlayerAttack, attackEnemyNumber);\n    }\n\n    if (attackEnemyNumber === 3) {\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerDamageDone: currentPlayerAttack\n        };\n      });\n      setEnemyThree(prevEnemyThree => {\n        return { ...prevEnemyThree,\n          enemyHealth: enemyThree.enemyHealth - currentPlayerAttack\n        };\n      });\n\n      if (typeOfAttack === \"standardAttack\") {\n        setPlayerAttacked(1);\n      }\n\n      if (typeOfAttack === \"closeAttack\") {\n        setPlayerAttackedCloseEnemy(1);\n      }\n\n      showToastMessage(currentPlayerAttack, attackEnemyNumber);\n    }\n  }\n\n  function deadCheck(currentPlayerAttack, attackEnemy, typeOfAttack) {\n    if (enemyOne.enemyHealth - currentPlayerAttack <= 0 & enemyOne.enemyRewardCheck === 0 & attackEnemy === 1) {\n      deadCheckSetState(1);\n    }\n\n    if (enemyTwo.enemyHealth - currentPlayerAttack <= 0 & enemyTwo.enemyRewardCheck === 0 & attackEnemy === 2) {\n      deadCheckSetState(2);\n    }\n\n    if (enemyThree.enemyHealth - currentPlayerAttack <= 0 & enemyThree.enemyRewardCheck === 0 & attackEnemy === 3) {\n      deadCheckSetState(3);\n    }\n\n    if (typeOfAttack === \"standardAttack\") {\n      setRunPlayerAttackTimer(true);\n    }\n\n    if (typeOfAttack === \"closeAttack\") {\n      setRunPlayerAttackCloseEnemyTimer(true);\n    }\n  }\n\n  function deadCheckSetState(enemyNumber) {\n    if (enemyNumber === 1) {\n      setEnemyOne(prevEnemyOne => {\n        return { ...prevEnemyOne,\n          enemyHealth: 0,\n          enemyRewardCheck: 1,\n          enemySpeed: 1000\n        };\n      });\n      console.log(\"SET ENEMY ONE KILLED --------------------------------------------------------\");\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerCoins: player.playerCoins + enemyOne.enemyReward\n        };\n      });\n    }\n\n    if (enemyNumber === 2) {\n      setEnemyTwo(prevEnemyTwo => {\n        return { ...prevEnemyTwo,\n          enemyHealth: 0,\n          enemyRewardCheck: 1,\n          enemySpeed: 1000\n        };\n      });\n      console.log(\"SET ENEMY TWO KILLED --------------------------------------------------------\");\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerCoins: player.playerCoins + enemyTwo.enemyReward\n        };\n      });\n    }\n\n    if (enemyNumber === 3) {\n      setEnemyThree(prevEnemyThree => {\n        return { ...prevEnemyThree,\n          enemyHealth: 0,\n          enemyRewardCheck: 1,\n          enemySpeed: 1000\n        };\n      });\n      console.log(\"SET ENEMY THREE KILLED --------------------------------------------------------\");\n      setPlayer(prevPlayer => {\n        return { ...prevPlayer,\n          playerCoins: player.playerCoins + enemyThree.enemyReward\n        };\n      });\n    }\n  }\n\n  function setCurrentRoomStatusClearEnemy() {\n    if (currentRoom === 2) {\n      setRoomTwoStatus(1);\n    }\n\n    if (currentRoom === 3) {\n      setRoomThreeStatus(1);\n    } // if(this.state.currentRoom === 4){\n    //     this.setState({\n    //         roomFourStatus: 1,\n    //     })\n    // }\n    // if(this.state.currentRoom === 5){\n    //     this.setState({\n    //         roomFiveStatus: 1,\n    //     })\n    // }\n\n\n    if (currentRoom === 6) {\n      setRoomSixStatus(1);\n    } // if(this.state.currentRoom === 7){\n    //     this.setState({\n    //         roomSevenStatus: 1,\n    //     })\n    // }\n    // if(this.state.currentRoom === 8){\n    //     this.setState({\n    //         roomEightStatus: 1,\n    //     })\n    // }\n\n\n    if (currentRoom === 9) {\n      setRoomNineStatus(1);\n    } // if(this.state.currentRoom === 10){\n    //     this.setState({\n    //         roomTenStatus: 1,\n    //     })\n    // }\n    // if(this.state.currentRoom === 11){\n    //     this.setState({\n    //         roomElevenStatus: 1,\n    //     })\n    // }\n    // if(this.state.currentRoom === 12){\n    //     this.setState({\n    //         roomTwelveStatus: 1,\n    //     })\n    // }\n\n  } //                                         // !END OF ATTACK SEQUENCE\n  //                                         // *BEGINNING OF DODGE SEQUENCE\n  // playerDodgeMove = () => {\n  //     var playerSpeedThisDodgeAttack = Math.floor(Math.random() * (100 - this.state.playerSpeed + 1) + this.state.playerSpeed)\n  //     var enemySpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemySpeed + 1) + this.state.enemySpeed)\n  //     var enemy2SpeedThisRound = 0\n  //     var enemy3SpeedThisRound = 0\n  //     var playerDamageTaken = 0\n  //     if(this.state.playerSpeed > 0){\n  //         if(this.state.enemy2Speed > 0){\n  //             enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy2Speed + 1) + this.state.enemy2Speed)\n  //         }\n  //         if(this.state.enemy3Speed > 0){\n  //             enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy3Speed + 1) + this.state.enemy3Speed)\n  //         }\n  //         console.log(playerSpeedThisDodgeAttack)\n  //         console.log(enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound)\n  //         if(playerSpeedThisDodgeAttack > enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\n  //             console.log(\"Successful Dodge\")\n  //             this.enemyWithMostHealth()\n  //             }\n  //         if(playerSpeedThisDodgeAttack <= enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\n  //             console.log(\"Player Missed Dodge\")\n  //             this.playerMissedDodge()\n  //             }\n  //         }\n  //     if(this.state.playerSpeed <= 0){\n  //         alert(\"You have no speed to dodge!\")\n  //     }\n  // }\n  //     // player attacks enemy with highest health with full attack power if the ransomizer is greater than the enemies; speed \n  // enemyWithMostHealth = () => {\n  //     var highEnemyHealth = Math.max(this.state.enemyHealth, this.state.enemyHealth, this.state.enemyHealth)\n  //     if(highEnemyHealth === this.state.enemyHealth){\n  //         this.setState({\n  //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemyArmor),\n  //             playerSpeed: this.state.playerSpeed - 1,\n  //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\n  //             })\n  //             return\n  //     }\n  //     if(highEnemyHealth === this.state.enemyHealth){\n  //         this.setState({\n  //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemy2Armor),\n  //             playerSpeed: this.state.playerSpeed - 1,\n  //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\n  //             })\n  //             return\n  //     }\n  //     if(highEnemyHealth === this.state.enemyHealth){\n  //         this.setState({\n  //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemy3Armor),\n  //             playerSpeed: this.state.playerSpeed - 1,\n  //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\n  //             })\n  //             return\n  //     }\n  // }\n  // playerMissedDodge = () => {\n  //     var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh)\n  //     var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh)\n  //     var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh)\n  //     var playerDamage = currentEnemyAttack + currentEnemy2Attack + currentEnemy3Attack\n  //     this.setState({\n  //         playerHealth: this.state.playerHealth - playerDamage,\n  //         playerSpeed: this.state.playerSpeed - 1,\n  //         enemyDamageDone: playerDamage,\n  //         })\n  // }\n  //                                         // !END DODGE SEQUENCE\n  // typeOfEnemyAttack = () => {\n  // }\n  // openChest = () => {\n  //     if(this.state.currentRoom === 4){\n  //         this.setState({\n  //             healthPotionEffect: this.state.healthPotionEffect + 15,\n  //             roomFourStatus: 2,\n  //         })\n  //     }\n  //     if(this.state.currentRoom === 8){\n  //         this.setState({\n  //             healthPotionEffect: this.state.healthPotionEffect + 15,\n  //             roomEightStatus: 2,\n  //         })\n  //     }\n  //     if(this.state.currentRoom === 12){\n  //         this.setState({\n  //             healthPotionEffect: this.state.healthPotionEffect + 15,\n  //             roomTwelveStatus: 2,\n  //         })\n  //     }\n  // }\n  //                                         // *ON-SCREEN PROMPTS\n\n\n  function showToastMessage(currentPlayerAttack, attackEnemyNumber) {\n    if (attackEnemyNumber === 1) {\n      toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 1 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n\n    if (attackEnemyNumber === 2) {\n      toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 2 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n\n    if (attackEnemyNumber === 3) {\n      toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 3 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n  }\n\n  function killedEnemyToastMessage(attackEnemyNumber) {\n    if (attackEnemyNumber === 1) {\n      toast.info(\"You already killed enemy 1 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n\n    if (attackEnemyNumber === 2) {\n      toast.info(\"You already killed enemy 2 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n\n    if (attackEnemyNumber === 3) {\n      toast.info(\"You already killed enemy 3 !\", {\n        position: toast.POSITION.TOP_CENTER\n      });\n    }\n  }\n\n  function showToastMessageRed(damageTaken) {\n    toast.error(`You took ${damageTaken} damage !`, {\n      position: toast.POSITION.TOP_RIGHT,\n      autoClose: 1500\n    });\n  } // *GAME TIMER/BREAKLOOP TIMER\n\n\n  function gameTime() {\n    setBreakLoop(prevBreakLoop => prevBreakLoop + 1);\n    setGameTick(prevGameTick => prevGameTick + 1);\n    setRunEnemyOneAttackTimer(true);\n    setRunEnemyTwoAttackTimer(true);\n    setRunEnemyThreeAttackTimer(true);\n\n    if (breakLoop < 300) {\n      setTimeout(() => {\n        gameTime();\n      }, 1000);\n    }\n\n    console.log(`gameTime() ran. gameTick is at ${gameTick}`);\n  } //  !END GAME TIMER\n  //                                         //  *ROOM TIMER\n  // roomTime = () => {\n  //     this.roomTimeSetState()\n  //     if(this.state.roomBreakLoop < 300){\n  //         setTimeout(() => {this.roomTime(); }, 1000);\n  //     }\n  //     console.log(`gameRoomTime() is running. roomTime is at ${this.state.roomTime}`)\n  // }\n  // roomTimeSetState = () => {\n  //     this.setState({\n  //         roomTime: this.state.roomTime + 1,\n  //         roomBreakLoop: this.state.roomBreakLoop + 1,\n  //     })\n  // }\n  // !END ROOM TIMER\n  // render() {\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bg-dark bg-opacity-25 text-dark\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        gameTick: gameTick,\n        devButtonUpgrade: devButtonUpgrade,\n        devButtonDowngrade: devButtonDowngrade,\n        player: player\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            player: player,\n            enemyOne: enemyOne,\n            pickClass: pickClass\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1152,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1152,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/GameBoard\",\n          element: /*#__PURE__*/_jsxDEV(GameBoard, {\n            useHealthPotion: useHealthPotion,\n            buyFromStore: buyFromStore,\n            roomMovement: roomMovement,\n            createEnemy: createEnemy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/RoomTwo\",\n          element: /*#__PURE__*/_jsxDEV(RoomTwo, {\n            useHealthPotion: useHealthPotion,\n            resetRoomStatus: resetRoomStatus,\n            roomMovement: roomMovement,\n            enemyOne: enemyOne,\n            enemyTwo: enemyTwo,\n            enemyThree: enemyThree,\n            roomTwoStatus: roomTwoStatus,\n            currentRoom: currentRoom,\n            numberOfEnemiesInRoom: numberOfEnemiesInRoom,\n            startCombatCheck: startCombatCheck,\n            startCombat: startCombat,\n            playerAttacked: playerAttacked,\n            playerAttackTimerState: playerAttackTimerState,\n            playerAttackTimerStateMax: playerAttackTimerStateMax,\n            playerAttackMove: playerAttackMove,\n            playerAttackedCloseEnemy: playerAttackedCloseEnemy,\n            playerAttackCloseEnemyTimerState: playerAttackCloseEnemyTimerState,\n            playerAttackCloseEnemyTimerStateMax: playerAttackCloseEnemyTimerStateMax,\n            playerAttackCloseEnemyMove: playerAttackCloseEnemyMove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1156,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/RoomThree\",\n          element: /*#__PURE__*/_jsxDEV(RoomThree, {\n            useHealthPotion: useHealthPotion,\n            resetRoomStatus: resetRoomStatus,\n            roomMovement: roomMovement,\n            enemyOne: enemyOne,\n            enemyTwo: enemyTwo,\n            enemyThree: enemyThree,\n            roomThreeStatus: roomThreeStatus,\n            currentRoom: currentRoom,\n            numberOfEnemiesInRoom: numberOfEnemiesInRoom,\n            startCombatCheck: startCombatCheck,\n            startCombat: startCombat,\n            playerAttacked: playerAttacked,\n            playerAttackTimerState: playerAttackTimerState,\n            playerAttackTimerStateMax: playerAttackTimerStateMax,\n            playerAttackMove: playerAttackMove,\n            playerAttackedCloseEnemy: playerAttackedCloseEnemy,\n            playerAttackCloseEnemyTimerState: playerAttackCloseEnemyTimerState,\n            playerAttackCloseEnemyTimerStateMax: playerAttackCloseEnemyTimerStateMax,\n            playerAttackCloseEnemyMove: playerAttackCloseEnemyMove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1160,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/RoomSix\",\n          element: /*#__PURE__*/_jsxDEV(RoomSix, {\n            useHealthPotion: useHealthPotion,\n            resetRoomStatus: resetRoomStatus,\n            roomMovement: roomMovement,\n            enemyOne: enemyOne,\n            enemyTwo: enemyTwo,\n            enemyThree: enemyThree,\n            roomSixStatus: roomSixStatus,\n            currentRoom: currentRoom,\n            numberOfEnemiesInRoom: numberOfEnemiesInRoom,\n            startCombatCheck: startCombatCheck,\n            startCombat: startCombat,\n            playerAttacked: playerAttacked,\n            playerAttackTimerState: playerAttackTimerState,\n            playerAttackTimerStateMax: playerAttackTimerStateMax,\n            playerAttackMove: playerAttackMove,\n            playerAttackedCloseEnemy: playerAttackedCloseEnemy,\n            playerAttackCloseEnemyTimerState: playerAttackCloseEnemyTimerState,\n            playerAttackCloseEnemyTimerStateMax: playerAttackCloseEnemyTimerStateMax,\n            playerAttackCloseEnemyMove: playerAttackCloseEnemyMove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1168,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/RoomNine\",\n          element: /*#__PURE__*/_jsxDEV(RoomNine, {\n            useHealthPotion: useHealthPotion,\n            resetRoomStatus: resetRoomStatus,\n            roomMovement: roomMovement,\n            enemyOne: enemyOne,\n            enemyTwo: enemyTwo,\n            enemyThree: enemyThree,\n            roomNineStatus: roomNineStatus,\n            currentRoom: currentRoom,\n            numberOfEnemiesInRoom: numberOfEnemiesInRoom,\n            startCombatCheck: startCombatCheck,\n            startCombat: startCombat,\n            playerAttacked: playerAttacked,\n            playerAttackTimerState: playerAttackTimerState,\n            playerAttackTimerStateMax: playerAttackTimerStateMax,\n            playerAttackMove: playerAttackMove,\n            playerAttackedCloseEnemy: playerAttackedCloseEnemy,\n            playerAttackCloseEnemyTimerState: playerAttackCloseEnemyTimerState,\n            playerAttackCloseEnemyTimerStateMax: playerAttackCloseEnemyTimerStateMax,\n            playerAttackCloseEnemyMove: playerAttackCloseEnemyMove\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1176,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1148,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1147,\n    columnNumber: 13\n  }, this);\n}\n\n_s(App, \"dUWnNypEIFHhp2D4cOnSxvUZKSQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Component","ReactDOM","useState","useEffect","BrowserRouter","Routes","Route","Link","Home","Navbar","GameMap","Layout","GameBoard","RoomTwo","RoomThree","RoomFour","RoomFive","RoomSix","RoomSeven","RoomEight","RoomNine","RoomTen","RoomEleven","RoomTwelve","DamageEffects","ToastContainer","toast","App","gameTick","setGameTick","breakLoop","setBreakLoop","player","setPlayer","playerHealth","playerMaxHealth","playerAttackLow","playerAttackHigh","playerSpeed","playerMaxSpeed","playerArmor","playerCoins","playerHealthPotion","playerHealthPotionEffect","playerStaminaPotion","playerDamageDone","playerAttackTimerState","setPlayerAttackTimerState","playerAttackTimerStateMax","setPlayerAttackTimerStateMax","runPlayerAttackTimer","setRunPlayerAttackTimer","playerAttacked","setPlayerAttacked","playerAttackCloseEnemyTimerState","setPlayerAttackCloseEnemyTimerState","playerAttackCloseEnemyTimerStateMax","setPlayerAttackCloseEnemyTimerStateMax","runPlayerAttackCloseEnemyTimer","setRunPlayerAttackCloseEnemyTimer","playerAttackedCloseEnemy","setPlayerAttackedCloseEnemy","startCombatCheck","setStartCombatCheck","enemyOne","setEnemyOne","enemyName","enemyMaxHealth","enemyHealth","enemyAttackLow","enemyAttackHigh","enemySpeed","enemyMaxSpeed","enemyArmor","enemyReward","enemyRewardCheck","enemyColor","enemyTwo","setEnemyTwo","enemyThree","setEnemyThree","enemiesInRoomCheck","setEnemiesInRoomCheck","numberOfEnemiesInRoom","setNumberOfEnemiesInRoom","currentRoom","setCurrentRoom","currentRoomStatus","setCurrentRoomStatus","roomTwoStatus","setRoomTwoStatus","roomThreeStatus","setRoomThreeStatus","roomFourStatus","setRoomFourStatus","roomFiveStatus","setRoomFiveStatus","roomSixStatus","setRoomSixStatus","roomSevenStatus","setRoomSevenStatus","roomEightStatus","setRoomEightStatus","roomNineStatus","setRoomNineStatus","roomTenStatus","setRoomTenStatus","roomElevenStatus","setRoomElevenStatus","roomTwelveStatus","setRoomTwelveStatus","runEnemyOneAttackTimer","setRunEnemyOneAttackTimer","runEnemyTwoAttackTimer","setRunEnemyTwoAttackTimer","runEnemyThreeAttackTimer","setRunEnemyThreeAttackTimer","playerAttackTimer","playerAttackCloseEnemyTimer","enemyOneAttackTimer","enemyTwoAttackTimer","enemyThreeAttackTimer","setCurrentRoomStatusClearEnemy","devButtonUpgrade","prevPlayer","devButtonDowngrade","useHealthPotion","alert","buyFromStore","item","resetRoomStatus","prevEnemyOne","prevEnemyTwo","prevEnemyThree","pickClass","health","maxHealth","attackLow","attackHigh","speed","maxSpeed","armor","coins","healthPotion","staminaPotion","attackTimer","attackCloseEnemyTimer","console","log","gameTime","createEnemy","reward","enemy2Name","maxHealth2","health2","attack2Low","attack2High","speed2","armor2","reward2","enemy3Name","maxHealth3","health3","attack3Low","attack3High","speed3","armor3","reward3","roomMovement","nowCurrentRoom","startCombat","playerAttackRandomizer","Math","floor","random","currentEnemyAttackRandomizer","enemyOneCounterAttack","currentEnemyAttack","playerTakeDamage","enemyTwoCounterAttack","enemyThreeCounterAttack","damageTaken","showToastMessageRed","timer","timeHolder","playerAttackTimerSetState","newTimeHolder","setTimeout","prevPlayerAttackTimerState","playerAttackCloseEnemyTimerSetState","prevPlayerAttackCloseEnemyTimerState","playerAttackMove","attackEnemy","currentPlayerAttack","deadCheck","killedEnemyToastMessage","playerAttackMoveSetState","playerAttackCloseEnemyMove","runOnce","attackEnemyNumber","typeOfAttack","showToastMessage","deadCheckSetState","enemyNumber","success","position","POSITION","TOP_CENTER","info","error","TOP_RIGHT","autoClose","prevBreakLoop","prevGameTick"],"sources":["C:/Users/freeb/OneDrive/Desktop/Game_Project/Game_Project_Frontend/GameFrontEnd/src/components/App.jsx"],"sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home/Home';\r\nimport Navbar from './Navbar/Navbar';\r\nimport GameMap from './GameMap/GameMap';\r\nimport Layout from './Layout/Layout';\r\nimport GameBoard from './GameBoard/GameBoard';\r\nimport RoomTwo from './RoomTwo/RoomTwo';\r\nimport RoomThree from './RoomThree/RoomThree';\r\nimport RoomFour from './RoomFour/RoomFour';\r\nimport RoomFive from './RoomFive/RoomFive';\r\nimport RoomSix from './RoomSix/RoomSix';\r\nimport RoomSeven from './RoomSeven/RoomSeven';\r\nimport RoomEight from './RoomEight/RoomEight';\r\nimport RoomNine from './RoomNine/RoomNine';\r\nimport RoomTen from './RoomTen/RoomTen';\r\nimport RoomEleven from './RoomEleven/RoomEleven';\r\nimport RoomTwelve from './RoomTwelve/RoomTwelve';\r\nimport DamageEffects from './DamageEffects/DamageEffects';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n    const [gameTick, setGameTick] = useState(0)\r\n    const [breakLoop, setBreakLoop] = useState(0)\r\n\r\n    const [player, setPlayer] = useState({\r\n        playerHealth: 0,\r\n        playerMaxHealth: 0,\r\n        playerAttackLow: 0,\r\n        playerAttackHigh: 0,\r\n        playerSpeed: 0,\r\n        playerMaxSpeed: 0,\r\n        playerArmor: 0,\r\n        playerCoins: 0,\r\n        playerHealthPotion: 0,\r\n        playerHealthPotionEffect: 15,\r\n        playerStaminaPotion: 0,\r\n        playerDamageDone: 0\r\n    })\r\n\r\n    const [playerAttackTimerState, setPlayerAttackTimerState] = useState(0)\r\n    const [playerAttackTimerStateMax, setPlayerAttackTimerStateMax] = useState(0)\r\n    const [runPlayerAttackTimer, setRunPlayerAttackTimer] = useState(false)\r\n\r\n    const [playerAttacked, setPlayerAttacked] = useState(1)\r\n\r\n    const [playerAttackCloseEnemyTimerState, setPlayerAttackCloseEnemyTimerState] = useState(0)\r\n    const [playerAttackCloseEnemyTimerStateMax, setPlayerAttackCloseEnemyTimerStateMax] = useState(0)\r\n    const [runPlayerAttackCloseEnemyTimer, setRunPlayerAttackCloseEnemyTimer] = useState(false)\r\n\r\n    const [playerAttackedCloseEnemy, setPlayerAttackedCloseEnemy] = useState(1)\r\n\r\n\r\n    const [startCombatCheck, setStartCombatCheck] = useState(false)\r\n\r\n    const [enemyOne, setEnemyOne] = useState({\r\n        enemyName: \"\",\r\n        enemyMaxHealth: 0, \r\n        enemyHealth: 0, \r\n        enemyAttackLow: 0,\r\n        enemyAttackHigh: 0, \r\n        enemySpeed: 0, \r\n        enemyMaxSpeed: 0, \r\n        enemyArmor: 0, \r\n        enemyReward: 0,\r\n        enemyRewardCheck: 0,\r\n        enemyColor: \"primary\"\r\n    })\r\n\r\n    const [enemyTwo, setEnemyTwo] = useState({\r\n        enemyName: \"\",\r\n        enemyMaxHealth: 1, \r\n        enemyHealth: 1, \r\n        enemyAttackLow: 0, \r\n        enemyAttackHigh: 0,\r\n        enemySpeed: 0, \r\n        enemyMaxSpeed: 0, \r\n        enemyArmor: 0, \r\n        enemyReward: 0,\r\n        enemyRewardCheck: 0,\r\n        enemyColor: \"info\"\r\n    })\r\n    const [enemyThree, setEnemyThree] = useState({\r\n        enemyName: \"\",\r\n        enemyMaxHealth: 1,\r\n        enemyHealth: 1, \r\n        enemyAttackLow: 0, \r\n        enemyAttackHigh: 0, \r\n        enemySpeed: 0, \r\n        enemyMaxSpeed: 0, \r\n        enemyArmor: 0, \r\n        enemyReward: 0,\r\n        enemyRewardCheck: 0,\r\n        enemyColor: \"secondary\"\r\n    })\r\n\r\n    const [enemiesInRoomCheck, setEnemiesInRoomCheck] = useState(false)\r\n\r\n    const [numberOfEnemiesInRoom, setNumberOfEnemiesInRoom] = useState(0)\r\n    // const [enemyDamageDone, setEnemyDamageDone] = useState(0)\r\n\r\n    const[currentRoom, setCurrentRoom] = useState(0)\r\n    const[currentRoomStatus, setCurrentRoomStatus] = useState(0)\r\n\r\n    const [roomTwoStatus, setRoomTwoStatus] = useState(0)\r\n    const [roomThreeStatus, setRoomThreeStatus] = useState(0)\r\n    const [roomFourStatus, setRoomFourStatus] = useState(0)\r\n    const [roomFiveStatus, setRoomFiveStatus] = useState(0)\r\n    const [roomSixStatus, setRoomSixStatus] = useState(0)\r\n    const [roomSevenStatus, setRoomSevenStatus] = useState(0)\r\n    const [roomEightStatus, setRoomEightStatus] = useState(0)\r\n    const [roomNineStatus, setRoomNineStatus] = useState(0)\r\n    const [roomTenStatus, setRoomTenStatus] = useState(0)\r\n    const [roomElevenStatus, setRoomElevenStatus] = useState(0)\r\n    const [roomTwelveStatus, setRoomTwelveStatus] = useState(0)\r\n\r\n\r\n\r\n    const [runEnemyOneAttackTimer, setRunEnemyOneAttackTimer] = useState(false)\r\n    const [runEnemyTwoAttackTimer, setRunEnemyTwoAttackTimer] = useState(false)\r\n    const [runEnemyThreeAttackTimer, setRunEnemyThreeAttackTimer] = useState(false)\r\n\r\nuseEffect(() => {\r\n    if(playerAttackTimerState < 0 & runPlayerAttackTimer === false){\r\n        setPlayerAttackTimerState(playerAttackTimerStateMax)\r\n        setPlayerAttacked(2)\r\n    }\r\n    if(playerAttackTimerState >= 0 & runPlayerAttackTimer === true){\r\n        setRunPlayerAttackTimer(false)\r\n        if(enemyOne.enemyHealth > 0 || enemyTwo.enemyHealth > 0 || enemyThree.enemyHealth > 0){\r\n            playerAttackTimer(playerAttackTimerState)\r\n        }\r\n    }\r\n\r\n    if(playerAttackCloseEnemyTimerState < 0 & runPlayerAttackCloseEnemyTimer === false){\r\n        setPlayerAttackCloseEnemyTimerState(playerAttackCloseEnemyTimerStateMax)\r\n        setPlayerAttackedCloseEnemy(2)\r\n    }\r\n    if(playerAttackCloseEnemyTimerState >= 0 & runPlayerAttackCloseEnemyTimer === true){\r\n        setRunPlayerAttackCloseEnemyTimer(false)\r\n        if(enemyOne.enemyHealth > 0 || enemyTwo.enemyHealth > 0 || enemyThree.enemyHealth > 0){\r\n            playerAttackCloseEnemyTimer(playerAttackCloseEnemyTimerState)\r\n        }\r\n    }\r\n\r\n    if(enemyOne.enemyHealth > 0 & startCombatCheck === true & runEnemyOneAttackTimer === true){\r\n        setRunEnemyOneAttackTimer(false)\r\n        enemyOneAttackTimer()\r\n    }\r\n    if(enemyTwo.enemyHealth > 0 & startCombatCheck === true & runEnemyTwoAttackTimer === true){\r\n        setRunEnemyTwoAttackTimer(false)\r\n        enemyTwoAttackTimer()\r\n    }\r\n    if(enemyThree.enemyHealth > 0 & startCombatCheck === true & runEnemyThreeAttackTimer === true){\r\n        setRunEnemyThreeAttackTimer(false)\r\n        enemyThreeAttackTimer()\r\n    }\r\n    if(enemyOne.enemyHealth <= 0 & enemyTwo.enemyHealth <= 0 & enemyThree.enemyHealth <= 0){\r\n        setCurrentRoomStatusClearEnemy()\r\n        setStartCombatCheck(false)\r\n    }\r\n\r\n    if(enemiesInRoomCheck === true){\r\n        setEnemiesInRoomCheck(false)\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n    function devButtonUpgrade() {\r\n        setPlayer (prevPlayer => {\r\n            return {...prevPlayer,\r\n            playerHealth: player.playerMaxHealth,\r\n            playerAttackHigh: player.playerAttackHigh + 5,\r\n            playerCoins: player.playerCoins + 100\r\n        }\r\n        })\r\n    }\r\n\r\n    function devButtonDowngrade() {\r\n        setPlayer (prevPlayer => {\r\n            return {...prevPlayer,\r\n            playerAttackHigh: player.playerAttackHigh - 5,\r\n        }\r\n        })\r\n    }\r\n\r\n    function useHealthPotion() {\r\n        if(player.playerHealthPotion <= 0){\r\n            return(alert(\"You are out of health potions!\"))\r\n        }\r\n        if(player.playerHealth + player.playerHealthPotionEffect > player.playerMaxHealth){\r\n            setPlayer (prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerHealthPotion: player.playerHealthPotion - 1,\r\n                playerHealth: player.playerMaxHealth\r\n            }\r\n            })\r\n        } \r\n        if(player.playerHealth >= player.playerMaxHealth){\r\n            return(alert(\"You are at max health!\"))\r\n        }\r\n        if(player.playerHealth + player.playerHealthPotionEffect < player.playerMaxHealth){\r\n            setPlayer (prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerHealthPotion: player.playerHealthPotion - 1,\r\n                playerHealth: player.playerHealth + player.playerHealthPotionEffect\r\n            }\r\n            })\r\n        }\r\n        setPlayerAttacked(1)\r\n        setRunPlayerAttackTimer(true)\r\n    }\r\n\r\n    // useStaminaPotion = () => {\r\n    //     if(this.state.playerStaminaPotion <= 0){\r\n    //         return(alert(\"You are out of stamina potions!\"))\r\n    //     }\r\n    //     if(this.state.playerSpeed === this.state.maxPlayerSpeed){\r\n    //         return(alert(\"You're already at max speed!\"))\r\n    //     } else {\r\n    //         this.setState({\r\n    //             playerStaminaPotion: this.state.playerStaminaPotion - 1,\r\n    //             playerSpeed: this.state.maxPlayerSpeed,\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    function buyFromStore(item) {\r\n        if(item === \"health\"){\r\n            if(player.playerCoins >= 5){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 5,\r\n                        playerMaxHealth: player.playerMaxHealth + 10\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a health upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"attackLow\"){\r\n            if(player.playerCoins >= 6 & player.playerAttackLow < player.playerAttackHigh){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 6,\r\n                        playerAttackLow: player.playerAttackLow + 1\r\n                    }\r\n                })\r\n            } \r\n            if(player.playerAttackLow >= player.playerAttackHigh){\r\n                alert(\"Your minimum attack can not exceed you maximum attack.\")\r\n            }\r\n            if(player.playerCoins < 6){\r\n                alert(\"You can't afford a minimum attack upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"attackHigh\"){\r\n            if(player.playerCoins >= 3){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 3,\r\n                        playerAttackHigh: player.playerAttackHigh + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a maximum attack upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"speed\"){\r\n            if(player.playerCoins >= 2){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 2,\r\n                        playerMaxSpeed: player.playerMaxSpeed + 1,\r\n                        playerSpeed: player.playerSpeed + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a speed upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"armor\"){\r\n            if(player.playerCoins >= 3){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 3,\r\n                        playerArmor: player.playerArmor + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford an armor upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"healthPotion\"){\r\n            if(player.playerHealthPotion >= 10){\r\n                return (alert (\"You can only have up to ten health potions.\"))\r\n            }\r\n            if(player.playerCoins >= 2){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 2,\r\n                        playerHealthPotion: player.playerHealthPotion + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a health potion.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"staminaPotion\"){\r\n            if(player.playerStaminaPotion >= 8){\r\n                return (alert(\"You can only have up to eight stamina potions.\"))\r\n            }\r\n            if(player.playerCoins >= 1){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 1,\r\n                        playerStaminaPotion: player.playerStaminaPotion + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a stamina potion.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    function resetRoomStatus() {\r\n        setRoomTwoStatus(0)\r\n        setRoomThreeStatus(0)\r\n        setRoomFiveStatus(0)\r\n        setRoomSixStatus(0)\r\n        setRoomSevenStatus(0)\r\n        setRoomNineStatus(0)\r\n        setRoomTenStatus(0)\r\n        setRoomElevenStatus(0)\r\n        setEnemyOne(prevEnemyOne => {\r\n            return {...prevEnemyOne, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setEnemyTwo(prevEnemyTwo => {\r\n            return {...prevEnemyTwo, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setEnemyThree(prevEnemyThree => {\r\n            return {...prevEnemyThree, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setPlayerAttacked(1)\r\n        setStartCombatCheck(false)\r\n        setPlayer(prevPlayer =>{\r\n            return {...prevPlayer,\r\n            playerSpeed: player.playerMaxSpeed\r\n            }\r\n        })\r\n    }\r\n\r\n    function pickClass(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer, attackCloseEnemyTimer) {\r\n        console.log(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer, attackCloseEnemyTimer)\r\n        setPlayer(prevPlayer => {\r\n            return {...prevPlayer,\r\n            playerHealth: health,\r\n            playerMaxHealth: maxHealth,\r\n            playerAttackLow: attackLow,\r\n            playerAttackHigh: attackHigh,\r\n            playerSpeed: speed,\r\n            playerMaxSpeed: maxSpeed,\r\n            playerArmor: armor,\r\n            playerCoins: coins,\r\n            playerHealthPotion: healthPotion,\r\n            playerStaminaPotion: staminaPotion\r\n        }\r\n        })\r\n        setPlayerAttackTimerState(attackTimer)\r\n        setPlayerAttackTimerStateMax(attackTimer)\r\n        setPlayerAttackCloseEnemyTimerState(attackCloseEnemyTimer)\r\n        setPlayerAttackCloseEnemyTimerStateMax(attackCloseEnemyTimer)\r\n        \r\n        if(gameTick === 0){\r\n            gameTime()\r\n        }\r\n    }\r\n\r\n    function createEnemy(enemyName, maxHealth, health, attackLow, attackHigh, speed, armor, reward, enemy2Name, maxHealth2, health2, attack2Low, attack2High, speed2, armor2, reward2, enemy3Name, maxHealth3, health3, attack3Low, attack3High, speed3, armor3, reward3, numberOfEnemiesInRoom) {\r\n        setEnemyOne(prevEnemyOne => {\r\n            return {...prevEnemyOne,\r\n                enemyName: enemyName,\r\n                enemyMaxHealth: maxHealth,\r\n                enemyHealth: health,\r\n                enemyAttackLow: attackLow,\r\n                enemyAttackHigh: attackHigh,\r\n                enemySpeed: speed,\r\n                enemyMaxSpeed: speed,\r\n                enemyArmor: armor,\r\n                enemyReward: reward\r\n            }\r\n        })\r\n        setEnemyTwo(prevEnemyTwo => {\r\n            return {...prevEnemyTwo,\r\n                enemyName: enemy2Name,\r\n                enemyMaxHealth: maxHealth2,\r\n                enemyHealth: health2,\r\n                enemyAttackLow: attack2Low,\r\n                enemyAttackHigh: attack2High,\r\n                enemySpeed: speed2,\r\n                enemyMaxSpeed: speed2,\r\n                enemyArmor: armor2,\r\n                enemyReward: reward2\r\n            }\r\n        })\r\n        setEnemyThree(prevEnemyThree => {\r\n            return {...prevEnemyThree,\r\n                enemyName: enemy3Name,\r\n                enemyMaxHealth: maxHealth3,\r\n                enemyHealth: health3,\r\n                enemyAttackLow: attack3Low,\r\n                enemyAttackHigh: attack3High,\r\n                enemySpeed: speed3,\r\n                enemyMaxSpeed: speed3,\r\n                enemyArmor: armor3,\r\n                enemyReward: reward3\r\n            }\r\n        })\r\n        setNumberOfEnemiesInRoom(numberOfEnemiesInRoom)\r\n    }\r\n\r\n                        // *ROOM MOVEMENT, CREATES ENEMIES FOR NEXT ROOM, ACCOUNTS FOR AND CHANGES PLAYER SPEED\r\n\r\n    function roomMovement(nowCurrentRoom){\r\n        setCurrentRoom(nowCurrentRoom)\r\n        setPlayerAttackTimerState(playerAttackTimerStateMax)\r\n        setPlayerAttackCloseEnemyTimerState(playerAttackCloseEnemyTimerStateMax)\r\n        setPlayerAttacked(1)\r\n        setPlayerAttackedCloseEnemy(1)\r\n        setEnemyOne(prevEnemyOne => {\r\n            return {...prevEnemyOne, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setEnemyTwo(prevEnemyTwo => {\r\n            return {...prevEnemyTwo, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setEnemyThree(prevEnemyThree => {\r\n            return {...prevEnemyThree, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n\r\n        if(player.playerSpeed > 0){\r\n            setCurrentRoom(nowCurrentRoom)\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                    playerSpeed: player.playerSpeed - 1\r\n                }\r\n            })\r\n        }\r\n            // ?enemyName, enemyMaxHealth, EnemyHealth, enemyAttackLow, enemyAttackHigh, enemySpeed, enemyArmor, enemyReward\r\n        if(nowCurrentRoom === 2 & roomTwoStatus === 0) {\r\n            createEnemy(\"Enemy One\", 20, 20, 2, 3, 5, 1, 1, \"Enemy Two\", 0, 0, 0, 0, 1000, 0, 0, \"Enemy Three\", 0, 0, 0, 0, 1000, 0, 0, 1)\r\n        }\r\n        if(nowCurrentRoom === 3 & roomThreeStatus === 0){\r\n            createEnemy(\"Enemy One\", 15, 15, 4, 5, 3, 2, 2, \"Enemy Two\", 0, 0, 0, 0, 1000, 0, 0, \"Enemy Three\", 0, 0, 0, 0, 1000, 0, 0, 1) //One Square 15, 4, 5, 2, 2, 2\r\n        }\r\n        if(nowCurrentRoom === 6 & roomSixStatus === 0){\r\n            createEnemy(\"enemyOneRoomSix\", 20, 20, 2, 3, 7, 1, 1, \"enemyTwoRoomSix\", 20, 20, 2, 3, 4, 1, 1, \"enemyThreeRoomSix\", 0, 0, 0, 0, 1000, 0, 0, 2) //Two Circles\r\n        }\r\n        if(nowCurrentRoom === 9 & roomNineStatus === 0){\r\n            createEnemy(\"enemyOneRoomNine\", 30, 30, 4, 5, 4, 2, 10, \"enemyTwoRoomNine\", 15, 15, 10, 14, 3, 5, 25, \"enemyThreeRoomNine\", 4, 4, 1, 5, 10, 10, 5, 3) //Semi-Circle - Parallelogram - Trapezium\r\n        }\r\n    }\r\n\r\n    // function roomMovement(currentRoom) {\r\n    //     if(player.playerSpeed > 0){\r\n    //         setCurrentRoom(currentRoom)\r\n    //         setPlayer(prevPlayer => {\r\n    //             return {...prevPlayer,\r\n    //                 playerSpeed: player.playerSpeed - 1\r\n    //             }\r\n    //         })\r\n\r\n    //         this.setState({\r\n    //             currentRoom: currentRoom,\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             enemyRewardCheck: 0,\r\n    //             playerDamageDone: 0,\r\n    //             enemyDamageDone: 0,\r\n    //             playerAttacked: 1,\r\n    //         })\r\n    //     }\r\n    //     if(this.state.playerSpeed <= 0){\r\n    //         this.playerHasNoSpeed()\r\n    //     }\r\n\r\n        // if(currentRoom === 3 & this.state.roomThreeStatus === 0){\r\n        //     this.createEnemy(15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Square 15, 4, 5, 2, 2, 2\r\n        // }\r\n        // if(currentRoom === 4 & this.state.roomFourStatus === 0){\r\n        //     this.createEnemy(50, 50, 5, 7, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Boss Triangle\r\n        // }\r\n        // if(currentRoom === 5 & this.state.roomFiveStatus === 0){\r\n        //     this.createEnemy(15, 15, 10, 12, 2, 5, 25, 10, 10, 3, 5, 9, 4, 10, 0, 0, 0, 0, 0, 0, 0, 2) //Parallelogram 15, 10, 12, 2, 5, 25 - Trapezium 10, 3, 5, 9, 4, 10\r\n        // }\r\n        // if(currentRoom === 6 & this.state.roomSixStatus === 0){\r\n        //     this.createEnemy(20, 20, 2, 3, 7, 1, 1, 20, 20, 2, 3, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2) //Two Circles\r\n        // }\r\n        // if(currentRoom === 7 & this.state.roomSevenStatus === 0){\r\n        //     this.createEnemy(15, 15, 4, 5, 2, 2, 2, 15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2) // Two Squares\r\n        // }\r\n        // if(currentRoom === 8 & this.state.roomEightStatus === 0){\r\n        //     this.createEnemy(80, 80, 6, 8, 3, 4, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One BOSS pentagon\r\n        // }\r\n        // if(currentRoom === 9 & this.state.roomNineStatus === 0){\r\n        //     this.createEnemy(30, 30, 4, 5, 2, 2, 10, 15, 15, 10, 14, 2, 5, 25, 4, 4, 1, 5, 10, 10, 5, 3) //Semi-Circle - Parallelogram - Trapezium\r\n        // }\r\n        // if(currentRoom === 10 & this.state.roomTenStatus === 0){\r\n        //     this.createEnemy(100, 100, 4, 7, 2, 2, 20, 100, 100, 4, 7, 2, 2, 20, 0, 0, 0, 0, 0, 0, 0, 2) //Two Hexagons\r\n        // }\r\n        // if(currentRoom === 11 & this.state.roomElevenStatus === 0){\r\n        //     this.createEnemy(50, 50, 5, 8, 4, 3, 15, 50, 50, 5, 8, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 2)\r\n        // }\r\n        // if(currentRoom === 12 & this.state.roomTwelveStatus === 0){\r\n        //     this.createEnemy(500, 500, 15, 20, 8, 8, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)\r\n        // }\r\n    // }\r\n                                            // *TIMED COMBAT\r\n    function startCombat() {\r\n        setStartCombatCheck(true)\r\n        setRunPlayerAttackTimer(true)\r\n        setRunPlayerAttackCloseEnemyTimer(true)\r\n    }\r\n\r\n    function playerAttackRandomizer(playerAttackLow, playerAttackHigh) {\r\n        return Math.floor(Math.random() * (playerAttackHigh - playerAttackLow + 1) + playerAttackLow)\r\n    }\r\n\r\n    function currentEnemyAttackRandomizer(enemyAttackLow, enemyAttackHigh) {\r\n        return Math.floor(Math.random() * (enemyAttackHigh - enemyAttackLow + 1) + enemyAttackLow)\r\n    }\r\n\r\n    // playerHasNoSpeed = () => {\r\n    //     alert(\"You have no more speed! You took 10 damage. Return to Room One or use a stamina potion to regain your speed.\")\r\n    //     this.setState({\r\n    //         playerHealth: this.state.playerHealth - 10,\r\n    //         enemyRewardCheck: 0,\r\n    //         enemyRewardCheck: 0,\r\n    //         enemyRewardCheck: 0,\r\n    //     })\r\n    // }\r\n\r\n\r\n                                            // *BEGINNING OF ENEMY COMBAT ATTACK SEQUENCE\r\n    // *START ENEMY ONE TIMED ATTACK SEQUENCE\r\n    function enemyOneAttackTimer(){\r\n        console.log(\"Enemy ONE Attack Timer\")\r\n        if(enemyOne.enemySpeed > 0){\r\n            setEnemyOne(prevEnemyOne => {\r\n                return {...prevEnemyOne,\r\n                    enemySpeed: enemyOne.enemySpeed - 1\r\n                }\r\n            })\r\n        }\r\n        if(enemyOne.enemySpeed <= 0){\r\n            enemyOneCounterAttack()\r\n            setEnemyOne(prevEnemyOne => {\r\n                return {...prevEnemyOne,\r\n                    enemySpeed: enemyOne.enemyMaxSpeed\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function enemyOneCounterAttack() {\r\n        var currentEnemyAttack = currentEnemyAttackRandomizer(enemyOne.enemyAttackLow, enemyOne.enemyAttackHigh) - player.playerArmor\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        playerTakeDamage(currentEnemyAttack)\r\n    }\r\n    // !END ENEMY ONE TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\r\n\r\n    // *START ENEMY TWO TIMED ATTACK SEQUENCE\r\n    function enemyTwoAttackTimer(){\r\n        console.log(\"Enemy TWO Attack Timer\")\r\n        if(enemyTwo.enemySpeed > 0){\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return {...prevEnemyTwo,\r\n                    enemySpeed: enemyTwo.enemySpeed - 1\r\n                }\r\n            })\r\n        }\r\n        if(enemyTwo.enemySpeed <= 0){\r\n            enemyTwoCounterAttack()\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return {...prevEnemyTwo,\r\n                    enemySpeed: enemyTwo.enemyMaxSpeed\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function enemyTwoCounterAttack() {\r\n        var currentEnemyAttack = currentEnemyAttackRandomizer(enemyTwo.enemyAttackLow, enemyTwo.enemyAttackHigh) - player.playerArmor\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        playerTakeDamage(currentEnemyAttack)\r\n    }\r\n    // !END ENEMY TWO TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\r\n\r\n    // *START ENEMY THREE TIMED ATTACK SEQUENCE\r\n    function enemyThreeAttackTimer(){\r\n        console.log(\"Enemy THREE Attack Timer\")\r\n        if(enemyThree.enemySpeed > 0){\r\n            setEnemyThree(prevEnemyThree => {\r\n                return {...prevEnemyThree,\r\n                    enemySpeed: enemyThree.enemySpeed - 1\r\n                }\r\n            })\r\n        }\r\n        if(enemyThree.enemySpeed <= 0){\r\n            enemyThreeCounterAttack()\r\n            setEnemyThree(prevEnemyThree => {\r\n                return {...prevEnemyThree,\r\n                    enemySpeed: enemyThree.enemyMaxSpeed\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function enemyThreeCounterAttack() {\r\n        var currentEnemyAttack = currentEnemyAttackRandomizer(enemyThree.enemyAttackLow, enemyThree.enemyAttackHigh) - player.playerArmor\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        playerTakeDamage(currentEnemyAttack)\r\n    }\r\n    // !END ENEMY THREE TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\r\n\r\n\r\n    function playerTakeDamage(damageTaken) {\r\n        setPlayer(prevPlayer =>{\r\n            return {...prevPlayer,\r\n            playerHealth: player.playerHealth - damageTaken}\r\n        })\r\n        showToastMessageRed(damageTaken)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                            // *START PLAYER ATTACK TIMER\r\n    function playerAttackTimer(timer) {\r\n        var timeHolder = timer\r\n        if(timeHolder >= 0){\r\n            console.log(`THIS IS PLAYER ATTACK TIMER ${timeHolder}`)\r\n            playerAttackTimerSetState(timeHolder)\r\n        }\r\n    }\r\n\r\n    function playerAttackTimerSetState(timer){\r\n        var newTimeHolder = timer - 1\r\n        setTimeout(() => {setPlayerAttackTimerState(prevPlayerAttackTimerState => prevPlayerAttackTimerState -1); }, 1000);\r\n        setTimeout(() => {playerAttackTimer(newTimeHolder); }, 1000);\r\n    }\r\n\r\n    // *CLOSE ENEMY\r\n\r\n    function playerAttackCloseEnemyTimer(timer) {\r\n        var timeHolder = timer\r\n        if(timeHolder >= 0){\r\n            console.log(`THIS IS PLAYER ATTACK CLOSE ENEMY TIMER ${timeHolder}`)\r\n            playerAttackCloseEnemyTimerSetState(timeHolder)\r\n        }\r\n    }\r\n\r\n    function playerAttackCloseEnemyTimerSetState(timer){\r\n        var newTimeHolder = timer - 1\r\n        setTimeout(() => {setPlayerAttackCloseEnemyTimerState(prevPlayerAttackCloseEnemyTimerState => prevPlayerAttackCloseEnemyTimerState -1); }, 1000);\r\n        setTimeout(() => {playerAttackCloseEnemyTimer(newTimeHolder); }, 1000);\r\n    }\r\n\r\n                                            // !END PLAYER ATTACK TIMER\r\n\r\n\r\n\r\n    // *PLAYER ATTACK BUTTON STARTS HERE\r\n    function playerAttackMove(attackEnemy) {\r\n        var currentPlayerAttack = playerAttackRandomizer(player.playerAttackLow, player.playerAttackHigh)\r\n        if(attackEnemy === 1 & enemyOne.enemyHealth <= 0){\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n            killedEnemyToastMessage(attackEnemy)\r\n        }\r\n        if(attackEnemy === 1 & enemyOne.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - enemyOne.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            playerAttackMoveSetState(1, currentPlayerAttack, \"standardAttack\")\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n        }\r\n\r\n        if(attackEnemy === 2 & enemyTwo.enemyHealth <= 0){\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n            killedEnemyToastMessage(attackEnemy)\r\n        }\r\n        if(attackEnemy === 2 & enemyTwo.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - enemyTwo.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            playerAttackMoveSetState(2, currentPlayerAttack, \"standardAttack\")\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n        }\r\n        if(attackEnemy === 3 & enemyThree.enemyHealth <= 0){\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n            killedEnemyToastMessage(attackEnemy)\r\n        }\r\n        if(attackEnemy === 3 & enemyThree.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - enemyThree.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            playerAttackMoveSetState(3, currentPlayerAttack, \"standardAttack\")\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n        }\r\n    }\r\n\r\n    function playerAttackCloseEnemyMove () {\r\n        var currentPlayerAttack = player.playerAttackHigh\r\n        var runOnce = false\r\n        if(enemyOne.enemySpeed <= enemyTwo.enemySpeed & enemyOne.enemySpeed <= enemyThree.enemySpeed & enemyOne.enemyHealth > 0 & runOnce === false){\r\n            currentPlayerAttack = currentPlayerAttack - enemyOne.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            runOnce = true\r\n            playerAttackMoveSetState(1, currentPlayerAttack, \"closeAttack\")\r\n            deadCheck(currentPlayerAttack, 1, \"closeAttack\")\r\n        }\r\n        if(enemyTwo.enemySpeed <= enemyOne.enemySpeed & enemyTwo.enemySpeed <= enemyThree.enemySpeed & enemyTwo.enemyHealth > 0 & runOnce === false){\r\n            currentPlayerAttack = currentPlayerAttack - enemyTwo.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            runOnce = true\r\n            playerAttackMoveSetState(2, currentPlayerAttack, \"closeAttack\")\r\n            deadCheck(currentPlayerAttack, 2, \"closeAttack\")\r\n        }\r\n        if(enemyThree.enemySpeed <= enemyOne.enemySpeed & enemyThree.enemySpeed <= enemyTwo.enemySpeed & enemyThree.enemyHealth > 0 & runOnce === false){\r\n            currentPlayerAttack = currentPlayerAttack - enemyThree.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            runOnce = true\r\n            playerAttackMoveSetState(3, currentPlayerAttack, \"closeAttack\")\r\n            deadCheck(currentPlayerAttack, 3, \"closeAttack\")\r\n        }\r\n    }\r\n\r\n    function playerAttackMoveSetState(attackEnemyNumber, currentPlayerAttack, typeOfAttack) {\r\n        if(attackEnemyNumber === 1){\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerDamageDone: currentPlayerAttack\r\n                }\r\n            })\r\n            setEnemyOne(prevEnemyOne => {\r\n                return{...prevEnemyOne,\r\n                enemyHealth: enemyOne.enemyHealth - currentPlayerAttack\r\n                }\r\n            })\r\n            if(typeOfAttack === \"standardAttack\"){\r\n                setPlayerAttacked(1)\r\n            }\r\n            if(typeOfAttack === \"closeAttack\"){\r\n                setPlayerAttackedCloseEnemy(1)\r\n            }\r\n            showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerDamageDone: currentPlayerAttack\r\n                }\r\n            })\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return{...prevEnemyTwo,\r\n                enemyHealth: enemyTwo.enemyHealth - currentPlayerAttack\r\n                }\r\n            })\r\n            if(typeOfAttack === \"standardAttack\"){\r\n                setPlayerAttacked(1)\r\n            }\r\n            if(typeOfAttack === \"closeAttack\"){\r\n                setPlayerAttackedCloseEnemy(1)\r\n            }\r\n            showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerDamageDone: currentPlayerAttack\r\n                }\r\n            })\r\n            setEnemyThree(prevEnemyThree => {\r\n                return{...prevEnemyThree,\r\n                enemyHealth: enemyThree.enemyHealth - currentPlayerAttack\r\n                }\r\n            })\r\n            if(typeOfAttack === \"standardAttack\"){\r\n                setPlayerAttacked(1)\r\n            }\r\n            if(typeOfAttack === \"closeAttack\"){\r\n                setPlayerAttackedCloseEnemy(1)\r\n            }\r\n            showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n    }\r\n\r\n    function deadCheck(currentPlayerAttack, attackEnemy, typeOfAttack) {\r\n        if(enemyOne.enemyHealth - currentPlayerAttack <= 0 & enemyOne.enemyRewardCheck === 0 & attackEnemy === 1){\r\n            deadCheckSetState(1)\r\n        }\r\n        if(enemyTwo.enemyHealth - currentPlayerAttack <= 0 & enemyTwo.enemyRewardCheck === 0 & attackEnemy === 2){\r\n            deadCheckSetState(2)\r\n        }\r\n        if(enemyThree.enemyHealth - currentPlayerAttack <= 0 & enemyThree.enemyRewardCheck === 0 & attackEnemy === 3){\r\n            deadCheckSetState(3)\r\n        }\r\n        if(typeOfAttack === \"standardAttack\"){\r\n            setRunPlayerAttackTimer(true)\r\n        }\r\n        if(typeOfAttack === \"closeAttack\"){\r\n            setRunPlayerAttackCloseEnemyTimer(true)\r\n        }\r\n    }\r\n\r\n    function deadCheckSetState(enemyNumber) {\r\n        if(enemyNumber === 1){\r\n            setEnemyOne(prevEnemyOne => {\r\n                return {...prevEnemyOne,\r\n                enemyHealth: 0,\r\n                enemyRewardCheck: 1,\r\n                enemySpeed: 1000\r\n                }\r\n            })\r\n            console.log(\"SET ENEMY ONE KILLED --------------------------------------------------------\")\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerCoins: player.playerCoins + enemyOne.enemyReward\r\n                }\r\n            })\r\n        }\r\n        if(enemyNumber === 2){\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return {...prevEnemyTwo,\r\n                enemyHealth: 0,\r\n                enemyRewardCheck: 1,\r\n                enemySpeed: 1000\r\n                }\r\n            })\r\n            console.log(\"SET ENEMY TWO KILLED --------------------------------------------------------\")\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerCoins: player.playerCoins + enemyTwo.enemyReward\r\n                }\r\n            })\r\n        }\r\n        if(enemyNumber === 3){\r\n            setEnemyThree(prevEnemyThree => {\r\n                return {...prevEnemyThree,\r\n                enemyHealth: 0,\r\n                enemyRewardCheck: 1,\r\n                enemySpeed: 1000\r\n                }\r\n            })\r\n            console.log(\"SET ENEMY THREE KILLED --------------------------------------------------------\")\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerCoins: player.playerCoins + enemyThree.enemyReward\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function setCurrentRoomStatusClearEnemy() {\r\n        if(currentRoom === 2){\r\n            setRoomTwoStatus(1)\r\n        }\r\n\r\n        if(currentRoom === 3){\r\n            setRoomThreeStatus(1)\r\n        }\r\n\r\n        // if(this.state.currentRoom === 4){\r\n        //     this.setState({\r\n        //         roomFourStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 5){\r\n        //     this.setState({\r\n        //         roomFiveStatus: 1,\r\n        //     })\r\n        // }\r\n        if(currentRoom === 6){\r\n            setRoomSixStatus(1)\r\n        }\r\n        // if(this.state.currentRoom === 7){\r\n        //     this.setState({\r\n        //         roomSevenStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 8){\r\n        //     this.setState({\r\n        //         roomEightStatus: 1,\r\n        //     })\r\n        // }\r\n        if(currentRoom === 9){\r\n            setRoomNineStatus(1)\r\n        }\r\n        // if(this.state.currentRoom === 10){\r\n        //     this.setState({\r\n        //         roomTenStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 11){\r\n        //     this.setState({\r\n        //         roomElevenStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 12){\r\n        //     this.setState({\r\n        //         roomTwelveStatus: 1,\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    //                                         // !END OF ATTACK SEQUENCE\r\n\r\n    //                                         // *BEGINNING OF DODGE SEQUENCE\r\n\r\n    // playerDodgeMove = () => {\r\n    //     var playerSpeedThisDodgeAttack = Math.floor(Math.random() * (100 - this.state.playerSpeed + 1) + this.state.playerSpeed)\r\n    //     var enemySpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemySpeed + 1) + this.state.enemySpeed)\r\n    //     var enemy2SpeedThisRound = 0\r\n    //     var enemy3SpeedThisRound = 0\r\n    //     var playerDamageTaken = 0\r\n    //     if(this.state.playerSpeed > 0){\r\n    //         if(this.state.enemy2Speed > 0){\r\n    //             enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy2Speed + 1) + this.state.enemy2Speed)\r\n    //         }\r\n    //         if(this.state.enemy3Speed > 0){\r\n    //             enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy3Speed + 1) + this.state.enemy3Speed)\r\n    //         }\r\n    //         console.log(playerSpeedThisDodgeAttack)\r\n    //         console.log(enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound)\r\n\r\n    //         if(playerSpeedThisDodgeAttack > enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\r\n    //             console.log(\"Successful Dodge\")\r\n    //             this.enemyWithMostHealth()\r\n    //             }\r\n    //         if(playerSpeedThisDodgeAttack <= enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\r\n    //             console.log(\"Player Missed Dodge\")\r\n    //             this.playerMissedDodge()\r\n    //             }\r\n    //         }\r\n    //     if(this.state.playerSpeed <= 0){\r\n    //         alert(\"You have no speed to dodge!\")\r\n    //     }\r\n    // }\r\n\r\n    //     // player attacks enemy with highest health with full attack power if the ransomizer is greater than the enemies; speed \r\n\r\n    // enemyWithMostHealth = () => {\r\n    //     var highEnemyHealth = Math.max(this.state.enemyHealth, this.state.enemyHealth, this.state.enemyHealth)\r\n    //     if(highEnemyHealth === this.state.enemyHealth){\r\n    //         this.setState({\r\n    //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemyArmor),\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n    //             })\r\n    //             return\r\n    //     }\r\n    //     if(highEnemyHealth === this.state.enemyHealth){\r\n    //         this.setState({\r\n    //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemy2Armor),\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n    //             })\r\n    //             return\r\n    //     }\r\n    //     if(highEnemyHealth === this.state.enemyHealth){\r\n    //         this.setState({\r\n    //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemy3Armor),\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n    //             })\r\n    //             return\r\n    //     }\r\n    // }\r\n\r\n    // playerMissedDodge = () => {\r\n    //     var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh)\r\n    //     var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh)\r\n    //     var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh)\r\n    //     var playerDamage = currentEnemyAttack + currentEnemy2Attack + currentEnemy3Attack\r\n    //     this.setState({\r\n    //         playerHealth: this.state.playerHealth - playerDamage,\r\n    //         playerSpeed: this.state.playerSpeed - 1,\r\n    //         enemyDamageDone: playerDamage,\r\n    //         })\r\n    // }\r\n\r\n    //                                         // !END DODGE SEQUENCE\r\n\r\n    // typeOfEnemyAttack = () => {\r\n\r\n    // }\r\n\r\n    // openChest = () => {\r\n    //     if(this.state.currentRoom === 4){\r\n    //         this.setState({\r\n    //             healthPotionEffect: this.state.healthPotionEffect + 15,\r\n    //             roomFourStatus: 2,\r\n    //         })\r\n    //     }\r\n    //     if(this.state.currentRoom === 8){\r\n    //         this.setState({\r\n    //             healthPotionEffect: this.state.healthPotionEffect + 15,\r\n    //             roomEightStatus: 2,\r\n    //         })\r\n    //     }\r\n    //     if(this.state.currentRoom === 12){\r\n    //         this.setState({\r\n    //             healthPotionEffect: this.state.healthPotionEffect + 15,\r\n    //             roomTwelveStatus: 2,\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    //                                         // *ON-SCREEN PROMPTS\r\n\r\n    function showToastMessage(currentPlayerAttack, attackEnemyNumber) {\r\n        if(attackEnemyNumber === 1){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 1 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 2 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 3 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    function killedEnemyToastMessage(attackEnemyNumber){\r\n        if(attackEnemyNumber === 1){\r\n            toast.info(\"You already killed enemy 1 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            toast.info(\"You already killed enemy 2 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            toast.info(\"You already killed enemy 3 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    function showToastMessageRed(damageTaken) {\r\n        toast.error(`You took ${damageTaken} damage !`, {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            autoClose: 1500\r\n        });\r\n    }\r\n\r\n\r\n                                            // *GAME TIMER/BREAKLOOP TIMER\r\n\r\n    function gameTime() {\r\n            setBreakLoop(prevBreakLoop => prevBreakLoop + 1)\r\n            setGameTick(prevGameTick => prevGameTick + 1)\r\n            setRunEnemyOneAttackTimer(true)\r\n            setRunEnemyTwoAttackTimer(true)\r\n            setRunEnemyThreeAttackTimer(true)\r\n            if(breakLoop < 300){\r\n                setTimeout(() => {gameTime(); }, 1000);\r\n            }\r\n            console.log(`gameTime() ran. gameTick is at ${gameTick}`)\r\n    }\r\n\r\n\r\n                                            //  !END GAME TIMER\r\n\r\n    //                                         //  *ROOM TIMER\r\n    // roomTime = () => {\r\n    //     this.roomTimeSetState()\r\n    //     if(this.state.roomBreakLoop < 300){\r\n    //         setTimeout(() => {this.roomTime(); }, 1000);\r\n    //     }\r\n    //     console.log(`gameRoomTime() is running. roomTime is at ${this.state.roomTime}`)\r\n    // }\r\n\r\n    // roomTimeSetState = () => {\r\n    //     this.setState({\r\n    //         roomTime: this.state.roomTime + 1,\r\n    //         roomBreakLoop: this.state.roomBreakLoop + 1,\r\n    //     })\r\n    // }\r\n\r\n                                            // !END ROOM TIMER\r\n    // render() {\r\n        return(\r\n            <div class=\"bg-dark bg-opacity-25 text-dark\">\r\n            <BrowserRouter>\r\n            <Navbar gameTick={gameTick} devButtonUpgrade={devButtonUpgrade} devButtonDowngrade={devButtonDowngrade} player={player} />\r\n            <ToastContainer />\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home player={player} enemyOne={enemyOne} pickClass={pickClass} />} />\r\n\r\n                    <Route path=\"/GameBoard\" element={<GameBoard useHealthPotion={useHealthPotion} buyFromStore={buyFromStore} roomMovement={roomMovement} createEnemy={createEnemy} />} />\r\n\r\n                    <Route path=\"/RoomTwo\" element={<RoomTwo useHealthPotion={useHealthPotion} resetRoomStatus={resetRoomStatus} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} enemyThree={enemyThree} roomTwoStatus={roomTwoStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat}\r\n                    playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} \r\n                    playerAttackedCloseEnemy={playerAttackedCloseEnemy} playerAttackCloseEnemyTimerState={playerAttackCloseEnemyTimerState} playerAttackCloseEnemyTimerStateMax={playerAttackCloseEnemyTimerStateMax} playerAttackCloseEnemyMove={playerAttackCloseEnemyMove} />} />\r\n\r\n                    <Route path=\"/RoomThree\" element={<RoomThree useHealthPotion={useHealthPotion} resetRoomStatus={resetRoomStatus} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} enemyThree={enemyThree} roomThreeStatus={roomThreeStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat}\r\n                    playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} \r\n                    playerAttackedCloseEnemy={playerAttackedCloseEnemy} playerAttackCloseEnemyTimerState={playerAttackCloseEnemyTimerState} playerAttackCloseEnemyTimerStateMax={playerAttackCloseEnemyTimerStateMax} playerAttackCloseEnemyMove={playerAttackCloseEnemyMove} />} />\r\n\r\n                    {/* <Route path=\"/RoomFour\" element={<RoomFour openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomFourStatus={this.state.roomFourStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} /> */}\r\n\r\n                    {/* <Route path=\"/RoomFive\" element={<RoomFive resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomFiveStatus={this.state.roomFiveStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward} />} /> */}\r\n\r\n                    <Route path=\"/RoomSix\" element={<RoomSix useHealthPotion={useHealthPotion} resetRoomStatus={resetRoomStatus} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} enemyThree={enemyThree} roomSixStatus={roomSixStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat} \r\n                    playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} \r\n                    playerAttackedCloseEnemy={playerAttackedCloseEnemy} playerAttackCloseEnemyTimerState={playerAttackCloseEnemyTimerState} playerAttackCloseEnemyTimerStateMax={playerAttackCloseEnemyTimerStateMax} playerAttackCloseEnemyMove={playerAttackCloseEnemyMove} />} />\r\n\r\n                    {/* <Route path=\"/RoomSeven\" element={<RoomSeven resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomSevenStatus={this.state.roomSevenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} /> */}\r\n\r\n                    {/* <Route path=\"/RoomEight\" element={<RoomEight openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomEightStatus={this.state.roomEightStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} /> */}\r\n\r\n                    <Route path=\"/RoomNine\" element={<RoomNine useHealthPotion={useHealthPotion} resetRoomStatus={resetRoomStatus} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} enemyThree={enemyThree} roomNineStatus={roomNineStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat} \r\n                    playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} \r\n                    playerAttackedCloseEnemy={playerAttackedCloseEnemy} playerAttackCloseEnemyTimerState={playerAttackCloseEnemyTimerState} playerAttackCloseEnemyTimerStateMax={playerAttackCloseEnemyTimerStateMax} playerAttackCloseEnemyMove={playerAttackCloseEnemyMove} />} />\r\n\r\n                    {/* <Route path=\"/RoomTen\" element={<RoomTen resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomTenStatus={this.state.roomTenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} /> */}\r\n\r\n                    {/* <Route path=\"/RoomEleven\" element={<RoomEleven resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomElevenStatus={this.state.roomElevenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} /> */}\r\n\r\n                    {/* <Route path=\"/RoomTwelve\" element={<RoomTwelve openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomTwelveStatus={this.state.roomTwelveStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward}/>} /> */}\r\n                </Routes>\r\n            </BrowserRouter>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}