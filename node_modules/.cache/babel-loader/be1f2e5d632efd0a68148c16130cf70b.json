{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\devCodeCamp\\\\YouTubeCloneProject\\\\YouTubeClone\\\\src\\\\components\\\\SideBar\\\\SideBar.jsx\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideBar = props => {\n  if (props.videos === []) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Video Found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.videos.map(video => {\n        return /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"400\",\n          height: \"320\",\n          src: `https://www.youtube.com/embed/${video.id.videoId}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_c = SideBar;\nexport default SideBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideBar\");","map":{"version":3,"sources":["C:/Users/freeb/OneDrive/Desktop/devCodeCamp/YouTubeCloneProject/YouTubeClone/src/components/SideBar/SideBar.jsx"],"names":["React","axios","SideBar","props","videos","map","video","id","videoId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,MAAGA,KAAK,CAACC,MAAN,KAAiB,EAApB,EAAuB;AACnB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJD,MAKI;AACA,wBAAO;AAAA,gBACFD,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiBC,KAAK,IAAI;AACvB,4BAAO;AAAQ,UAAA,KAAK,EAAC,KAAd;AAAoB,UAAA,MAAM,EAAC,KAA3B;AAAiC,UAAA,GAAG,EAAG,iCAAgCA,KAAK,CAACC,EAAN,CAASC,OAAQ;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAHA;AADE;AAAA;AAAA;AAAA;AAAA,YAAP;AAOH;AACJ,CAfD;;KAAMN,O;AAiBN,eAAeA,OAAf","sourcesContent":["import React from 'react'; \r\nimport axios from 'axios';\r\n\r\nconst SideBar = (props) => {\r\n    if(props.videos === []){\r\n        return (\r\n            <p>No Video Found</p>\r\n        )\r\n    }\r\n    else{\r\n        return(<div>\r\n            {props.videos.map(video => {\r\n                return <iframe width=\"400\" height=\"320\" src={`https://www.youtube.com/embed/${video.id.videoId}`}>\r\n                </iframe>\r\n            })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar;"]},"metadata":{},"sourceType":"module"}