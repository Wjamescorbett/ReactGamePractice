{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\freeb\\\\OneDrive\\\\Desktop\\\\devCodeCamp\\\\YouTubeCloneProject\\\\YouTubeClone\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SearchBar from './SearchBar/SearchBar';\nimport key from './key';\nimport SideBar from './SideBar/SideBar';\nimport Comments from './Comments/Comments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSearch = async search => {\n      let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&key=${key}&q=${search}`);\n      this.setState({\n        videos: response.data.items,\n        videoId: response.data.items[0].id.videoId,\n        video: response.data.items[0]\n      });\n      this.getComments();\n    };\n\n    this.state = {\n      videoId: '',\n      video: '',\n      videos: [],\n      comments: []\n    };\n  }\n\n  componentDidMount() {\n    this.getVideo();\n    this.getComments();\n  }\n\n  async getVideo() {\n    let response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=${key}&part=snippet,contentDetails,statistics,status`);\n    this.setState({\n      videoId: response.data.items[0].id,\n      video: response.data.items[0]\n    });\n  }\n\n  async getComments() {\n    console.log('Im working');\n    let response = await axios.get('http://127.0.0.1:8000/comments/');\n    this.filterComments(response.data);\n  }\n\n  filterComments(array) {\n    let filteredComments = [];\n    array.forEach(comment => {\n      if (comment.videoId === this.state.videoId) {\n        console.log(comment);\n        filteredComments.push(comment);\n      }\n    });\n    this.setState({\n      comments: filteredComments\n    });\n    console.log(filteredComments);\n  }\n\n  render() {\n    let title = 'Loading';\n    let description = 'Loading';\n\n    if (this.state.video !== '') {\n      title = this.state.video.snippet.title;\n      description = this.state.video.snippet.description;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        startSearch: this.getSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"YouTube Clone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-8\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n            id: \"existing-iframe-example\",\n            width: \"100%\",\n            height: \"600px\",\n            src: `https://www.youtube.com/embed/${this.state.videoId}`,\n            frameBorder: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Comments, {\n            videoId: this.state.videoId,\n            comments: this.state.comments\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-4 d-flex justify-content-end\",\n          children: /*#__PURE__*/_jsxDEV(SideBar, {\n            videos: this.state.videos\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/freeb/OneDrive/Desktop/devCodeCamp/YouTubeCloneProject/YouTubeClone/src/components/App.jsx"],"names":["React","Component","axios","SearchBar","key","SideBar","Comments","App","constructor","props","getSearch","search","response","get","setState","videos","data","items","videoId","id","video","getComments","state","comments","componentDidMount","getVideo","console","log","filterComments","array","filteredComments","forEach","comment","push","render","title","description","snippet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport key from './key'\r\nimport SideBar from './SideBar/SideBar';\r\nimport Comments from './Comments/Comments';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoId: '',\r\n            video: '',\r\n            videos: [],\r\n            comments: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getVideo()\r\n        this.getComments()\r\n    }    \r\n\r\n    async  getVideo(){\r\n        let response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=${key}&part=snippet,contentDetails,statistics,status`)\r\n        this.setState({\r\n            videoId: response.data.items[0].id,\r\n            video: response.data.items[0]\r\n        })\r\n    }\r\n\r\n    getSearch = async(search) => {\r\n    let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&key=${key}&q=${search}`)\r\n    this.setState({\r\n        videos: response.data.items,\r\n        videoId: response.data.items[0].id.videoId,\r\n        video:  response.data.items[0]\r\n    })\r\n    this.getComments()\r\n}\r\n\r\n    async getComments() {\r\n        console.log('Im working')\r\n        let response = await axios.get('http://127.0.0.1:8000/comments/')\r\n        this.filterComments(response.data)\r\n    }\r\n\r\n    filterComments(array){\r\n        let filteredComments = []\r\n        array.forEach(comment => {\r\n            if(comment.videoId === this.state.videoId) {\r\n                console.log(comment)\r\n                filteredComments.push(comment)\r\n            }\r\n        })\r\n        this.setState({\r\n            comments: filteredComments\r\n        })\r\n        console.log(filteredComments)\r\n    }\r\n\r\n    render(){\r\n    let title = 'Loading'\r\n    let description ='Loading'\r\n    if(this.state.video !== '') {\r\n        title = this.state.video.snippet.title\r\n        description = this.state.video.snippet.description\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <SearchBar startSearch={this.getSearch}/>\r\n            <h1>YouTube Clone</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <h2>{title}</h2>\r\n                    <iframe id=\"existing-iframe-example\"\r\n                    width=\"100%\" height=\"600px\"\r\n                    src={`https://www.youtube.com/embed/${this.state.videoId}`}\r\n                    frameBorder=\"0\"></iframe>\r\n                    <h4>{description}</h4>\r\n                    {<Comments videoId={this.state.videoId} comments={this.state.comments}/>}\r\n                </div>\r\n                <div className=\"col-4 d-flex justify-content-end\" >\r\n                    <SideBar videos={this.state.videos}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App; "]},"metadata":{},"sourceType":"module"}