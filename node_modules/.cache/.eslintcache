[{"C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\index.js":"1","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\App.jsx":"2","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\SearchBar\\SearchBar.jsx":"3","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\key.jsx":"4","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\SideBar\\SideBar.jsx":"5","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\Comments\\Comments.jsx":"6","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\CommentsDisplay\\CommentsDisplay.jsx":"7","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\Replies\\Replies.jsx":"8","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\RepliesDisplay\\RepliesDisplay.jsx":"9","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\index.js":"10","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\App.jsx":"11","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\TopBar\\TopBar.jsx":"12","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\GameBoard\\GameBoard.jsx":"13","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\Layout\\Layout.jsx":"14","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\Home\\Home.jsx":"15","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomThree\\RoomThree.jsx":"16","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomTwo\\RoomTwo.jsx":"17","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomSeven\\RoomSeven.jsx":"18","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomSix\\RoomSix.jsx":"19","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomFive\\RoomFive.jsx":"20","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomTen\\RoomTen.jsx":"21","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomTwelve\\RoomTwelve.jsx":"22","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomNine\\RoomNine.jsx":"23","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomFour\\RoomFour.jsx":"24","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomEight\\RoomEight.jsx":"25","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomEleven\\RoomEleven.jsx":"26","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\Navbar\\Navbar.jsx":"27","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\DamageEffects\\DamageEffects.jsx":"28","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\EnemyVisuals\\EnemyVisuals.jsx":"29","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\PlayerAttackButton\\PlayerAttackButton.jsx":"30","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\PlayerCloseEnemyAttackButton\\PlayerCloseEnemyAttackButton.jsx":"31"},{"size":208,"mtime":1637769408732,"results":"32","hashOfConfig":"33"},{"size":3425,"mtime":1638304050606,"results":"34","hashOfConfig":"33"},{"size":934,"mtime":1638304198318,"results":"35","hashOfConfig":"33"},{"size":78,"mtime":1637707716282,"results":"36","hashOfConfig":"33"},{"size":730,"mtime":1638304948207,"results":"37","hashOfConfig":"33"},{"size":2494,"mtime":1638302899162,"results":"38","hashOfConfig":"33"},{"size":1876,"mtime":1638294181327,"results":"39","hashOfConfig":"33"},{"size":1541,"mtime":1638299798700,"results":"40","hashOfConfig":"33"},{"size":480,"mtime":1638299502451,"results":"41","hashOfConfig":"33"},{"size":208,"mtime":1637769408732,"results":"42","hashOfConfig":"43"},{"size":52358,"mtime":1676682132279,"results":"44","hashOfConfig":"43"},{"size":455,"mtime":1657878611723,"results":"45","hashOfConfig":"46"},{"size":2866,"mtime":1675830195134,"results":"47","hashOfConfig":"43"},{"size":432,"mtime":1659651699095,"results":"48","hashOfConfig":"43"},{"size":2665,"mtime":1676319275836,"results":"49","hashOfConfig":"43"},{"size":2364,"mtime":1674803206005,"results":"50","hashOfConfig":"43"},{"size":3490,"mtime":1676683972491,"results":"51","hashOfConfig":"43"},{"size":2810,"mtime":1674803459847,"results":"52","hashOfConfig":"43"},{"size":2843,"mtime":1675835388545,"results":"53","hashOfConfig":"43"},{"size":2569,"mtime":1674803386579,"results":"54","hashOfConfig":"43"},{"size":2346,"mtime":1674803570286,"results":"55","hashOfConfig":"43"},{"size":3474,"mtime":1674803664267,"results":"56","hashOfConfig":"43"},{"size":3303,"mtime":1675835388545,"results":"57","hashOfConfig":"43"},{"size":2946,"mtime":1674803250891,"results":"58","hashOfConfig":"43"},{"size":2952,"mtime":1674803500331,"results":"59","hashOfConfig":"43"},{"size":2383,"mtime":1674803635930,"results":"60","hashOfConfig":"43"},{"size":2306,"mtime":1676318764582,"results":"61","hashOfConfig":"43"},{"size":3099,"mtime":1676683988759,"results":"62","hashOfConfig":"43"},{"size":4809,"mtime":1676319953398,"results":"63","hashOfConfig":"43"},{"size":3316,"mtime":1676684530229,"results":"64","hashOfConfig":"43"},{"size":1153,"mtime":1676682205039,"results":"65","hashOfConfig":"43"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d3incl",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},"2t95iv",{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"92"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"wldl8n",{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"92"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"92"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"92"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"92"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"92"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"92"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"92"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"92"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"92"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"92"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"92"},"C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\index.js",[],"C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\App.jsx",["152","153","154","155"],"import React, { Component } from 'react'; \r\nimport axios from 'axios';\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport key from './key'\r\nimport SideBar from './SideBar/SideBar';\r\nimport Comments from './Comments/Comments';\r\nimport './App.css'\r\n\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            videoId: '',\r\n            video: '',\r\n            videos: [],\r\n            comments: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount(){\r\n        this.getVideo()\r\n        this.getComments()\r\n    }    \r\n\r\n    async  getVideo(){\r\n        let response = await axios.get(`https://www.googleapis.com/youtube/v3/videos?id=7lCDEYXw3mM&key=${key}&part=snippet,contentDetails,statistics,status`)\r\n        this.setState({\r\n            videoId: response.data.items[0].id,\r\n            video: response.data.items[0]\r\n        })\r\n    }\r\n\r\n    getSearch = async(search) => {\r\n    let response = await axios.get(`https://www.googleapis.com/youtube/v3/search?part=snippet&key=${key}&q=${search}`)\r\n    this.setState({\r\n        videos: response.data.items,\r\n        videoId: response.data.items[0].id.videoId,\r\n        video:  response.data.items[0]\r\n    })\r\n    this.getComments()\r\n}\r\n\r\n    async getComments() {\r\n        let response = await axios.get('http://127.0.0.1:8000/comments/')\r\n        this.filterComments(response.data)\r\n    }\r\n\r\n    filterComments(array){\r\n        let filteredComments = []\r\n        array.forEach(comment => {\r\n            if(comment.videoId === this.state.videoId) {\r\n                filteredComments.push(comment)\r\n            }\r\n        })\r\n        this.setState({\r\n            comments: filteredComments\r\n        })\r\n    }\r\n\r\n    addComment = () => {\r\n        this.getComments()\r\n    }\r\n\r\n    selectVideo = (videoId, video) =>{\r\n        this.setState({\r\n            videoId: videoId,\r\n            video: video\r\n        })\r\n        this.getComments()\r\n    }\r\n\r\n    render(){\r\n    let title = 'Loading'\r\n    let description ='Loading'\r\n    if(this.state.video !== '') {\r\n        title = this.state.video.snippet.title\r\n        description = this.state.video.snippet.description\r\n    }\r\n\r\n    let newTitle = title.replace(/[&\\/\\\\#,+()$~%.:*?<>{};]/g, '')\r\n    let newDescription = description.replace(/[&\\/\\\\#,+()$~%.:*?<>{};]/g, '')\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"header\">\r\n                <img className=\"youtubeicon\" src=\"https://github.com/RaHughes/YouTubeClone/blob/main/public/youtubeicon.png?raw=true\"/>\r\n                <SearchBar startSearch={this.getSearch}/>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-8\">\r\n                    <iframe id=\"existing-iframe-example\"\r\n                    width=\"100%\" height=\"600px\"\r\n                    src={`https://www.youtube.com/embed/${this.state.videoId}`}\r\n                    frameBorder=\"0\"></iframe>\r\n                    <h2>{newTitle}</h2>\r\n                    <h4>{newDescription}</h4>\r\n                    {<Comments videoId={this.state.videoId} comments={this.state.comments} addComment={this.addComment}/>}\r\n                </div>\r\n                <div className=\"col-3 d-flex justify-content-left sidebar\" >\r\n                    <SideBar videos={this.state.videos} selectVideo={this.selectVideo}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App; ","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\SearchBar\\SearchBar.jsx",["156"],"import React, { Component } from 'react'; \r\nimport axios from 'axios';\r\nimport './SearchBar.css'\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            search: ''\r\n        }\r\n    }\r\n    \r\n    \r\n    handleChange = (event) => {\r\n        this.setState({\r\n            [event.target.name]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSumbit() {\r\n        console.log(this.state.search)\r\n        this.props.startSearch(this.state.search)\r\n        this.setState({\r\n            search: ''\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (\r\n            <div className=\"searchbar\">\r\n            <input value={this.state.search} name=\"search\" onChange={this.handleChange}></input>\r\n            <button className=\"searchbutton\" onClick={() => this.handleSumbit(this.state.search)}>🔍</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\key.jsx",[],"C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\SideBar\\SideBar.jsx",["157","158"],"import React from 'react'; \r\nimport axios from 'axios';\r\nimport './SideBar.css'\r\n\r\nconst SideBar = (props) => {\r\n\r\n\r\n\r\n    if(props.videos === []){\r\n        return (\r\n            <p>No Video Found</p>\r\n        )\r\n    }\r\n    else{\r\n        return(<div>\r\n            {props.videos.map(video => {\r\n                return <form className=\"videos\" key={Math.random()} onSubmit={() => props.selectVideo(video.id.videoId, video)}>\r\n                <button type=\"submit\">Select Video</button>\r\n                <iframe width=\"300\" height=\"140\" src={`https://www.youtube.com/embed/${video.id.videoId}`}>\r\n                </iframe>\r\n                </form>\r\n            })}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SideBar;","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\Comments\\Comments.jsx",["159","160"],"import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Replies from '../Replies/Replies';\r\nimport CommentsDisplay from '../CommentsDisplay/CommentsDisplay';\r\n\r\n\r\n\r\nclass Comments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            comments: [],\r\n            videoId: '',\r\n            comment: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments()\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            comment: event.target.value\r\n        })\r\n    }\r\n\r\n    getComments = async() => {\r\n        let response = await axios.get('http://127.0.0.1:8000/comments/')\r\n        let comments = response.data\r\n        let filteredComments = []\r\n        comments.forEach(comment => {\r\n            if(comment.videoId === this.props.videoId) {\r\n                filteredComments.push(comment)\r\n            }\r\n        })\r\n        this.setState({\r\n            videoId: this.props.videoId,\r\n            comments: filteredComments\r\n        })\r\n    }\r\n\r\n    handleSubmit = async(event) => {\r\n        event.preventDefault()\r\n        let comment = {\r\n            videoId: this.props.videoId,\r\n            likes: 0,\r\n            dislikes: 0,\r\n            comment: this.state.comment\r\n        }\r\n        this.setState({\r\n            comments: [...this.state.comments, comment]\r\n        })\r\n        await axios.post(\"http://127.0.0.1:8000/comments/\", comment)\r\n        this.props.addComment()\r\n        this.setState({\r\n            comment: ''\r\n        })\r\n    }\r\n\r\n    increment = async(id, name) => {\r\n        let newArr = this.state.comments\r\n        let value;\r\n        newArr.forEach(comment => {\r\n            if(comment.id === id) {\r\n                comment[name] += 1\r\n                value = comment[name]\r\n            }\r\n        })\r\n        this.setState({\r\n            comments: newArr\r\n        })\r\n    await axios.patch(`http://127.0.0.1:8000/comments/${id}/`, { [name]: value })\r\n }\r\n\r\n render() { \r\n    return (\r\n        <div>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <input value={this.state.comment} name=\"comment\" onChange={this.handleChange} value={this.state.comment}></input>\r\n                <button type=\"submit\">Post Comment</button>\r\n            </form>\r\n            <div>\r\n                <CommentsDisplay comments={this.props.comments} videoId={this.props.videoId}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\n\r\nexport default Comments;\r\n","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\CommentsDisplay\\CommentsDisplay.jsx",["161","162"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport Replies from '../Replies/Replies';\r\nimport './CommentsDisplay.css'\r\n\r\nconst CommentsDisplay = (props) => {\r\n    const[comment,SetComment] = useState([])\r\n    const[toggle, SetToggle] = useState()\r\n    console.log(props)\r\n\r\n    useEffect(()=>{\r\n        \r\n    },[props.videoId, toggle])\r\n\r\n    const increment = async(id, name) => {\r\n        let newArr = props.comments\r\n        let value;\r\n        newArr.forEach(comment => {\r\n            if(comment.id === id) {\r\n                comment[name] += 1\r\n                value = comment[name]\r\n            }\r\n        })\r\n        await axios.patch(`http://127.0.0.1:8000/comments/${id}/`, { [name]: value })\r\n        SetToggle(!toggle)\r\n        SetComment(newArr)\r\n }\r\n\r\n    return(\r\n        <div>\r\n            {props.comments.map(comment => {\r\n                        if(comment.videoId === props.videoId){ \r\n                            return <div className=\"comments\" key={comment.id}>\r\n                                    <p>{comment.comment}</p>\r\n                                    <div className=\"likesanddislikes\">\r\n                                        <button name=\"likes\" onClick={() => increment(comment.id, 'likes')}>👍</button>\r\n                                        {<p>{comment.likes}</p>}\r\n                                        <button name=\"dislikes\" onClick={() => increment(comment.id, 'dislikes')}>👎</button>\r\n                                        {<p>{comment.dislikes}</p>}\r\n                                    </div>\r\n                                    <Replies key={comment.id} commentId={comment.id} videoId={props.videoId} />\r\n                                    </div>\r\n                        }\r\n                    })}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CommentsDisplay","C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\Replies\\Replies.jsx",[],"C:\\Users\\freeb\\OneDrive\\Desktop\\devCodeCamp\\YouTubeCloneProject\\YouTubeClone\\src\\components\\RepliesDisplay\\RepliesDisplay.jsx",["163","164"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport './RepliesDisplay.css'\r\n\r\nconst RepliesDisplay = (props) => {\r\n    return(\r\n        <div>\r\n            {props.replies.map(reply => {\r\n                if(props.commentId === reply.commentId){\r\n                    return <div className=\"replies\">\r\n                        <p>{reply.reply}</p>\r\n                    </div>\r\n                }\r\n            })}\r\n\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default RepliesDisplay;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\index.js",[],["165","166"],"C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\App.jsx",["167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193"],"import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { useState, useEffect } from 'react'\r\nimport { BrowserRouter, Routes, Route, Link } from \"react-router-dom\";\r\nimport './App.css';\r\nimport Home from './Home/Home';\r\nimport Navbar from './Navbar/Navbar';\r\nimport Layout from './Layout/Layout';\r\nimport GameBoard from './GameBoard/GameBoard';\r\nimport RoomTwo from './RoomTwo/RoomTwo';\r\nimport RoomThree from './RoomThree/RoomThree';\r\nimport RoomFour from './RoomFour/RoomFour';\r\nimport RoomFive from './RoomFive/RoomFive';\r\nimport RoomSix from './RoomSix/RoomSix';\r\nimport RoomSeven from './RoomSeven/RoomSeven';\r\nimport RoomEight from './RoomEight/RoomEight';\r\nimport RoomNine from './RoomNine/RoomNine';\r\nimport RoomTen from './RoomTen/RoomTen';\r\nimport RoomEleven from './RoomEleven/RoomEleven';\r\nimport RoomTwelve from './RoomTwelve/RoomTwelve';\r\nimport DamageEffects from './DamageEffects/DamageEffects';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction App() {\r\n    const [gameTick, setGameTick] = useState(0)\r\n    const [breakLoop, setBreakLoop] = useState(0)\r\n\r\n    const [player, setPlayer] = useState({\r\n        playerHealth: 0,\r\n        playerMaxHealth: 0,\r\n        playerAttackLow: 0,\r\n        playerAttackHigh: 0,\r\n        playerSpeed: 0,\r\n        playerMaxSpeed: 0,\r\n        playerArmor: 0,\r\n        playerCoins: 0,\r\n        playerHealthPotion: 0,\r\n        playerHealthPotionEffect: 15,\r\n        playerStaminaPotion: 0,\r\n        playerDamageDone: 0\r\n    })\r\n\r\n    const [playerAttackTimerState, setPlayerAttackTimerState] = useState(0)\r\n    const [playerAttackTimerStateMax, setPlayerAttackTimerStateMax] = useState(0)\r\n    const [runPlayerAttackTimer, setRunPlayerAttackTimer] = useState(false)\r\n\r\n    const [playerAttacked, setPlayerAttacked] = useState(1)\r\n\r\n    const [playerAttackCloseEnemyTimerState, setPlayerAttackCloseEnemyTimerState] = useState(0)\r\n    const [playerAttackCloseEnemyTimerStateMax, setPlayerAttackCloseEnemyTimerStateMax] = useState(0)\r\n    const [runPlayerAttackCloseEnemyTimer, setRunPlayerAttackCloseEnemyTimer] = useState(false)\r\n\r\n    const [playerAttackedCloseEnemy, setPlayerAttackedCloseEnemy] = useState(1)\r\n\r\n\r\n    const [startCombatCheck, setStartCombatCheck] = useState(false)\r\n\r\n    const [enemyOne, setEnemyOne] = useState({\r\n        enemyName: \"\",\r\n        enemyMaxHealth: 0, \r\n        enemyHealth: 0, \r\n        enemyAttackLow: 0,\r\n        enemyAttackHigh: 0, \r\n        enemySpeed: 0, \r\n        enemyMaxSpeed: 0, \r\n        enemyArmor: 0, \r\n        enemyReward: 0,\r\n        enemyRewardCheck: 0,\r\n        enemyColor: \"primary\"\r\n    })\r\n\r\n    const [enemyTwo, setEnemyTwo] = useState({\r\n        enemyName: \"\",\r\n        enemyMaxHealth: 1, \r\n        enemyHealth: 1, \r\n        enemyAttackLow: 0, \r\n        enemyAttackHigh: 0,\r\n        enemySpeed: 0, \r\n        enemyMaxSpeed: 0, \r\n        enemyArmor: 0, \r\n        enemyReward: 0,\r\n        enemyRewardCheck: 0,\r\n        enemyColor: \"info\"\r\n    })\r\n    const [enemyThree, setEnemyThree] = useState({\r\n        enemyName: \"\",\r\n        enemyMaxHealth: 1,\r\n        enemyHealth: 1, \r\n        enemyAttackLow: 0, \r\n        enemyAttackHigh: 0, \r\n        enemySpeed: 0, \r\n        enemyMaxSpeed: 0, \r\n        enemyArmor: 0, \r\n        enemyReward: 0,\r\n        enemyRewardCheck: 0,\r\n        enemyColor: \"secondary\"\r\n    })\r\n\r\n    const [enemiesInRoomCheck, setEnemiesInRoomCheck] = useState(false)\r\n\r\n    const [numberOfEnemiesInRoom, setNumberOfEnemiesInRoom] = useState(0)\r\n    // const [enemyDamageDone, setEnemyDamageDone] = useState(0)\r\n\r\n    const[currentRoom, setCurrentRoom] = useState(0)\r\n    const[currentRoomStatus, setCurrentRoomStatus] = useState(0)\r\n\r\n    const [roomTwoStatus, setRoomTwoStatus] = useState(0)\r\n    const [roomThreeStatus, setRoomThreeStatus] = useState(0)\r\n    const [roomFourStatus, setRoomFourStatus] = useState(0)\r\n    const [roomFiveStatus, setRoomFiveStatus] = useState(0)\r\n    const [roomSixStatus, setRoomSixStatus] = useState(0)\r\n    const [roomSevenStatus, setRoomSevenStatus] = useState(0)\r\n    const [roomEightStatus, setRoomEightStatus] = useState(0)\r\n    const [roomNineStatus, setRoomNineStatus] = useState(0)\r\n    const [roomTenStatus, setRoomTenStatus] = useState(0)\r\n    const [roomElevenStatus, setRoomElevenStatus] = useState(0)\r\n    const [roomTwelveStatus, setRoomTwelveStatus] = useState(0)\r\n\r\n\r\n\r\n    const [runEnemyOneAttackTimer, setRunEnemyOneAttackTimer] = useState(false)\r\n    const [runEnemyTwoAttackTimer, setRunEnemyTwoAttackTimer] = useState(false)\r\n    const [runEnemyThreeAttackTimer, setRunEnemyThreeAttackTimer] = useState(false)\r\n\r\nuseEffect(() => {\r\n    if(playerAttackTimerState < 0 & runPlayerAttackTimer === false){\r\n        setPlayerAttackTimerState(playerAttackTimerStateMax)\r\n        setPlayerAttacked(2)\r\n    }\r\n    if(playerAttackTimerState >= 0 & runPlayerAttackTimer === true){\r\n        setRunPlayerAttackTimer(false)\r\n        if(enemyOne.enemyHealth > 0 || enemyTwo.enemyHealth > 0 || enemyThree.enemyHealth > 0){\r\n            playerAttackTimer(playerAttackTimerState)\r\n        }\r\n    }\r\n\r\n    if(playerAttackCloseEnemyTimerState < 0 & runPlayerAttackCloseEnemyTimer === false){\r\n        setPlayerAttackCloseEnemyTimerState(playerAttackCloseEnemyTimerStateMax)\r\n        setPlayerAttackedCloseEnemy(2)\r\n    }\r\n    if(playerAttackCloseEnemyTimerState >= 0 & runPlayerAttackCloseEnemyTimer === true){\r\n        setRunPlayerAttackCloseEnemyTimer(false)\r\n        if(enemyOne.enemyHealth > 0 || enemyTwo.enemyHealth > 0 || enemyThree.enemyHealth > 0){\r\n            playerAttackCloseEnemyTimer(playerAttackCloseEnemyTimerState)\r\n        }\r\n    }\r\n\r\n    if(enemyOne.enemyHealth > 0 & startCombatCheck === true & runEnemyOneAttackTimer === true){\r\n        setRunEnemyOneAttackTimer(false)\r\n        enemyOneAttackTimer()\r\n    }\r\n    if(enemyTwo.enemyHealth > 0 & startCombatCheck === true & runEnemyTwoAttackTimer === true){\r\n        setRunEnemyTwoAttackTimer(false)\r\n        enemyTwoAttackTimer()\r\n    }\r\n    if(enemyThree.enemyHealth > 0 & startCombatCheck === true & runEnemyThreeAttackTimer === true){\r\n        setRunEnemyThreeAttackTimer(false)\r\n        enemyThreeAttackTimer()\r\n    }\r\n    if(enemyOne.enemyHealth <= 0 & enemyTwo.enemyHealth <= 0 & enemyThree.enemyHealth <= 0){\r\n        setCurrentRoomStatusClearEnemy()\r\n        setStartCombatCheck(false)\r\n    }\r\n\r\n    if(enemiesInRoomCheck === true){\r\n        setEnemiesInRoomCheck(false)\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n    function devButtonUpgrade() {\r\n        setPlayer (prevPlayer => {\r\n            return {...prevPlayer,\r\n            playerHealth: player.playerMaxHealth,\r\n            playerAttackHigh: player.playerAttackHigh + 5,\r\n            playerCoins: player.playerCoins + 100\r\n        }\r\n        })\r\n    }\r\n\r\n    function devButtonDowngrade() {\r\n        setPlayer (prevPlayer => {\r\n            return {...prevPlayer,\r\n            playerAttackHigh: player.playerAttackHigh - 5,\r\n        }\r\n        })\r\n    }\r\n\r\n    function useHealthPotion() {\r\n        if(player.playerHealthPotion <= 0){\r\n            return(alert(\"You are out of health potions!\"))\r\n        }\r\n        if(player.playerHealth + player.playerHealthPotionEffect > player.playerMaxHealth){\r\n            setPlayer (prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerHealthPotion: player.playerHealthPotion - 1,\r\n                playerHealth: player.playerMaxHealth\r\n            }\r\n            })\r\n        } \r\n        if(player.playerHealth >= player.playerMaxHealth){\r\n            return(alert(\"You are at max health!\"))\r\n        }\r\n        if(player.playerHealth + player.playerHealthPotionEffect < player.playerMaxHealth){\r\n            setPlayer (prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerHealthPotion: player.playerHealthPotion - 1,\r\n                playerHealth: player.playerHealth + player.playerHealthPotionEffect\r\n            }\r\n            })\r\n        }\r\n        setPlayerAttacked(1)\r\n        setRunPlayerAttackTimer(true)\r\n    }\r\n\r\n    // useStaminaPotion = () => {\r\n    //     if(this.state.playerStaminaPotion <= 0){\r\n    //         return(alert(\"You are out of stamina potions!\"))\r\n    //     }\r\n    //     if(this.state.playerSpeed === this.state.maxPlayerSpeed){\r\n    //         return(alert(\"You're already at max speed!\"))\r\n    //     } else {\r\n    //         this.setState({\r\n    //             playerStaminaPotion: this.state.playerStaminaPotion - 1,\r\n    //             playerSpeed: this.state.maxPlayerSpeed,\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    function buyFromStore(item) {\r\n        if(item === \"health\"){\r\n            if(player.playerCoins >= 5){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 5,\r\n                        playerMaxHealth: player.playerMaxHealth + 10\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a health upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"attackLow\"){\r\n            if(player.playerCoins >= 6 & player.playerAttackLow < player.playerAttackHigh){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 6,\r\n                        playerAttackLow: player.playerAttackLow + 1\r\n                    }\r\n                })\r\n            } \r\n            if(player.playerAttackLow >= player.playerAttackHigh){\r\n                alert(\"Your minimum attack can not exceed you maximum attack.\")\r\n            }\r\n            if(player.playerCoins < 6){\r\n                alert(\"You can't afford a minimum attack upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"attackHigh\"){\r\n            if(player.playerCoins >= 3){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 3,\r\n                        playerAttackHigh: player.playerAttackHigh + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a maximum attack upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"speed\"){\r\n            if(player.playerCoins >= 2){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 2,\r\n                        playerMaxSpeed: player.playerMaxSpeed + 1,\r\n                        playerSpeed: player.playerSpeed + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a speed upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"armor\"){\r\n            if(player.playerCoins >= 3){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 3,\r\n                        playerArmor: player.playerArmor + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford an armor upgrade.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"healthPotion\"){\r\n            if(player.playerHealthPotion >= 10){\r\n                return (alert (\"You can only have up to ten health potions.\"))\r\n            }\r\n            if(player.playerCoins >= 2){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 2,\r\n                        playerHealthPotion: player.playerHealthPotion + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a health potion.\")\r\n            }\r\n        }\r\n\r\n        if(item === \"staminaPotion\"){\r\n            if(player.playerStaminaPotion >= 8){\r\n                return (alert(\"You can only have up to eight stamina potions.\"))\r\n            }\r\n            if(player.playerCoins >= 1){\r\n                setPlayer(prevPlayer =>{\r\n                    return {...prevPlayer,\r\n                        playerCoins: player.playerCoins - 1,\r\n                        playerStaminaPotion: player.playerStaminaPotion + 1\r\n                    }\r\n                })\r\n            } else {\r\n                alert(\"You can't afford a stamina potion.\")\r\n            }\r\n        }\r\n    }\r\n\r\n    function resetRoomStatus() {\r\n        setRoomTwoStatus(0)\r\n        setRoomThreeStatus(0)\r\n        setRoomFiveStatus(0)\r\n        setRoomSixStatus(0)\r\n        setRoomSevenStatus(0)\r\n        setRoomNineStatus(0)\r\n        setRoomTenStatus(0)\r\n        setRoomElevenStatus(0)\r\n        setEnemyOne(prevEnemyOne => {\r\n            return {...prevEnemyOne, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setEnemyTwo(prevEnemyTwo => {\r\n            return {...prevEnemyTwo, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setEnemyThree(prevEnemyThree => {\r\n            return {...prevEnemyThree, \r\n                enemyRewardCheck: 0\r\n            }\r\n        })\r\n        setPlayerAttacked(1)\r\n        setStartCombatCheck(false)\r\n        setPlayer(prevPlayer =>{\r\n            return {...prevPlayer,\r\n            playerSpeed: player.playerMaxSpeed\r\n            }\r\n        })\r\n    }\r\n\r\n    function pickClass(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer) {\r\n        console.log(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer)\r\n        setPlayer(prevPlayer => {\r\n            return {...prevPlayer,\r\n            playerHealth: health,\r\n            playerMaxHealth: maxHealth,\r\n            playerAttackLow: attackLow,\r\n            playerAttackHigh: attackHigh,\r\n            playerSpeed: speed,\r\n            playerMaxSpeed: maxSpeed,\r\n            playerArmor: armor,\r\n            playerCoins: coins,\r\n            playerHealthPotion: healthPotion,\r\n            playerStaminaPotion: staminaPotion\r\n        }\r\n        })\r\n        setPlayerAttackTimerState(attackTimer)\r\n        setPlayerAttackTimerStateMax(attackTimer)\r\n        setPlayerAttackCloseEnemyTimerState(attackTimer)\r\n        setPlayerAttackCloseEnemyTimerStateMax(attackTimer)\r\n        \r\n        if(gameTick === 0){\r\n            gameTime()\r\n        }\r\n    }\r\n\r\n    function createEnemy(enemyName, maxHealth, health, attackLow, attackHigh, speed, armor, reward, enemy2Name, maxHealth2, health2, attack2Low, attack2High, speed2, armor2, reward2, enemy3Name, maxHealth3, health3, attack3Low, attack3High, speed3, armor3, reward3, numberOfEnemiesInRoom) {\r\n        setEnemyOne(prevEnemyOne => {\r\n            return {...prevEnemyOne,\r\n                enemyName: enemyName,\r\n                enemyMaxHealth: maxHealth,\r\n                enemyHealth: health,\r\n                enemyAttackLow: attackLow,\r\n                enemyAttackHigh: attackHigh,\r\n                enemySpeed: speed,\r\n                enemyMaxSpeed: speed,\r\n                enemyArmor: armor,\r\n                enemyReward: reward\r\n            }\r\n        })\r\n        setEnemyTwo(prevEnemyTwo => {\r\n            return {...prevEnemyTwo,\r\n                enemyName: enemy2Name,\r\n                enemyMaxHealth: maxHealth2,\r\n                enemyHealth: health2,\r\n                enemyAttackLow: attack2Low,\r\n                enemyAttackHigh: attack2High,\r\n                enemySpeed: speed2,\r\n                enemyMaxSpeed: speed2,\r\n                enemyArmor: armor2,\r\n                enemyReward: reward2\r\n            }\r\n        })\r\n        setEnemyThree(prevEnemyThree => {\r\n            return {...prevEnemyThree,\r\n                enemyName: enemy3Name,\r\n                enemyMaxHealth: maxHealth3,\r\n                enemyHealth: health3,\r\n                enemyAttackLow: attack3Low,\r\n                enemyAttackHigh: attack3High,\r\n                enemySpeed: speed3,\r\n                enemyMaxSpeed: speed3,\r\n                enemyArmor: armor3,\r\n                enemyReward: reward3\r\n            }\r\n        })\r\n        setNumberOfEnemiesInRoom(numberOfEnemiesInRoom)\r\n    }\r\n\r\n                        // *ROOM MOVEMENT, CREATES ENEMIES FOR NEXT ROOM, ACCOUNTS FOR AND CHANGES PLAYER SPEED\r\n\r\n    function roomMovement(nowCurrentRoom){\r\n        setCurrentRoom(nowCurrentRoom)\r\n        setPlayerAttackTimerState(playerAttackTimerStateMax)\r\n        setPlayerAttackCloseEnemyTimerState(playerAttackCloseEnemyTimerStateMax)\r\n        setPlayerAttacked(1)\r\n        setPlayerAttackedCloseEnemy(1)\r\n        if(player.playerSpeed > 0){\r\n            setCurrentRoom(nowCurrentRoom)\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                    playerSpeed: player.playerSpeed - 1\r\n                }\r\n            })\r\n        }\r\n            // ?enemyName, enemyMaxHealth, EnemyHealth, enemyAttackLow, enemyAttackHigh, enemySpeed, enemyArmor, enemyReward\r\n        if(nowCurrentRoom === 2 & roomTwoStatus === 0) {\r\n            createEnemy(\"Enemy One\", 20, 20, 2, 3, 5, 1, 1, \"Enemy Two\", 20, 20, 2, 3, 4, 1, 1, \"Enemy Three\", 20, 20, 2, 3, 8, 1, 1, 3)\r\n        }\r\n        if(nowCurrentRoom === 6 & roomSixStatus === 0){\r\n            createEnemy(\"enemyOneRoomSix\", 20, 20, 2, 3, 7, 1, 1, \"enemyTwoRoomSix\", 20, 20, 2, 3, 4, 1, 1, \"enemyThreeRoomSix\", 0, 0, 0, 0, 0, 0, 0, 2) //Two Circles\r\n        }\r\n        if(nowCurrentRoom === 9 & roomNineStatus === 0){\r\n            createEnemy(\"enemyOneRoomNine\", 30, 30, 4, 5, 4, 2, 10, \"enemyTwoRoomNine\", 15, 15, 10, 14, 3, 5, 25, \"enemyThreeRoomNine\", 4, 4, 1, 5, 10, 10, 5, 3) //Semi-Circle - Parallelogram - Trapezium\r\n        }\r\n    }\r\n\r\n    // function roomMovement(currentRoom) {\r\n    //     if(player.playerSpeed > 0){\r\n    //         setCurrentRoom(currentRoom)\r\n    //         setPlayer(prevPlayer => {\r\n    //             return {...prevPlayer,\r\n    //                 playerSpeed: player.playerSpeed - 1\r\n    //             }\r\n    //         })\r\n\r\n    //         this.setState({\r\n    //             currentRoom: currentRoom,\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             enemyRewardCheck: 0,\r\n    //             playerDamageDone: 0,\r\n    //             enemyDamageDone: 0,\r\n    //             playerAttacked: 1,\r\n    //         })\r\n    //     }\r\n    //     if(this.state.playerSpeed <= 0){\r\n    //         this.playerHasNoSpeed()\r\n    //     }\r\n\r\n    //     if(currentRoom === 2 & this.state.roomTwoStatus === 0){\r\n    //         this.createEnemy(20, 20, 2, 3, 5, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Circle 20, 2, 3, 1, 1, 1\r\n    //         }\r\n        // if(currentRoom === 3 & this.state.roomThreeStatus === 0){\r\n        //     this.createEnemy(15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Square 15, 4, 5, 2, 2, 2\r\n        // }\r\n        // if(currentRoom === 4 & this.state.roomFourStatus === 0){\r\n        //     this.createEnemy(50, 50, 5, 7, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One Boss Triangle\r\n        // }\r\n        // if(currentRoom === 5 & this.state.roomFiveStatus === 0){\r\n        //     this.createEnemy(15, 15, 10, 12, 2, 5, 25, 10, 10, 3, 5, 9, 4, 10, 0, 0, 0, 0, 0, 0, 0, 2) //Parallelogram 15, 10, 12, 2, 5, 25 - Trapezium 10, 3, 5, 9, 4, 10\r\n        // }\r\n        // if(currentRoom === 6 & this.state.roomSixStatus === 0){\r\n        //     this.createEnemy(20, 20, 2, 3, 7, 1, 1, 20, 20, 2, 3, 4, 1, 1, 0, 0, 0, 0, 0, 0, 0, 2) //Two Circles\r\n        // }\r\n        // if(currentRoom === 7 & this.state.roomSevenStatus === 0){\r\n        //     this.createEnemy(15, 15, 4, 5, 2, 2, 2, 15, 15, 4, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 2) // Two Squares\r\n        // }\r\n        // if(currentRoom === 8 & this.state.roomEightStatus === 0){\r\n        //     this.createEnemy(80, 80, 6, 8, 3, 4, 30, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1) //One BOSS pentagon\r\n        // }\r\n        // if(currentRoom === 9 & this.state.roomNineStatus === 0){\r\n        //     this.createEnemy(30, 30, 4, 5, 2, 2, 10, 15, 15, 10, 14, 2, 5, 25, 4, 4, 1, 5, 10, 10, 5, 3) //Semi-Circle - Parallelogram - Trapezium\r\n        // }\r\n        // if(currentRoom === 10 & this.state.roomTenStatus === 0){\r\n        //     this.createEnemy(100, 100, 4, 7, 2, 2, 20, 100, 100, 4, 7, 2, 2, 20, 0, 0, 0, 0, 0, 0, 0, 2) //Two Hexagons\r\n        // }\r\n        // if(currentRoom === 11 & this.state.roomElevenStatus === 0){\r\n        //     this.createEnemy(50, 50, 5, 8, 4, 3, 15, 50, 50, 5, 8, 4, 3, 15, 0, 0, 0, 0, 0, 0, 0, 2)\r\n        // }\r\n        // if(currentRoom === 12 & this.state.roomTwelveStatus === 0){\r\n        //     this.createEnemy(500, 500, 15, 20, 8, 8, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)\r\n        // }\r\n    // }\r\n                                            // *TIMED COMBAT\r\n    function startCombat() {\r\n        setStartCombatCheck(true)\r\n        setRunPlayerAttackTimer(true)\r\n        setRunPlayerAttackCloseEnemyTimer(true)\r\n    }\r\n\r\n    function playerAttackRandomizer(playerAttackLow, playerAttackHigh) {\r\n        return Math.floor(Math.random() * (playerAttackHigh - playerAttackLow + 1) + playerAttackLow)\r\n    }\r\n\r\n    function currentEnemyAttackRandomizer(enemyAttackLow, enemyAttackHigh) {\r\n        return Math.floor(Math.random() * (enemyAttackHigh - enemyAttackLow + 1) + enemyAttackLow)\r\n    }\r\n\r\n    // playerHasNoSpeed = () => {\r\n    //     alert(\"You have no more speed! You took 10 damage. Return to Room One or use a stamina potion to regain your speed.\")\r\n    //     this.setState({\r\n    //         playerHealth: this.state.playerHealth - 10,\r\n    //         enemyRewardCheck: 0,\r\n    //         enemyRewardCheck: 0,\r\n    //         enemyRewardCheck: 0,\r\n    //     })\r\n    // }\r\n\r\n\r\n                                            // *BEGINNING OF ENEMY COMBAT ATTACK SEQUENCE\r\n    // *START ENEMY ONE TIMED ATTACK SEQUENCE\r\n    function enemyOneAttackTimer(){\r\n        console.log(\"Enemy ONE Attack Timer\")\r\n        if(enemyOne.enemySpeed > 0){\r\n            setEnemyOne(prevEnemyOne => {\r\n                return {...prevEnemyOne,\r\n                    enemySpeed: enemyOne.enemySpeed - 1\r\n                }\r\n            })\r\n        }\r\n        if(enemyOne.enemySpeed <= 0){\r\n            enemyOneCounterAttack()\r\n            setEnemyOne(prevEnemyOne => {\r\n                return {...prevEnemyOne,\r\n                    enemySpeed: enemyOne.enemyMaxSpeed\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function enemyOneCounterAttack() {\r\n        var currentEnemyAttack = currentEnemyAttackRandomizer(enemyOne.enemyAttackLow, enemyOne.enemyAttackHigh) - player.playerArmor\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        playerTakeDamage(currentEnemyAttack)\r\n    }\r\n    // !END ENEMY ONE TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\r\n\r\n    // *START ENEMY TWO TIMED ATTACK SEQUENCE\r\n    function enemyTwoAttackTimer(){\r\n        console.log(\"Enemy TWO Attack Timer\")\r\n        if(enemyTwo.enemySpeed > 0){\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return {...prevEnemyTwo,\r\n                    enemySpeed: enemyTwo.enemySpeed - 1\r\n                }\r\n            })\r\n        }\r\n        if(enemyTwo.enemySpeed <= 0){\r\n            enemyTwoCounterAttack()\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return {...prevEnemyTwo,\r\n                    enemySpeed: enemyTwo.enemyMaxSpeed\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function enemyTwoCounterAttack() {\r\n        var currentEnemyAttack = currentEnemyAttackRandomizer(enemyTwo.enemyAttackLow, enemyTwo.enemyAttackHigh) - player.playerArmor\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        playerTakeDamage(currentEnemyAttack)\r\n    }\r\n    // !END ENEMY TWO TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\r\n\r\n    // *START ENEMY THREE TIMED ATTACK SEQUENCE\r\n    function enemyThreeAttackTimer(){\r\n        console.log(\"Enemy THREE Attack Timer\")\r\n        if(enemyThree.enemySpeed > 0){\r\n            setEnemyThree(prevEnemyThree => {\r\n                return {...prevEnemyThree,\r\n                    enemySpeed: enemyThree.enemySpeed - 1\r\n                }\r\n            })\r\n        }\r\n        if(enemyThree.enemySpeed <= 0){\r\n            enemyThreeCounterAttack()\r\n            setEnemyThree(prevEnemyThree => {\r\n                return {...prevEnemyThree,\r\n                    enemySpeed: enemyThree.enemyMaxSpeed\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function enemyThreeCounterAttack() {\r\n        var currentEnemyAttack = currentEnemyAttackRandomizer(enemyThree.enemyAttackLow, enemyThree.enemyAttackHigh) - player.playerArmor\r\n        if(currentEnemyAttack <= 0){\r\n            currentEnemyAttack = 1\r\n        }\r\n        playerTakeDamage(currentEnemyAttack)\r\n    }\r\n    // !END ENEMY THREE TIMED ATTACK SEQUENCE --- AFTER PLAYER TAKE DAMAGE\r\n\r\n\r\n    function playerTakeDamage(damageTaken) {\r\n        setPlayer(prevPlayer =>{\r\n            return {...prevPlayer,\r\n            playerHealth: player.playerHealth - damageTaken}\r\n        })\r\n        showToastMessageRed(damageTaken)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                                            // *START PLAYER ATTACK TIMER\r\n    function playerAttackTimer(timer) {\r\n        var timeHolder = timer\r\n        if(timeHolder >= 0){\r\n            console.log(`THIS IS PLAYER ATTACK TIMER ${timeHolder}`)\r\n            playerAttackTimerSetState(timeHolder)\r\n        }\r\n    }\r\n\r\n    function playerAttackTimerSetState(timer){\r\n        var newTimeHolder = timer - 1\r\n        setTimeout(() => {setPlayerAttackTimerState(prevPlayerAttackTimerState => prevPlayerAttackTimerState -1); }, 1000);\r\n        setTimeout(() => {playerAttackTimer(newTimeHolder); }, 1000);\r\n    }\r\n\r\n    // *CLOSE ENEMY\r\n\r\n    function playerAttackCloseEnemyTimer(timer) {\r\n        var timeHolder = timer\r\n        if(timeHolder >= 0){\r\n            console.log(`THIS IS PLAYER ATTACK CLOSE ENEMY TIMER ${timeHolder}`)\r\n            playerAttackCloseEnemyTimerSetState(timeHolder)\r\n        }\r\n    }\r\n\r\n    function playerAttackCloseEnemyTimerSetState(timer){\r\n        var newTimeHolder = timer - 1\r\n        setTimeout(() => {setPlayerAttackCloseEnemyTimerState(prevPlayerAttackCloseEnemyTimerState => prevPlayerAttackCloseEnemyTimerState -1); }, 1000);\r\n        setTimeout(() => {playerAttackCloseEnemyTimer(newTimeHolder); }, 1000);\r\n    }\r\n\r\n                                            // !END PLAYER ATTACK TIMER\r\n\r\n\r\n\r\n    // *PLAYER ATTACK BUTTON STARTS HERE\r\n    function playerAttackMove(attackEnemy) {\r\n        var currentPlayerAttack = playerAttackRandomizer(player.playerAttackLow, player.playerAttackHigh)\r\n        if(attackEnemy === 1 & enemyOne.enemyHealth <= 0){\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n            killedEnemyToastMessage(attackEnemy)\r\n        }\r\n        if(attackEnemy === 1 & enemyOne.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - enemyOne.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            playerAttackMoveSetState(1, currentPlayerAttack, \"standardAttack\")\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n        }\r\n\r\n        if(attackEnemy === 2 & enemyTwo.enemyHealth <= 0){\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n            killedEnemyToastMessage(attackEnemy)\r\n        }\r\n        if(attackEnemy === 2 & enemyTwo.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - enemyTwo.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            playerAttackMoveSetState(2, currentPlayerAttack, \"standardAttack\")\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n        }\r\n        if(attackEnemy === 3 & enemyThree.enemyHealth <= 0){\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n            killedEnemyToastMessage(attackEnemy)\r\n        }\r\n        if(attackEnemy === 3 & enemyThree.enemyHealth > 0){\r\n            currentPlayerAttack = currentPlayerAttack - enemyThree.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            playerAttackMoveSetState(3, currentPlayerAttack, \"standardAttack\")\r\n            deadCheck(currentPlayerAttack, attackEnemy, \"standardAttack\")\r\n        }\r\n    }\r\n\r\n    function playerAttackCloseEnemyMove () {\r\n        var currentPlayerAttack = player.playerAttackHigh\r\n        var runOnce = false\r\n        if(enemyOne.enemySpeed <= enemyTwo.enemySpeed & enemyOne.enemySpeed <= enemyThree.enemySpeed & enemyOne.enemyHealth > 0 & runOnce === false){\r\n            currentPlayerAttack = currentPlayerAttack - enemyOne.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            runOnce = true\r\n            playerAttackMoveSetState(1, currentPlayerAttack, \"closeAttack\")\r\n            deadCheck(currentPlayerAttack, 1, \"closeAttack\")\r\n        }\r\n        if(enemyTwo.enemySpeed <= enemyOne.enemySpeed & enemyTwo.enemySpeed <= enemyThree.enemySpeed & enemyTwo.enemyHealth > 0 & runOnce === false){\r\n            currentPlayerAttack = currentPlayerAttack - enemyTwo.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            runOnce = true\r\n            playerAttackMoveSetState(2, currentPlayerAttack, \"closeAttack\")\r\n            deadCheck(currentPlayerAttack, 2, \"closeAttack\")\r\n        }\r\n        if(enemyThree.enemySpeed <= enemyOne.enemySpeed & enemyThree.enemySpeed <= enemyTwo.enemySpeed & enemyThree.enemyHealth > 0 & runOnce === false){\r\n            currentPlayerAttack = currentPlayerAttack - enemyThree.enemyArmor\r\n            if(currentPlayerAttack <= 0){\r\n                currentPlayerAttack = 1\r\n            }\r\n            runOnce = true\r\n            playerAttackMoveSetState(3, currentPlayerAttack, \"closeAttack\")\r\n            deadCheck(currentPlayerAttack, 3, \"closeAttack\")\r\n        }\r\n    }\r\n\r\n    function playerAttackMoveSetState(attackEnemyNumber, currentPlayerAttack, typeOfAttack) {\r\n        if(attackEnemyNumber === 1){\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerDamageDone: currentPlayerAttack\r\n                }\r\n            })\r\n            setEnemyOne(prevEnemyOne => {\r\n                return{...prevEnemyOne,\r\n                enemyHealth: enemyOne.enemyHealth - currentPlayerAttack\r\n                }\r\n            })\r\n            if(typeOfAttack === \"standardAttack\"){\r\n                setPlayerAttacked(1)\r\n            }\r\n            if(typeOfAttack === \"closeAttack\"){\r\n                setPlayerAttackedCloseEnemy(1)\r\n            }\r\n            showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerDamageDone: currentPlayerAttack\r\n                }\r\n            })\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return{...prevEnemyTwo,\r\n                enemyHealth: enemyTwo.enemyHealth - currentPlayerAttack\r\n                }\r\n            })\r\n            if(typeOfAttack === \"standardAttack\"){\r\n                setPlayerAttacked(1)\r\n            }\r\n            if(typeOfAttack === \"closeAttack\"){\r\n                setPlayerAttackedCloseEnemy(1)\r\n            }\r\n            showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerDamageDone: currentPlayerAttack\r\n                }\r\n            })\r\n            setEnemyThree(prevEnemyThree => {\r\n                return{...prevEnemyThree,\r\n                enemyHealth: enemyThree.enemyHealth - currentPlayerAttack\r\n                }\r\n            })\r\n            if(typeOfAttack === \"standardAttack\"){\r\n                setPlayerAttacked(1)\r\n            }\r\n            if(typeOfAttack === \"closeAttack\"){\r\n                setPlayerAttackedCloseEnemy(1)\r\n            }\r\n            showToastMessage(currentPlayerAttack, attackEnemyNumber)\r\n        }\r\n    }\r\n\r\n    function deadCheck(currentPlayerAttack, attackEnemy, typeOfAttack) {\r\n        if(enemyOne.enemyHealth - currentPlayerAttack <= 0 & enemyOne.enemyRewardCheck === 0 & attackEnemy === 1){\r\n            deadCheckSetState(1)\r\n        }\r\n        if(enemyTwo.enemyHealth - currentPlayerAttack <= 0 & enemyTwo.enemyRewardCheck === 0 & attackEnemy === 2){\r\n            deadCheckSetState(2)\r\n        }\r\n        if(enemyThree.enemyHealth - currentPlayerAttack <= 0 & enemyThree.enemyRewardCheck === 0 & attackEnemy === 3){\r\n            deadCheckSetState(3)\r\n        }\r\n        if(typeOfAttack === \"standardAttack\"){\r\n            setRunPlayerAttackTimer(true)\r\n        }\r\n        if(typeOfAttack === \"closeAttack\"){\r\n            setRunPlayerAttackCloseEnemyTimer(true)\r\n        }\r\n    }\r\n\r\n    function deadCheckSetState(enemyNumber) {\r\n        if(enemyNumber === 1){\r\n            setEnemyOne(prevEnemyOne => {\r\n                return {...prevEnemyOne,\r\n                enemyHealth: 0,\r\n                enemyRewardCheck: 1,\r\n                enemySpeed: 1000\r\n                }\r\n            })\r\n            console.log(\"SET ENEMY ONE KILLED --------------------------------------------------------\")\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerCoins: player.playerCoins + enemyOne.enemyReward\r\n                }\r\n            })\r\n        }\r\n        if(enemyNumber === 2){\r\n            setEnemyTwo(prevEnemyTwo => {\r\n                return {...prevEnemyTwo,\r\n                enemyHealth: 0,\r\n                enemyRewardCheck: 1,\r\n                enemySpeed: 1000\r\n                }\r\n            })\r\n            console.log(\"SET ENEMY TWO KILLED --------------------------------------------------------\")\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerCoins: player.playerCoins + enemyTwo.enemyReward\r\n                }\r\n            })\r\n        }\r\n        if(enemyNumber === 3){\r\n            setEnemyThree(prevEnemyThree => {\r\n                return {...prevEnemyThree,\r\n                enemyHealth: 0,\r\n                enemyRewardCheck: 1,\r\n                enemySpeed: 1000\r\n                }\r\n            })\r\n            console.log(\"SET ENEMY THREE KILLED --------------------------------------------------------\")\r\n            setPlayer(prevPlayer => {\r\n                return {...prevPlayer,\r\n                playerCoins: player.playerCoins + enemyThree.enemyReward\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function setCurrentRoomStatusClearEnemy() {\r\n        if(currentRoom === 2){\r\n            setRoomTwoStatus(1)\r\n        }\r\n        // if(this.state.currentRoom === 3){\r\n        //     this.setState({\r\n        //         roomThreeStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 4){\r\n        //     this.setState({\r\n        //         roomFourStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 5){\r\n        //     this.setState({\r\n        //         roomFiveStatus: 1,\r\n        //     })\r\n        // }\r\n        if(currentRoom === 6){\r\n            setRoomSixStatus(1)\r\n        }\r\n        // if(this.state.currentRoom === 7){\r\n        //     this.setState({\r\n        //         roomSevenStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 8){\r\n        //     this.setState({\r\n        //         roomEightStatus: 1,\r\n        //     })\r\n        // }\r\n        if(currentRoom === 9){\r\n            setRoomNineStatus(1)\r\n        }\r\n        // if(this.state.currentRoom === 10){\r\n        //     this.setState({\r\n        //         roomTenStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 11){\r\n        //     this.setState({\r\n        //         roomElevenStatus: 1,\r\n        //     })\r\n        // }\r\n        // if(this.state.currentRoom === 12){\r\n        //     this.setState({\r\n        //         roomTwelveStatus: 1,\r\n        //     })\r\n        // }\r\n    }\r\n\r\n    //                                         // !END OF ATTACK SEQUENCE\r\n\r\n    //                                         // *BEGINNING OF DODGE SEQUENCE\r\n\r\n    // playerDodgeMove = () => {\r\n    //     var playerSpeedThisDodgeAttack = Math.floor(Math.random() * (100 - this.state.playerSpeed + 1) + this.state.playerSpeed)\r\n    //     var enemySpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemySpeed + 1) + this.state.enemySpeed)\r\n    //     var enemy2SpeedThisRound = 0\r\n    //     var enemy3SpeedThisRound = 0\r\n    //     var playerDamageTaken = 0\r\n    //     if(this.state.playerSpeed > 0){\r\n    //         if(this.state.enemy2Speed > 0){\r\n    //             enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy2Speed + 1) + this.state.enemy2Speed)\r\n    //         }\r\n    //         if(this.state.enemy3Speed > 0){\r\n    //             enemy2SpeedThisRound = Math.floor(Math.random() * (100 - this.state.enemy3Speed + 1) + this.state.enemy3Speed)\r\n    //         }\r\n    //         console.log(playerSpeedThisDodgeAttack)\r\n    //         console.log(enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound)\r\n\r\n    //         if(playerSpeedThisDodgeAttack > enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\r\n    //             console.log(\"Successful Dodge\")\r\n    //             this.enemyWithMostHealth()\r\n    //             }\r\n    //         if(playerSpeedThisDodgeAttack <= enemySpeedThisRound + enemy2SpeedThisRound + enemy3SpeedThisRound){\r\n    //             console.log(\"Player Missed Dodge\")\r\n    //             this.playerMissedDodge()\r\n    //             }\r\n    //         }\r\n    //     if(this.state.playerSpeed <= 0){\r\n    //         alert(\"You have no speed to dodge!\")\r\n    //     }\r\n    // }\r\n\r\n    //     // player attacks enemy with highest health with full attack power if the ransomizer is greater than the enemies; speed \r\n\r\n    // enemyWithMostHealth = () => {\r\n    //     var highEnemyHealth = Math.max(this.state.enemyHealth, this.state.enemyHealth, this.state.enemyHealth)\r\n    //     if(highEnemyHealth === this.state.enemyHealth){\r\n    //         this.setState({\r\n    //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemyArmor),\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n    //             })\r\n    //             return\r\n    //     }\r\n    //     if(highEnemyHealth === this.state.enemyHealth){\r\n    //         this.setState({\r\n    //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemy2Armor),\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n    //             })\r\n    //             return\r\n    //     }\r\n    //     if(highEnemyHealth === this.state.enemyHealth){\r\n    //         this.setState({\r\n    //             enemyHealth: this.state.enemyHealth - (this.state.playerAttackHigh - this.state.enemy3Armor),\r\n    //             playerSpeed: this.state.playerSpeed - 1,\r\n    //             playerDamageDone: this.state.playerAttackHigh - this.state.enemyArmor,\r\n    //             })\r\n    //             return\r\n    //     }\r\n    // }\r\n\r\n    // playerMissedDodge = () => {\r\n    //     var currentEnemyAttack = this.currentEnemyAttackRandomizer(this.state.enemyAttackLow, this.state.enemyAttackHigh)\r\n    //     var currentEnemy2Attack = this.currentEnemyAttackRandomizer(this.state.enemy2AttackLow, this.state.enemy2AttackHigh)\r\n    //     var currentEnemy3Attack = this.currentEnemyAttackRandomizer(this.state.enemy3AttackLow, this.state.enemy3AttackHigh)\r\n    //     var playerDamage = currentEnemyAttack + currentEnemy2Attack + currentEnemy3Attack\r\n    //     this.setState({\r\n    //         playerHealth: this.state.playerHealth - playerDamage,\r\n    //         playerSpeed: this.state.playerSpeed - 1,\r\n    //         enemyDamageDone: playerDamage,\r\n    //         })\r\n    // }\r\n\r\n    //                                         // !END DODGE SEQUENCE\r\n\r\n    // typeOfEnemyAttack = () => {\r\n\r\n    // }\r\n\r\n    // openChest = () => {\r\n    //     if(this.state.currentRoom === 4){\r\n    //         this.setState({\r\n    //             healthPotionEffect: this.state.healthPotionEffect + 15,\r\n    //             roomFourStatus: 2,\r\n    //         })\r\n    //     }\r\n    //     if(this.state.currentRoom === 8){\r\n    //         this.setState({\r\n    //             healthPotionEffect: this.state.healthPotionEffect + 15,\r\n    //             roomEightStatus: 2,\r\n    //         })\r\n    //     }\r\n    //     if(this.state.currentRoom === 12){\r\n    //         this.setState({\r\n    //             healthPotionEffect: this.state.healthPotionEffect + 15,\r\n    //             roomTwelveStatus: 2,\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    //                                         // *ON-SCREEN PROMPTS\r\n\r\n    function showToastMessage(currentPlayerAttack, attackEnemyNumber) {\r\n        if(attackEnemyNumber === 1){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 1 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 2 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            toast.success(\"You did \" + currentPlayerAttack + \" damage to enemy 3 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    function killedEnemyToastMessage(attackEnemyNumber){\r\n        if(attackEnemyNumber === 1){\r\n            toast.info(\"You already killed enemy 1 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 2){\r\n            toast.info(\"You already killed enemy 2 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n        if(attackEnemyNumber === 3){\r\n            toast.info(\"You already killed enemy 3 !\", {\r\n                position: toast.POSITION.TOP_CENTER\r\n            });\r\n        }\r\n    }\r\n\r\n    function showToastMessageRed(damageTaken) {\r\n        toast.error(`You took ${damageTaken} damage !`, {\r\n            position: toast.POSITION.TOP_RIGHT,\r\n            autoClose: 1500\r\n        });\r\n    }\r\n\r\n\r\n                                            // *GAME TIMER/BREAKLOOP TIMER\r\n\r\n    function gameTime() {\r\n            setBreakLoop(prevBreakLoop => prevBreakLoop + 1)\r\n            setGameTick(prevGameTick => prevGameTick + 1)\r\n            setRunEnemyOneAttackTimer(true)\r\n            setRunEnemyTwoAttackTimer(true)\r\n            setRunEnemyThreeAttackTimer(true)\r\n            if(breakLoop < 300){\r\n                setTimeout(() => {gameTime(); }, 1000);\r\n            }\r\n            console.log(`gameTime() ran. gameTick is at ${gameTick}`)\r\n    }\r\n\r\n\r\n                                            //  !END GAME TIMER\r\n\r\n    //                                         //  *ROOM TIMER\r\n    // roomTime = () => {\r\n    //     this.roomTimeSetState()\r\n    //     if(this.state.roomBreakLoop < 300){\r\n    //         setTimeout(() => {this.roomTime(); }, 1000);\r\n    //     }\r\n    //     console.log(`gameRoomTime() is running. roomTime is at ${this.state.roomTime}`)\r\n    // }\r\n\r\n    // roomTimeSetState = () => {\r\n    //     this.setState({\r\n    //         roomTime: this.state.roomTime + 1,\r\n    //         roomBreakLoop: this.state.roomBreakLoop + 1,\r\n    //     })\r\n    // }\r\n\r\n                                            // !END ROOM TIMER\r\n    // render() {\r\n        return(\r\n            <div class=\"bg-dark bg-opacity-25 text-dark\">\r\n            <BrowserRouter>\r\n            <Navbar gameTick={gameTick} devButtonUpgrade={devButtonUpgrade} devButtonDowngrade={devButtonDowngrade} player={player} />\r\n            <ToastContainer />\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Home player={player} enemyOne={enemyOne} pickClass={pickClass} />} />\r\n\r\n                    <Route path=\"/GameBoard\" element={<GameBoard useHealthPotion={useHealthPotion} buyFromStore={buyFromStore} roomMovement={roomMovement} createEnemy={createEnemy} />} />\r\n\r\n                    <Route path=\"/RoomTwo\" element={<RoomTwo useHealthPotion={useHealthPotion} resetRoomStatus={resetRoomStatus} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} enemyThree={enemyThree} roomTwoStatus={roomTwoStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat}\r\n                    playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} \r\n                    playerAttackedCloseEnemy={playerAttackedCloseEnemy} playerAttackCloseEnemyTimerState={playerAttackCloseEnemyTimerState} playerAttackCloseEnemyTimerStateMax={playerAttackCloseEnemyTimerStateMax} playerAttackCloseEnemyMove={playerAttackCloseEnemyMove} />} />\r\n\r\n                    {/* <Route path=\"/RoomThree\" element={<RoomThree roomMovement={this.roomMovement} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} roomThreeStatus ={this.state.roomThreeStatus} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} /> */}\r\n\r\n                    {/* <Route path=\"/RoomFour\" element={<RoomFour openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomFourStatus={this.state.roomFourStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} /> */}\r\n\r\n                    {/* <Route path=\"/RoomFive\" element={<RoomFive resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomFiveStatus={this.state.roomFiveStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward} />} /> */}\r\n\r\n                    <Route path=\"/RoomSix\" element={<RoomSix resetRoomStatus={resetRoomStatus} useHealthPotion={useHealthPotion} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} roomSixStatus={roomSixStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat} playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} />} />\r\n\r\n                    {/* <Route path=\"/RoomSeven\" element={<RoomSeven resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomSevenStatus={this.state.roomSevenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} /> */}\r\n\r\n                    {/* <Route path=\"/RoomEight\" element={<RoomEight openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomEightStatus={this.state.roomEightStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} />} /> */}\r\n\r\n                    <Route path=\"/RoomNine\" element={<RoomNine resetRoomStatus={resetRoomStatus} useHealthPotion={useHealthPotion} roomMovement={roomMovement} enemyOne={enemyOne} enemyTwo={enemyTwo} enemyThree={enemyThree} roomNineStatus={roomNineStatus} currentRoom={currentRoom}  numberOfEnemiesInRoom={numberOfEnemiesInRoom} startCombatCheck={startCombatCheck} startCombat={startCombat} playerAttacked={playerAttacked} playerAttackTimerState={playerAttackTimerState} playerAttackTimerStateMax={playerAttackTimerStateMax} playerAttackMove={playerAttackMove} />} />\r\n\r\n                    {/* <Route path=\"/RoomTen\" element={<RoomTen resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomTenStatus={this.state.roomTenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} /> */}\r\n\r\n                    {/* <Route path=\"/RoomEleven\" element={<RoomEleven resetRoomStatus={this.resetRoomStatus} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomElevenStatus={this.state.roomElevenStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward} enemyHealth={this.state.enemyHealth} enemy2AttackLow={this.state.enemy2AttackLow} enemy2AttackHigh={this.state.enemy2AttackHigh} enemy2Speed={this.state.enemy2Speed} enemy2Armor={this.state.enemy2Armor} enemy2Reward={this.state.enemy2Reward}/>} /> */}\r\n\r\n                    {/* <Route path=\"/RoomTwelve\" element={<RoomTwelve openChest={this.openChest} numberOfEnemiesInRoom={this.state.numberOfEnemiesInRoom} roomTwelveStatus={this.state.roomTwelveStatus} roomMovement={this.roomMovement} playerAttackMove={this.playerAttackMove} playerDodgeMove={this.playerDodgeMove} enemyHealth={this.state.enemyHealth} enemyAttackLow={this.state.enemyAttackLow} enemyAttackHigh={this.state.enemyAttackHigh} enemySpeed={this.state.enemySpeed} enemyArmor={this.state.enemyArmor} enemyReward={this.state.enemyReward}/>} /> */}\r\n                </Routes>\r\n            </BrowserRouter>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\TopBar\\TopBar.jsx",["194"],"import React, {Component} from \"react\";\r\nimport axios from 'axios';\r\n\r\nclass TopBar extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>This will be at the top of every page.</h2>\r\n                <h5>Exp and Level and stats and stuff here. Should change as the game goes without refreshing.</h5>\r\n                <h2>BUTTON TO RETURN HOME</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TopBar;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\GameBoard\\GameBoard.jsx",["195","196","197"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomOnePNG from './GameRoomOnePNG.png';\r\n\r\nconst GameBoard = (props) => {\r\n\r\n        return (\r\n            <nav>\r\n            <div>\r\n                <li>\r\n                    <button className=\"healthPotion\" onClick={() => props.useHealthPotion()}>Use health potion</button>\r\n                </li>\r\n                <h2>This Is The GameBoard Room One</h2>\r\n                <h5>It is the first \"bonfire\"</h5>\r\n                <h2>Here is the store! Spend coins to upgrade yourself.</h2>\r\n            </div>\r\n            <ul>\r\n                <h3>Health is 5 coins. (Gives you +10 max health) </h3>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"health\")}> Buy 10 Health </button>\r\n                </li>\r\n                <h3>Minimum Attack is 6 coins. Maximum attack is 3 coins. (Upgrades your minimum or maximum attack by 1) </h3>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"attackLow\")}> Increase Minimum Attack By 1 </button>\r\n                </li>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"attackHigh\")}> Increase Maximum Attack By 1 </button>\r\n                </li>\r\n                <h3>Speed is 2 coins. (Upgrades your speed by 1) </h3>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"speed\")}> Buy 1 Speed </button>\r\n                </li>\r\n                <h3>Armor is 3 coins. (Upgrades your armor by 1) </h3>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"armor\")}> Buy 1 Armor </button>\r\n                </li>\r\n                <h3>Health Potion is 2 coins. (Gives you another health potion, max 10) </h3>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"healthPotion\")}> Buy 1 Health Potion </button>\r\n                </li>\r\n                <h3>Stamina Potion is 1 coin. (Gives you another stamina potion, max 8) </h3>\r\n                <li>\r\n                    <button className=\"storeButton\" onClick={() => props.buyFromStore(\"staminaPotion\")}> Buy 1 Stamina Potion </button>\r\n                </li>\r\n            </ul>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomTwo\" >\r\n                        <button className=\"circle\" onClick={() => props.roomMovement(2)}>Go to room Two</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomOnePNG} alt=\"GameRoomOnePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\nexport default GameBoard;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\Layout\\Layout.jsx",[],"C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\Home\\Home.jsx",["198","199","200","201","202"],"import React , { Component } from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst Home = (props) => {\r\n\r\n\r\n    function handleSubmit(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer) {\r\n        props.pickClass(health, maxHealth, attackLow, attackHigh, speed, maxSpeed, armor, coins, healthPotion, staminaPotion, attackTimer)\r\n    }\r\n\r\n    const showToastMessage = () => {\r\n        toast.success('TEST Success Notification !', {\r\n            position: toast.POSITION.TOP_RIGHT\r\n        });\r\n    }\r\n\r\n        return(\r\n                <div>\r\n                    <div class=\"container\">\r\n                        <div class=\"row justify-content-md-center\">\r\n                            <div class=\"col col-lg-6\">\r\n                                <h1>This is the homepage</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row justify-content-md-center\">\r\n                            <div class=\"col col-lg-6\">\r\n                                <h1>Intro and story go here.</h1>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row justify-content-md-center\">\r\n                            <div class=\"col col-lg-4\">\r\n                                <h5>Pick Your Class</h5>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row justify-content-md-center\">\r\n                            <div class=\"col col-lg-4\">\r\n                                <button className=\"pickClass\" onClick={() => handleSubmit(100, 100, 3, 5, 5, 5, 1, 2, 1, 1, 4)}>Warrior</button>\r\n                                <button className=\"pickClass\" onClick={() => handleSubmit(150, 150, 2, 4, 4, 4, 3, 2, 2, 1, 2)}>Tank</button>\r\n                                <button className=\"pickClass\" onClick={() => handleSubmit(25, 25, 8, 12, 4, 4, 1, 2, 1 , 1, 2)}>Glass Cannon</button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row justify-content-md-center\">\r\n                            <div class=\"col col-lg-4\">\r\n                            <Link to=\"/GameBoard\" >\r\n                                <button className=\"gameBoardButton\">Go to room One</button>\r\n                            </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomThree\\RoomThree.jsx",["203","204","205"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomThreePNG from './GameRoomThreePNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\n\r\nconst RoomThree = (props) => {\r\n    if(props.roomThreeStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Three</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering a dangerous Square. It has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coins. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomThreePNG} alt=\"GameRoomOnePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n    if(props.roomThreeStatus === 1){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This is Room Three</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>You killed the dangerous Square! It rewarded you with {props.enemyReward} coins.</h2>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/RoomTwo\" >\r\n                            <button className=\"circle\" onClick={() => props.roomMovement(2)}>Go to room Two</button>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/RoomFour\" >\r\n                            <button className=\"circle\" onClick={() => props.roomMovement(4)}>Go to room Four</button>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/RoomFive\" >\r\n                            <button className=\"circle\" onClick={() => props.roomMovement(5)}>Go to room Five</button>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            <div>\r\n                <img src={GameRoomThreePNG} alt=\"GameRoomOnePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomThree;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomTwo\\RoomTwo.jsx",["206","207","208","209","210","211","212"],"C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomSeven\\RoomSeven.jsx",["213","214","215"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomSevenPNG from './GameRoomSevenPNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\nconst RoomSeven = (props) => {\r\n    if(props.roomSevenStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Seven</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering two dangerous Squares. </h2>\r\n                <h2>The first square has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coin. </h2>\r\n                <h2>The second dangerous square has {props.enemy2Health} health, {props.enemy2Attack} attack, {props.enemy2Speed} speed, {props.enemy2Armor} armor, and will reward you with {props.enemy2Reward} coin. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomSevenPNG} alt=\"GameRoomSevenPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomSevenStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Seven</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed both dangerous squares. They rewarded you with {props.enemyReward} coins each. </h2>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomFive\" >\r\n                        <button className=\"roomButton\" onClick={() => props.roomMovement(5)}>Go to room Five</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomSix\" >\r\n                    <button className=\"square\" onClick={() => props.roomMovement(6)}>Go to room Six</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomNine\">\r\n                        <button className=\"circle\" onClick={() => props.roomMovement(9)}>Go to room Nine</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomTen\">\r\n                        <button className=\"circle\" onClick={() => props.roomMovement(10)}>Go to room Ten</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomSevenPNG} alt=\"GameRoomSevenPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomSeven;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomSix\\RoomSix.jsx",["216","217","218"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomSixPNG from './GameRoomSixPNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\nimport EnemyVisuals from \"../EnemyVisuals/EnemyVisuals\";\r\n\r\nconst RoomSix = (props) => {\r\n    \r\n    if(props.roomSixStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Six</h2>\r\n                </div>\r\n                <div>\r\n                    <EnemyVisuals currentRoom={props.currentRoom} enemyOne={props.enemyOne} enemyTwo={props.enemyTwo} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />            \r\n                </div>\r\n                <div>\r\n                    <DamageEffects resetRoomStatus={props.resetRoomStatus} useHealthPotion={props.useHealthPotion} playerAttacked={props.playerAttacked} playerAttackTimerState={props.playerAttackTimerState} playerAttackTimerStateMax={props.playerAttackTimerStateMax} startCombat={props.startCombat} startCombatCheck={props.startCombatCheck} playerAttackMove={props.playerAttackMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n                </div>\r\n                <div>\r\n                    <img src={GameRoomSixPNG} alt=\"GameRoomSixPNG\" />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomSixStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Six</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed both dangerous circles. They rewarded you with {props.enemyReward} coins each. </h2>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomTwo\" >\r\n                        <button className=\"gameBoardButton\" onClick={() => props.roomMovement(2)}>Go to room Two</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomSeven\" >\r\n                    <button className=\"square\" onClick={() => props.roomMovement(7)}>Go to room Seven</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomEight\">\r\n                        <button className=\"circle\" onClick={() => props.roomMovement(8)}>Go to room Eight</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomNine\">\r\n                        <button className=\"circle\" onClick={() => props.roomMovement(9)}>Go to room Nine</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomSixPNG} alt=\"GameRoomSixPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomSix;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomFive\\RoomFive.jsx",["219","220","221"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomFivePNG from './GameRoomFivePNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\nconst RoomFive = (props) => {\r\n    if(props.roomFiveStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Five</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering a parallelogram and a trapezium. </h2>\r\n                <h2>The parallelogram has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coins. </h2>\r\n                <h2>The trapezium has {props.enemy2Health} health, {props.enemy2Attack} attack, {props.enemy2Speed} speed, {props.enemy2Armor} armor, and will reward you with {props.enemy2Reward} coins. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomFivePNG} alt=\"GameRoomFivePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomFiveStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Five</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed both enemies. They rewarded you with 15 (Hard coded) coins total. </h2>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomThree\" >\r\n                        <button className=\"gameBoardButton\" onClick={() => props.roomMovement(3)}>Go to room Three</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomSeven\" >\r\n                    <button className=\"square\" onClick={() => props.roomMovement(7)}>Go to room Seven</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomEleven\">\r\n                        <button className=\"circle\" onClick={() => props.roomMovement(11)}>Go to room Eleven</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomFivePNG} alt=\"GameRoomFivePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomFive;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomTen\\RoomTen.jsx",["222","223","224"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomTenPNG from './GameRoomTenPNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\nconst RoomTen = (props) => {\r\n    if(props.roomTenStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Ten</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering two very dangerous hexagons. </h2>\r\n                <h2>The first hexagon has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coin. </h2>\r\n                <h2>The second dangerous hexagon has {props.enemy2Health} health, {props.enemy2Attack} attack, {props.enemy2Speed} speed, {props.enemy2Armor} armor, and will reward you with {props.enemy2Reward} coin. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomTenPNG} alt=\"GameRoomTenPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomTenStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Ten</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed both dangerous hexagons. They rewarded you with {props.enemyReward} coins each. </h2>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomSeven\" >\r\n                        <button className=\"gameBoardButton\" onClick={() => props.roomMovement(7)}>Go to room Seven</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomTwelve\" >\r\n                    <button className=\"square\" onClick={() => props.roomMovement(12)}>Go to room Twelve</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomTenPNG} alt=\"GameRoomTenPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomTen;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomTwelve\\RoomTwelve.jsx",["225","226","227"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomTwelvePNG from './GameRoomTwelvePNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\nconst RoomTwelve = (props) => {\r\n    if(props.roomTwelveStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Twelve</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering a BOSS Heptagon. It has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coins. You can only kill this enemy one time and is keeping a chest full of goodies. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomTwelvePNG} alt=\"GameRoomTwelvePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomTwelveStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Twelve</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed the boss Heptagon. It rewarded you with {props.enemyReward} coins and left a chest. </h2>\r\n                <button className=\"openChest\" onClick={() => props.openChest()}>Open Chest</button>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomTen\" >\r\n                        <button className=\"square\" onClick={() => props.roomMovement(10)}>Go to room Ten</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomEleven\" >\r\n                        <button className=\"square\" onClick={() => props.roomMovement(11)}>Go to room Eleven</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomTwelvePNG} alt=\"GameRoomTwelvePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n    if (props.roomTwelveStatus === 2) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Twelve</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>You killed the boss Heptagon. It rewarded you with {props.enemyReward} coins and left a chest. </h2>\r\n                    <h2>You opened the chest in this room. It rewarded you with +15 health per health potion.</h2>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/RoomTen\" >\r\n                            <button className=\"square\" onClick={() => props.roomMovement(10)}>Go to room Ten</button>\r\n                        </Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/RoomEleven\" >\r\n                            <button className=\"square\" onClick={() => props.roomMovement(11)}>Go to room Eleven</button>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                    <img src={GameRoomTwelvePNG} alt=\"GameRoomTwelvePNG\" />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomTwelve;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomNine\\RoomNine.jsx",["228","229","230","231"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomNinePNG from './GameRoomNinePNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\nimport EnemyVisuals from \"../EnemyVisuals/EnemyVisuals\";\r\n\r\nconst RoomNine = (props) => {\r\n    if(props.roomNineStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Nine</h2>\r\n                </div>\r\n                <div>\r\n                    <EnemyVisuals currentRoom={props.currentRoom} enemyOne={props.enemyOne} enemyTwo={props.enemyTwo} enemyThree={props.enemyThree} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />            \r\n                </div>\r\n                <div>\r\n                    <DamageEffects resetRoomStatus={props.resetRoomStatus} useHealthPotion={props.useHealthPotion} playerAttacked={props.playerAttacked} playerAttackTimerState={props.playerAttackTimerState} playerAttackTimerStateMax={props.playerAttackTimerStateMax} startCombat={props.startCombat} startCombatCheck={props.startCombatCheck} playerAttackMove={props.playerAttackMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n                </div>\r\n                <div>\r\n                    <img src={GameRoomNinePNG} alt=\"GameRoomNinePNG\" />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomNineStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Nine</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed all the shapes. They rewarded you with 25 (Hard Coded number, might need to change after balancing) coins total. </h2>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomSix\" >\r\n                        <button className=\"roomButton\" onClick={() => props.roomMovement(6)}>Go to room Six</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomSeven\" >\r\n                        <button className=\"roomButton\" onClick={() => props.roomMovement(7)}>Go to room Seven</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>=\r\n                <img src={GameRoomNinePNG} alt=\"GameRoomNinePNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomNine;\r\n\r\n{/* <div>\r\n                <h2>You are encountering three different shapes! Be careful and think about what you should attack first. </h2>\r\n                <h2>Enemy one is a Semi-Circle, it has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coin. </h2>\r\n                <h2>The second enemy is a Parallelogram, it has {props.enemy2Health} health, {props.enemy2Attack} attack, {props.enemy2Speed} speed, {props.enemy2Armor} armor, and will reward you with {props.enemy2Reward} coin. </h2>\r\n                <h2>The third enemy is a Trapezium, it has {props.enemy3Health} health, {props.enemy3Attack} attack, {props.enemy3Speed} speed, {props.enemy3Armor} armor, and will reward you with {props.enemy3Reward} coin. </h2>\r\n            </div> */}","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomFour\\RoomFour.jsx",["232","233","234"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomFourPNG from './GameRoomFourPNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\n\r\nconst RoomFour = (props) => {\r\n    if(props.roomFourStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Four</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering a BOSS triangle. It has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coins. You can only kill this enemy one time and is keeping a chest full of goodies. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomFourPNG} alt=\"GameRoomFourPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomFourStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Four</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed the boss triangle. It rewarded you with {props.enemyReward} coins and left a chest. </h2>\r\n                <button className=\"openChest\" onClick={() => props.openChest()}>Open Chest</button>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomThree\" >\r\n                    <button className=\"square\" onClick={() => props.roomMovement(3)}>Go to room Three</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomFourPNG} alt=\"GameRoomFourPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n    if (props.roomFourStatus === 2) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Four</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>You killed the boss triangle. It rewarded you with {props.enemyReward} coins and left a chest. </h2>\r\n                    <h2>You opened the chest in this room. It rewarded you with +15 health per health potion.</h2>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/RoomThree\" >\r\n                        <button className=\"square\" onClick={() => props.roomMovement(3)}>Go to room Three</button>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                    <img src={GameRoomFourPNG} alt=\"GameRoomFourPNG\" />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomFour;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomEight\\RoomEight.jsx",["235","236","237"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomEightPNG from './GameRoomEightPNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\nconst RoomEight = (props) => {\r\n    if(props.roomEightStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Eight</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering a BOSS pentagon. It has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coins. You can only kill this enemy one time and is keeping a chest full of goodies. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomEightPNG} alt=\"GameRoomEightPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomEightStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Eight</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed the boss pentagon. It rewarded you with {props.enemyReward} coins and left a chest. </h2>\r\n                <button className=\"openChest\" onClick={() => props.openChest()}>Open Chest</button>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomSix\" >\r\n                    <button className=\"square\" onClick={() => props.roomMovement(6)}>Go to room Six</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomEightPNG} alt=\"GameRoomEightPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n    if (props.roomEightStatus === 2) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Eight</h2>\r\n                </div>\r\n                <div>\r\n                    <h2>You killed the boss pentagon. It rewarded you with {props.enemyReward} coins and left a chest. </h2>\r\n                    <h2>You opened the chest in this room. It rewarded you with +15 health per health potion.</h2>\r\n                </div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/RoomSix\" >\r\n                        <button className=\"square\" onClick={() => props.roomMovement(6)}>Go to room Six</button>\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <div>\r\n                    <img src={GameRoomEightPNG} alt=\"GameRoomEightPNG\" />\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomEight;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\RoomEleven\\RoomEleven.jsx",["238","239","240"],"import React, {Component} from \"react\";\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport GameRoomElevenPNG from './GameRoomElevenPNG.png';\r\nimport DamageEffects from \"../DamageEffects/DamageEffects\";\r\n\r\nconst RoomEleven = (props) => {\r\n    \r\n    if(props.roomElevenStatus === 0){\r\n        return (\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is Room Eleven</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You are encountering two BOSS triangles. </h2>\r\n                <h2>The first triangle has {props.enemyHealth} health, {props.enemyAttack} attack, {props.enemySpeed} speed, {props.enemyArmor} armor, and will reward you with {props.enemyReward} coin. </h2>\r\n                <h2>The second dangerous triangle has {props.enemy2Health} health, {props.enemy2Attack} attack, {props.enemy2Speed} speed, {props.enemy2Armor} armor, and will reward you with {props.enemy2Reward} coin. </h2>\r\n            </div>\r\n            <div>\r\n                <DamageEffects playerAttackMove={props.playerAttackMove} playerDodgeMove={props.playerDodgeMove} numberOfEnemiesInRoom={props.numberOfEnemiesInRoom} />\r\n            </div>\r\n            <div>\r\n                <img src={GameRoomElevenPNG} alt=\"GameRoomElevenPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n\r\n    if (props.roomElevenStatus === 1 ) {\r\n        return(\r\n            <nav>\r\n                <div>\r\n                    <h2>This Is The GameBoard Room Eleven</h2>\r\n                </div>\r\n            <div>\r\n                <h2>You killed both dangerous hexagons. They rewarded you with {props.enemyReward} coins each. </h2>\r\n            </div>\r\n            <ul>\r\n                <li>\r\n                    <Link to=\"/RoomFive\" >\r\n                        <button className=\"gameBoardButton\" onClick={() => props.roomMovement(5)}>Go to room Five</button>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/RoomTwelve\" >\r\n                        <button className=\"square\" onClick={() => props.roomMovement(12)}>Go to room Twelve</button>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n            <div>\r\n                <img src={GameRoomElevenPNG} alt=\"GameRoomElevenPNG\" />\r\n            </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RoomEleven;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\Navbar\\Navbar.jsx",["241","242","243","244","245","246","247"],"import React , { Component } from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport { Container } from 'react-bootstrap';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Navbar = (props) => {\r\n        return(\r\n            <div>\r\n                <h5>Here is the time {props.gameTick}</h5>\r\n                <div class=\"w-25 p-3, bg-success bg-opacity-75\">\r\n                    <div class=\"container\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <h5>Attack: {props.player.playerAttackLow} - {props.player.playerAttackHigh} </h5> \r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <h5>Armor: {props.player.playerArmor} </h5>\r\n                            </div>\r\n                        </div>\r\n                            <ProgressBar variant=\"danger\" min={0} max={props.player.playerMaxHealth} now={props.player.playerHealth} label={`Health ${props.player.playerHealth}/${props.player.playerMaxHealth}`}/>\r\n                            <ProgressBar variant=\"warning\" min={0} max={props.player.playerMaxSpeed} now={props.player.playerSpeed} label={`Speed ${props.player.playerSpeed}/${props.player.playerMaxSpeed}`}/>\r\n                        <div class=\"row\">\r\n                            <div class=\"col\">\r\n                                <h5>Health Potions: {props.player.playerHealthPotion}</h5> \r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <h5>Stamina Potions: {props.player.playerStaminaPotion} </h5>\r\n                            </div>\r\n                            <h5>Coins: {props.player.playerCoins} </h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <nav>\r\n                    <button className=\"devButton\" onClick={() => props.devButtonUpgrade()}>DEV BUTTON Upgrade + 5 dmg</button>\r\n                    <button className=\"devButton\" onClick={() => props.devButtonDowngrade()}>DEV BUTTON Downgrade - 5 dmg</button>\r\n                </nav>\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default Navbar;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\DamageEffects\\DamageEffects.jsx",["248","249","250","251","252","253","254"],"C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\EnemyVisuals\\EnemyVisuals.jsx",["255","256","257","258","259","260","261"],"import React , { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport './EnemyVisualsCSS.css'\r\n\r\n\r\nconst EnemyVisuals = (props) => {\r\n\r\n    function test2(){\r\n        let enemies = []\r\n        enemies.push(props.enemyOne, props.enemyTwo, props.enemyThree)\r\n        enemies.sort((a,b) => a.enemySpeed - b.enemySpeed)\r\n        console.log(enemies)\r\n        return(\r\n                <Container>\r\n                    <Row>\r\n                    {enemies.map(enemy =>                         \r\n                        <Col sm={4} className={`square border border-5, square bg-${enemy.enemyColor} rounded-6`}>\r\n                            <h1>{enemy.enemyName}</h1>\r\n                            <Row>\r\n                                <Col>\r\n                                    <h5>Attack: {enemy.enemyAttackLow} - {enemy.enemyAttackHigh}</h5>\r\n                                </Col>\r\n                                <Col>\r\n                                    <h5>Armor: {enemy.enemyArmor}</h5>\r\n                                </Col>\r\n                            </Row>\r\n                            <ProgressBar variant=\"danger\" min={0} max={enemy.enemyMaxHealth} now={enemy.enemyHealth} label={`Health ${enemy.enemyHealth}/${enemy.enemyMaxHealth}`}/>\r\n                            <ProgressBar variant=\"warning\" min={0} max={enemy.enemyMaxSpeed} now={enemy.enemySpeed} label={`Speed ${enemy.enemySpeed}/${enemy.enemyMaxSpeed}`}/>\r\n                        </Col>\r\n                    )}\r\n                    </Row>\r\n                </Container>\r\n        )\r\n    }\r\n\r\n    if(props.numberOfEnemiesInRoom === 1){\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} className=\"square border border-5, square bg-secondary rounded-6\">\r\n                        <h3>{props.enemyOne.enemyName}</h3>\r\n                        <ProgressBar variant=\"danger\" min={0} max={props.enemyOne.enemyMaxHealth} now={props.enemyOne.enemyHealth} label={`Health ${props.enemyOne.enemyHealth}/${props.enemyOne.enemyMaxHealth}`}/>\r\n                        <ProgressBar variant=\"warning\" min={0} max={props.enemyOne.enemyMaxSpeed} now={props.enemyOne.enemySpeed} label={`Speed ${props.enemyOne.enemySpeed}/${props.enemyOne.enemyMaxSpeed}`}/>\r\n                        <h3>Attack: {props.enemyOne.enemyAttackLow} - {props.enemyOne.enemyAttackHigh} </h3>\r\n                        <h3>Armor: {props.enemyOne.enemyArmor}</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    if(props.numberOfEnemiesInRoom === 2){\r\n        return(\r\n            <Container>\r\n                <Row>\r\n                    <Col sm={4} className=\"square border border-5, square bg-secondary rounded-6\">\r\n                        <h3>{props.enemyOne.enemyName}</h3>\r\n                        <ProgressBar variant=\"danger\" min={0} max={props.enemyOne.enemyMaxHealth} now={props.enemyOne.enemyHealth} label={`Health ${props.enemyOne.enemyHealth}/${props.enemyOne.enemyMaxHealth}`}/>\r\n                        <ProgressBar variant=\"warning\" min={0} max={props.enemyOne.enemyMaxSpeed} now={props.enemyOne.enemySpeed} label={`Speed ${props.enemyOne.enemySpeed}/${props.enemyOne.enemyMaxSpeed}`}/>\r\n                        <h3>Attack: {props.enemyOne.enemyAttackLow} - {props.enemyOne.enemyAttackHigh} </h3>\r\n                        <h3>Armor: {props.enemyOne.enemyArmor}</h3>\r\n                    </Col>\r\n                    <Col sm={4} className=\"square border border-5, square bg-secondary rounded-6\">\r\n                        <h3>{props.enemyTwo.enemyName}</h3>\r\n                        <ProgressBar variant=\"danger\" min={0} max={props.enemyTwo.enemyMaxHealth} now={props.enemyTwo.enemyHealth} label={`Health ${props.enemyTwo.enemyHealth}/${props.enemyTwo.enemyMaxHealth}`}/>\r\n                        <ProgressBar variant=\"warning\" min={0} max={props.enemyTwo.enemyMaxSpeed} now={props.enemyTwo.enemySpeed} label={`Speed ${props.enemyTwo.enemySpeed}/${props.enemyTwo.enemyMaxSpeed}`}/>\r\n                        <h3>Attack: {props.enemyTwo.enemyAttackLow} - {props.enemyTwo.enemyAttackHigh} </h3>\r\n                        <h3>Armor: {props.enemyTwo.enemyArmor}</h3>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    if(props.numberOfEnemiesInRoom === 3){\r\n        return(\r\n            <div>\r\n                {test2()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EnemyVisuals;","C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\PlayerAttackButton\\PlayerAttackButton.jsx",["262","263","264","265","266","267"],"C:\\Users\\freeb\\OneDrive\\Desktop\\Game_Project\\Game_Project_Frontend\\GameFrontEnd\\src\\components\\PlayerCloseEnemyAttackButton\\PlayerCloseEnemyAttackButton.jsx",["268","269","270","271","272","273","274"],"import React , { Component } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\r\nimport ProgressBar from 'react-bootstrap/ProgressBar';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nconst PlayerCloseEnemyAttackButton = (props) => {\r\n    if(props.playerAttackedCloseEnemy === 1){\r\n        return(\r\n            <ProgressBar variant=\"danger\" min={0} max={props.playerAttackCloseEnemyTimerStateMax} now={props.playerAttackCloseEnemyTimerState} label={`Attack in ${props.playerAttackCloseEnemyTimerState}/${props.playerAttackCloseEnemyTimerStateMax}`}/>\r\n        )\r\n    }\r\n    if(props.playerAttackedCloseEnemy === 2){\r\n            return(\r\n                <div>\r\n                    <button className=\"attackClosestMove\" onClick={() => props.playerAttackCloseEnemyMove()}>Power Attack Closest Enemy</button>\r\n                </div>\r\n            )\r\n        }\r\n    else{\r\n        return (\r\n            <div>\r\n                <h1> BROKEN </h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerCloseEnemyAttackButton;",{"ruleId":"275","severity":1,"message":"276","line":83,"column":37,"nodeType":"277","messageId":"278","endLine":83,"endColumn":38,"suggestions":"279"},{"ruleId":"275","severity":1,"message":"276","line":84,"column":49,"nodeType":"277","messageId":"278","endLine":84,"endColumn":50,"suggestions":"280"},{"ruleId":"281","severity":1,"message":"282","line":89,"column":17,"nodeType":"283","endLine":89,"endColumn":136},{"ruleId":"284","severity":1,"message":"285","line":94,"column":21,"nodeType":"283","endLine":97,"endColumn":37},{"ruleId":"286","severity":1,"message":"287","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"287","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"284","severity":1,"message":"285","line":19,"column":17,"nodeType":"283","endLine":19,"endColumn":108},{"ruleId":"286","severity":1,"message":"290","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":15},{"ruleId":"291","severity":1,"message":"292","line":80,"column":95,"nodeType":"293","messageId":"294","endLine":80,"endColumn":121},{"ruleId":"286","severity":1,"message":"295","line":8,"column":11,"nodeType":"288","messageId":"289","endLine":8,"endColumn":18},{"ruleId":"296","severity":1,"message":"297","line":32,"column":41,"nodeType":"298","messageId":"299","endLine":32,"endColumn":43},{"ruleId":"286","severity":1,"message":"287","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"296","severity":1,"message":"297","line":8,"column":38,"nodeType":"298","messageId":"299","endLine":8,"endColumn":40},{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"286","severity":1,"message":"304","line":1,"column":17,"nodeType":"288","messageId":"289","endLine":1,"endColumn":26},{"ruleId":"286","severity":1,"message":"305","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":16},{"ruleId":"286","severity":1,"message":"306","line":4,"column":40,"nodeType":"288","messageId":"289","endLine":4,"endColumn":44},{"ruleId":"286","severity":1,"message":"307","line":8,"column":8,"nodeType":"288","messageId":"289","endLine":8,"endColumn":14},{"ruleId":"286","severity":1,"message":"308","line":11,"column":8,"nodeType":"288","messageId":"289","endLine":11,"endColumn":17},{"ruleId":"286","severity":1,"message":"309","line":12,"column":8,"nodeType":"288","messageId":"289","endLine":12,"endColumn":16},{"ruleId":"286","severity":1,"message":"310","line":13,"column":8,"nodeType":"288","messageId":"289","endLine":13,"endColumn":16},{"ruleId":"286","severity":1,"message":"311","line":15,"column":8,"nodeType":"288","messageId":"289","endLine":15,"endColumn":17},{"ruleId":"286","severity":1,"message":"312","line":16,"column":8,"nodeType":"288","messageId":"289","endLine":16,"endColumn":17},{"ruleId":"286","severity":1,"message":"313","line":18,"column":8,"nodeType":"288","messageId":"289","endLine":18,"endColumn":15},{"ruleId":"286","severity":1,"message":"314","line":19,"column":8,"nodeType":"288","messageId":"289","endLine":19,"endColumn":18},{"ruleId":"286","severity":1,"message":"315","line":20,"column":8,"nodeType":"288","messageId":"289","endLine":20,"endColumn":18},{"ruleId":"286","severity":1,"message":"316","line":21,"column":8,"nodeType":"288","messageId":"289","endLine":21,"endColumn":21},{"ruleId":"286","severity":1,"message":"317","line":107,"column":11,"nodeType":"288","messageId":"289","endLine":107,"endColumn":28},{"ruleId":"286","severity":1,"message":"318","line":107,"column":30,"nodeType":"288","messageId":"289","endLine":107,"endColumn":50},{"ruleId":"286","severity":1,"message":"319","line":110,"column":12,"nodeType":"288","messageId":"289","endLine":110,"endColumn":27},{"ruleId":"286","severity":1,"message":"320","line":111,"column":12,"nodeType":"288","messageId":"289","endLine":111,"endColumn":26},{"ruleId":"286","severity":1,"message":"321","line":111,"column":28,"nodeType":"288","messageId":"289","endLine":111,"endColumn":45},{"ruleId":"286","severity":1,"message":"322","line":112,"column":12,"nodeType":"288","messageId":"289","endLine":112,"endColumn":26},{"ruleId":"286","severity":1,"message":"323","line":114,"column":12,"nodeType":"288","messageId":"289","endLine":114,"endColumn":27},{"ruleId":"286","severity":1,"message":"324","line":115,"column":12,"nodeType":"288","messageId":"289","endLine":115,"endColumn":27},{"ruleId":"286","severity":1,"message":"325","line":115,"column":29,"nodeType":"288","messageId":"289","endLine":115,"endColumn":47},{"ruleId":"286","severity":1,"message":"326","line":117,"column":12,"nodeType":"288","messageId":"289","endLine":117,"endColumn":25},{"ruleId":"286","severity":1,"message":"327","line":118,"column":12,"nodeType":"288","messageId":"289","endLine":118,"endColumn":28},{"ruleId":"286","severity":1,"message":"328","line":119,"column":12,"nodeType":"288","messageId":"289","endLine":119,"endColumn":28},{"ruleId":"286","severity":1,"message":"329","line":119,"column":30,"nodeType":"288","messageId":"289","endLine":119,"endColumn":49},{"ruleId":"330","severity":1,"message":"331","line":127,"column":1,"nodeType":"288","endLine":127,"endColumn":10,"suggestions":"332"},{"ruleId":"286","severity":1,"message":"287","line":2,"column":8,"nodeType":"288","messageId":"289","endLine":2,"endColumn":13},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":18,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"335","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":24},{"ruleId":"286","severity":1,"message":"336","line":13,"column":11,"nodeType":"288","messageId":"289","endLine":13,"endColumn":27},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"337","line":3,"column":8,"nodeType":"288","messageId":"289","endLine":3,"endColumn":19},{"ruleId":"286","severity":1,"message":"338","line":7,"column":10,"nodeType":"288","messageId":"289","endLine":7,"endColumn":19},{"ruleId":"286","severity":1,"message":"339","line":10,"column":8,"nodeType":"288","messageId":"289","endLine":10,"endColumn":11},{"ruleId":"286","severity":1,"message":"340","line":11,"column":8,"nodeType":"288","messageId":"289","endLine":11,"endColumn":11},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"341","severity":1,"message":"342","line":58,"column":1,"nodeType":"343","messageId":"344","endLine":63,"endColumn":23},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":16,"nodeType":"288","messageId":"289","endLine":1,"endColumn":25},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"304","line":1,"column":18,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"333","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":2,"column":25,"nodeType":"288","messageId":"289","endLine":2,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":2,"column":32,"nodeType":"288","messageId":"289","endLine":2,"endColumn":36},{"ruleId":"286","severity":1,"message":"338","line":4,"column":10,"nodeType":"288","messageId":"289","endLine":4,"endColumn":19},{"ruleId":"286","severity":1,"message":"339","line":5,"column":8,"nodeType":"288","messageId":"289","endLine":5,"endColumn":11},{"ruleId":"286","severity":1,"message":"340","line":6,"column":8,"nodeType":"288","messageId":"289","endLine":6,"endColumn":11},{"ruleId":"286","severity":1,"message":"304","line":1,"column":18,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"345","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"333","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":3,"column":25,"nodeType":"288","messageId":"289","endLine":3,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":3,"column":32,"nodeType":"288","messageId":"289","endLine":3,"endColumn":36},{"ruleId":"286","severity":1,"message":"335","line":6,"column":10,"nodeType":"288","messageId":"289","endLine":6,"endColumn":24},{"ruleId":"286","severity":1,"message":"346","line":6,"column":26,"nodeType":"288","messageId":"289","endLine":6,"endColumn":31},{"ruleId":"286","severity":1,"message":"304","line":1,"column":18,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"345","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"333","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":3,"column":25,"nodeType":"288","messageId":"289","endLine":3,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":3,"column":32,"nodeType":"288","messageId":"289","endLine":3,"endColumn":36},{"ruleId":"286","severity":1,"message":"347","line":8,"column":10,"nodeType":"288","messageId":"289","endLine":8,"endColumn":23},{"ruleId":"286","severity":1,"message":"348","line":8,"column":25,"nodeType":"288","messageId":"289","endLine":8,"endColumn":40},{"ruleId":"286","severity":1,"message":"304","line":1,"column":18,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"345","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"333","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":3,"column":25,"nodeType":"288","messageId":"289","endLine":3,"endColumn":30},{"ruleId":"286","severity":1,"message":"335","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":24},{"ruleId":"286","severity":1,"message":"346","line":5,"column":26,"nodeType":"288","messageId":"289","endLine":5,"endColumn":31},{"ruleId":"286","severity":1,"message":"304","line":1,"column":18,"nodeType":"288","messageId":"289","endLine":1,"endColumn":27},{"ruleId":"286","severity":1,"message":"345","line":2,"column":10,"nodeType":"288","messageId":"289","endLine":2,"endColumn":19},{"ruleId":"286","severity":1,"message":"333","line":3,"column":10,"nodeType":"288","messageId":"289","endLine":3,"endColumn":23},{"ruleId":"286","severity":1,"message":"334","line":3,"column":25,"nodeType":"288","messageId":"289","endLine":3,"endColumn":30},{"ruleId":"286","severity":1,"message":"306","line":3,"column":32,"nodeType":"288","messageId":"289","endLine":3,"endColumn":36},{"ruleId":"286","severity":1,"message":"335","line":5,"column":10,"nodeType":"288","messageId":"289","endLine":5,"endColumn":24},{"ruleId":"286","severity":1,"message":"346","line":5,"column":26,"nodeType":"288","messageId":"289","endLine":5,"endColumn":31},"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["349","350"],["351","352"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Replies' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'comment' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["353"],"no-negated-in-lhs",["354"],"'Component' is defined but never used.","'ReactDOM' is defined but never used.","'Link' is defined but never used.","'Layout' is defined but never used.","'RoomThree' is defined but never used.","'RoomFour' is defined but never used.","'RoomFive' is defined but never used.","'RoomSeven' is defined but never used.","'RoomEight' is defined but never used.","'RoomTen' is defined but never used.","'RoomEleven' is defined but never used.","'RoomTwelve' is defined but never used.","'DamageEffects' is defined but never used.","'currentRoomStatus' is assigned a value but never used.","'setCurrentRoomStatus' is assigned a value but never used.","'roomThreeStatus' is assigned a value but never used.","'roomFourStatus' is assigned a value but never used.","'setRoomFourStatus' is assigned a value but never used.","'roomFiveStatus' is assigned a value but never used.","'roomSevenStatus' is assigned a value but never used.","'roomEightStatus' is assigned a value but never used.","'setRoomEightStatus' is assigned a value but never used.","'roomTenStatus' is assigned a value but never used.","'roomElevenStatus' is assigned a value but never used.","'roomTwelveStatus' is assigned a value but never used.","'setRoomTwelveStatus' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPlayerAttackTimerState'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [playerAttackTimerState, runPlayerAttackTimer, playerAttackCloseEnemyTimerState, runPlayerAttackCloseEnemyTimer, enemyOne.enemyHealth, startCombatCheck, runEnemyOneAttackTimer, enemyTwo.enemyHealth, runEnemyTwoAttackTimer, enemyThree.enemyHealth, runEnemyThreeAttackTimer, enemiesInRoomCheck, playerAttackTimerStateMax, playerAttackTimer, playerAttackCloseEnemyTimerStateMax, playerAttackCloseEnemyTimer, enemyOneAttackTimer, enemyTwoAttackTimer, enemyThreeAttackTimer, setCurrentRoomStatusClearEnemy] as a second argument to the useEffect Hook.",["355"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'ToastContainer' is defined but never used.","'showToastMessage' is assigned a value but never used.","'ProgressBar' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","'toast' is defined but never used.","'CSSTransition' is defined but never used.","'TransitionGroup' is defined but never used.",{"messageId":"356","fix":"357","desc":"358"},{"messageId":"359","fix":"360","desc":"361"},{"messageId":"356","fix":"362","desc":"358"},{"messageId":"359","fix":"363","desc":"361"},"no-global-assign","no-unsafe-negation",{"desc":"364","fix":"365"},"removeEscape",{"range":"366","text":"367"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"368","text":"369"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"370","text":"367"},{"range":"371","text":"369"},"Add dependencies array: [playerAttackTimerState, runPlayerAttackTimer, playerAttackCloseEnemyTimerState, runPlayerAttackCloseEnemyTimer, enemyOne.enemyHealth, startCombatCheck, runEnemyOneAttackTimer, enemyTwo.enemyHealth, runEnemyTwoAttackTimer, enemyThree.enemyHealth, runEnemyThreeAttackTimer, enemiesInRoomCheck, playerAttackTimerStateMax, playerAttackTimer, playerAttackCloseEnemyTimerStateMax, playerAttackCloseEnemyTimer, enemyOneAttackTimer, enemyTwoAttackTimer, enemyThreeAttackTimer, setCurrentRoomStatusClearEnemy]",{"range":"372","text":"373"},[2213,2214],"",[2213,2213],"\\",[2292,2293],[2292,2292],[6512,6512],", [playerAttackTimerState, runPlayerAttackTimer, playerAttackCloseEnemyTimerState, runPlayerAttackCloseEnemyTimer, enemyOne.enemyHealth, startCombatCheck, runEnemyOneAttackTimer, enemyTwo.enemyHealth, runEnemyTwoAttackTimer, enemyThree.enemyHealth, runEnemyThreeAttackTimer, enemiesInRoomCheck, playerAttackTimerStateMax, playerAttackTimer, playerAttackCloseEnemyTimerStateMax, playerAttackCloseEnemyTimer, enemyOneAttackTimer, enemyTwoAttackTimer, enemyThreeAttackTimer, setCurrentRoomStatusClearEnemy]"]